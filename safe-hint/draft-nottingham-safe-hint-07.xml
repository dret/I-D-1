<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc tocdepth="1"?>

<rfc ipr="trust200902" docName="draft-nottingham-safe-hint-07" category="info">

  <front>
    <title abbrev="Preference for Safe Browsing">The "safe" HTTP Preference</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>safe</keyword> <keyword>preference</keyword> <keyword>child-protection</keyword>

    <abstract>


<t>This specification defines a “safe” preference for HTTP requests that expresses a desire to avoid
objectionable content, according to the definition of that term by the origin server.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Many Web sites have a “safe” mode, to assist those who don’t want to be exposed (or have their
children exposed) to objectionable content.</t>

<t>However, that goal is often difficult to achieve, because of the need to go to every Web site that
might be used, navigate to the appropriate page (possibly creating an account along the way) to get
a cookie <xref target="RFC6265"/> set in the browser, for each browser on every device used.</t>

<t>A more manageable approach is for the browser to proactively indicate a preference for safe
content. A user agent that supports doing so (whether it be an individual browser, or through an
Operating System HTTP library) need only be configured once to assure that the preference is
advertised to a set of sites, or even all sites.</t>

<t>This specification defines how to declare this desire in requests as a HTTP Preference <xref target="RFC7240"/>.</t>

<t>Note that this specification does not precisely define what “safe” is; rather, it is interpreted
within the scope of each Web site that chooses to act upon this information.</t>

<t>That said, the intent of “safe” is to allow end users (or those acting on their behalf) to express
a desire to avoid content that is considered objectionable within the cultural context of that
site; usually (but not always) content that is unsuitable for minors. The “safe” preference ought
not be used for other purposes.</t>

<t>Furthermore, sending “safe” does not guarantee that the Web site will use it. As such, its effect
can be described as “best effort,” but not to be relied upon. In other words, sending the
preference is no more reliable than going to each Web site and manually selecting a “safe” mode,
but it is considerably easier.</t>

<t>It is also important to note that the “safe” preference is not a reliable indicator that the end
user is a child; other users might have a desire for unobjectionable content, and some children
might browse without the preference being set.</t>

<t>Simply put, it is a statement by (or on behalf of) the end user to the effect “If your site has a
‘safe’ setting, this user is hereby opting into that, according to your definition of the term.”</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as
shown here.</t>

</section>
</section>
<section anchor="safe" title="The “safe” Preference">

<t>When present in a request, the “safe” preference indicates that the content which is not
objectionable is preferred, according to the origin server’s definition of the concept.</t>

<t>For example, a request that includes the “safe” preference:</t>

<figure><artwork><![CDATA[
GET /foo.html HTTP/1.1
Host: www.example.org
User-Agent: ExampleBrowser/1.0
Prefer: safe
]]></artwork></figure>

<t>User agents SHOULD include the “safe” preference in all HTTPS requests unless otherwise configured,
to ensure that the preference is available to the applicable resources. See <xref target="browsers"/> for more
information about configuring the set of resources “safe” is sent to.</t>

<t>Safe MAY be implemented in common HTTP libraries (e.g., an operating system might choose to insert
the preference in requests based upon system-wide configuration).</t>

<t>Origin servers that utilize the “safe” preference ought to document that they do so, along with the
criteria that they use to denote objectionable content. If a server has more fine-grained degrees
of “safety”, it SHOULD select a reasonable default to use, and document that; it MAY use additional
mechanisms (e.g., cookies <xref target="RFC6265"/>) to fine-tune.</t>

<t>A response corresponding to the request above might have headers that look like this:</t>

<figure><artwork><![CDATA[
HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: text/html
Preference-Applied: safe
Server: ExampleServer/2.0
Vary: Prefer
]]></artwork></figure>

<t>Here, the Preference-Applied response header (<xref target="RFC7240"/>) indicates that the site has applied the
preference. Servers are not required to send Preference-Applied, but are encouraged to where
possible.</t>

<t>Note that the Vary response header needs to be sent if the response is cacheable and might change
depending on the value of the “Prefer” header. This is not only true for those responses that are
“safe”, but also the default “unsafe” response.</t>

<t>See <xref target="RFC7234"/> Section 4.1 for more information the interaction between Vary and Web caching.</t>

<t>See <xref target="servers"/> for additional advice specific to Web servers wishing to use “safe”.</t>

</section>
<section anchor="implementation-status" title="Implementation Status">

<t><spanx style="emph">Note to RFC Editor: Please remove this section before publication.</spanx></t>

<t>This section records the status of known implementations of the protocol defined by this
specification at the time of posting of this Internet-Draft. Please note that the listing of any
individual implementation here does not imply endorsement by the IETF. Furthermore, no effort has
been spent to verify the information presented here that was supplied by IETF contributors. This is
not intended as, and must not be construed to be, a catalog of available implementations or their
features. Readers are advised to note that other implementations may exist.</t>

<t><list style="symbols">
  <t>Microsoft Internet Explorer - see https://support.microsoft.com/en-hk/help/2980016/</t>
  <t>Microsoft Bing - see https://developer.microsoft.com/en-us/microsoft-edge/testdrive/demos/familysearch/</t>
  <t>Mozilla Firefox - see https://support.mozilla.org/en-US/kb/block-and-unblock-websites-parental-controls-firef</t>
  <t>Cisco - see http://blogs.cisco.com/security/filtering-explicit-content</t>
</list></t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>The “safe” preference is not a secure mechanism; it can be inserted or removed by intermediaries
with access to the request stream (e.g. for “http” URLs). Therefore, it SHOULD NOT be included in
requests with the “http” scheme.</t>

<t>Its presence reveals limited information about the user, which may be of small assistance in
“fingerprinting” the user by sites. Therefore, user agents SHOULD NOT include it in requests when
the user has expressed a desire to avoid such attacks (e.g., some forms of “private mode” browsing).</t>

<t>By its nature, including “safe” in requests does not assure that all content will actually be safe;
it is only when servers elect to honor it that content might be “safe”.</t>

<t>Even then, a malicious server might adapt content so that it is even less “safe” (by some
definition of the word). As such, this mechanism on its own is not enough to assure that only
“safe” content is seen; those who wish to ensure that will need to combine its use with other
techniques (e.g., content filtering).</t>

<t>Furthermore, the server and user may have differing ideas regarding the semantics of “safe.” As
such, the “safety” of the user’s experience when browsing from site to site as well as over time
might (and probably will) change.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This specification registers the “safe” preference <xref target="RFC7240"/>:</t>

<t><list style="symbols">
  <t>Preference: safe</t>
  <t>Value: (no value)</t>
  <t>Description: Indicates that “safe” / “unobjectionable” content is preferred.</t>
  <t>Reference: (this document)</t>
  <t>Notes:</t>
</list></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC7240" target='https://www.rfc-editor.org/info/rfc7240'>
<front>
<title>Prefer Header for HTTP</title>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2014' month='June' />
<abstract><t>This specification defines an HTTP header field that can be used by a client to request that certain behaviors be employed by a server while processing a request.</t></abstract>
</front>
<seriesInfo name='RFC' value='7240'/>
<seriesInfo name='DOI' value='10.17487/RFC7240'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC6265" target='https://www.rfc-editor.org/info/rfc6265'>
<front>
<title>HTTP State Management Mechanism</title>
<author initials='A.' surname='Barth' fullname='A. Barth'><organization /></author>
<date year='2011' month='April' />
<abstract><t>This document defines the HTTP Cookie and Set-Cookie header fields. These header fields can be used by HTTP servers to store state (called cookies) at HTTP user agents, letting the servers maintain a stateful session over the mostly stateless HTTP protocol.  Although cookies have many historical infelicities that degrade their security and privacy, the Cookie and Set-Cookie header fields are widely used on the Internet.  This document obsoletes RFC 2965.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6265'/>
<seriesInfo name='DOI' value='10.17487/RFC6265'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to Alissa Cooper, Ilya Grigorik, Emma Llanso, Jeff Hughes, Lorrie Cranor, Doug Turner and
Dave Crocker for their comments.</t>

</section>
<section anchor="browsers" title="Sending “safe” from Web Browsers">

<t>As discussed in <xref target="safe"/>, there are many possible ways for the “safe” preference to be generated.
One possibility is for a Web browser to allow its users to configure the preference to be sent.</t>

<t>When doing so, it is important not to misrepresent the preference as binding to Web sites. For
example, an appropriate setting might be a checkbox with wording such as:</t>

<figure><artwork><![CDATA[
  [] Request "safe" content from Web sites
]]></artwork></figure>

<t>… along with further information available upon request.</t>

<t>Browsers might also allow the “safe” preference to be “locked” – that is, prevent modification
without administrative access, or a passcode.</t>

<t>Note that this specification does not require browsers to send “safe” on all requests, although
that is one possible implementation; e.g., alternate implementation strategies include blacklists
and whitelists.</t>

</section>
<section anchor="servers" title="Supporting “safe” on Web Sites">

<t>Web sites that allow configuration of a “safe” mode (for example, using a cookie) can add support
for the “safe” preference incrementally; since the preference will not be supported by all clients
immediately, it is necessary to have another way to configure it.</t>

<t>When honoring the safe preference, it is important that it not be possible to disable it through
the Web site’s interface, since “safe” may be configured and locked down by the browser or
computer’s administrator (e.g., a parent). If the site has such a means of configuration (e.g.,
stored user preferences) and the safe preference is received in a request, the “safer”
interpretation ought to be used.</t>

<t>The appropriate level of “safety” is a site-specific decision. When selecting it, sites ought to
bear in mind that disabling the preference might be considerably more onerous than through other
means, especially if the preference is generated based upon Operating System configuration.</t>

<t>Sites might offer different levels of “safeness” through Web configuration, they will need to
either inform their users of what level the “safe” hint corresponds to, or provide them with some
means of adjusting it.</t>

<t>If the user expresses a wish to disable “safe” mode, the site can remind them that the safe
preference is being sent, and ask them to consult their administrator (since “safe” might be set by
a locked-down Operating System configuration).</t>

<t>As explained in <xref target="safe"/>, responses that change based upon the presence of the “safe” preference
need to either carry the “Vary: Prefer” response header field, or be uncacheable by shared caches
(e.g., with a “Cache-Control: private” response header field). This is to avoid an unsafe cached
response being served to a client that prefers safe content (or vice versa).</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAE4R4FsAA41aXXMbuXJ9x69A6AdLWyQlK3v3g35IZFleO/FXLDlbqVQq
Bc6AJK5mBgwwI5q75f3t93Q3MJyhZFdebHE4APrz9OkGZ7OZal1b2YW+3Vg9
iWZlJ/r17e1H/THYlQ22Kawyy2Ww94vBI73yQd/gZf0i+F10zVqVvmhMjY3K
YFbtrPFti8cbU89o09nGNe3s/GdVmhbvXJw/+0UV+HPtw36hXbPySrltWOg2
dLG9OD//9fxCmWDNQv9mGxtMpXY+3K2D77YLdWf3+FQulJ5p2p3+3x7kxadi
46pytg2+tUXrfKNUbE1T/q+pfIPz9zaqrcN63fpCPmodfWixSew/t8EVbf5U
+Lq2Tdt/65rK5a20DqvClrHdV/0TbFzabbtZ6GdKma7d+MDyYiH2eDfX73sL
4W2txXjvTLg7/saHtWncH4b0WPATWxtXLXQNI/8r/TNvbMtfdMEt9KZtt3Fx
drbb7eb52zOlGh9q7HFvFzA1DH74pGazmTZL6GuKVqnbjYs6bm3hVq7gU3Vp
V1A2apNDZDsOBY6YYP+vs7GNut2YVtsveCdGXlTa6IKFSbS5965Ufvl3cYtZ
VhaWbVpYdqpNUcCr0JzebBGPfKxjCfxKtm1tqPVyz1/74Nau0dGGexvmSY/a
lWVllXqi3zRt8GWX/P/ONHv9u13q6FoItTH39qBO7Us7ZflidBGnbHy0erfx
uvTN01bvTNPS10tLeuG7Up9Abd4EkrigOOBgkPz9Kb3+qJ4Q9LXfWYg8FZXW
3lQaJvcrfK1Lt4LZu4rPM9gWb05xcGE6iMRmsLqxkADfrz39S3sddONNVe3W
m5bkxapyiui6d2vT2mxZs0VubIOjR1uztvoEUke3rPa6QNZR+GnTsEc6qE5p
s+aFO7Nn1daIOAOV/J2z+s8//+XTq6ufLn7629evcEeLGOeXlwQOpCfFiIUy
+YmGR0Xq0t67QqSEYS7hCQRKbRrIxEZjQWklDES7DLYlMfhLCmMI7pqS4pXc
ehSejBHZ/PqSTgsaJ5BTyQOx226R/BHeJsWj1ye7jcVRQTs2IkxBu9+7soOv
erVYHkDSeoM31IctcIotd7OPra0lKyq3DCbAaOwz30DQJcfCyq27wI8Km0Kv
CzZFObQc6OCiMiXM1boofjdsZQQDBzMLAnPCX1Ulj+bfTeON39EupS0qw0fi
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
PTdPVKnmGVj8H0uC5b5+KQAA

-->

</rfc>

