<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.10 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc tocdepth="1"?>

<rfc ipr="trust200902" docName="draft-nottingham-safe-hint-10" category="info">

  <front>
    <title abbrev="Preference for Safe Browsing">The "safe" HTTP Preference</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2019"/>

    <area>General</area>
    
    <keyword>safe</keyword> <keyword>preference</keyword> <keyword>child-protection</keyword>

    <abstract>


<t>This specification defines a “safe” preference for HTTP requests that expresses a desire to avoid
objectionable content, according to the definition of that term by the origin server.</t>

<t>Support for this preference by clients and servers is optional.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Many Web sites have a “safe” mode, to assist those who don’t want to be exposed (or have their
children exposed) to content to which they might object.</t>

<t>However, that goal is often difficult to achieve, because of the need to go to every Web site that
might be used, navigate to the appropriate page (possibly creating an account along the way) to get
a cookie <xref target="RFC6265"/> set in the browser, for each browser on every device used.</t>

<t>A more manageable approach is for the browser to proactively indicate a preference for safe
content. A user agent that supports doing so (whether it be an individual browser, or through an
Operating System HTTP library) need only be configured once to assure that the preference is
advertised to a set of sites, or even all sites.</t>

<t>This specification defines how to declare this desire in requests as a HTTP Preference <xref target="RFC7240"/>.</t>

<t>Note that this specification does not define what content might be considered objectionable, and so
the concept of “safe” is also not precisely defined. Rather, the term is interpreted by the server
and within the scope of each Web site that chooses to act upon this information.</t>

<t>That said, the intent of “safe” is to allow end users (or those acting on their behalf) to express
a desire to avoid content that is considered objectionable within the cultural context of that
site; usually (but not always) content that is unsuitable for minors. The “safe” preference is not
intended to be used for other purposes.</t>

<t>Furthermore, sending “safe” does not guarantee that the Web site will use it, nor that it will
apply a concept of “objectionable” that is consistent with the requester’s views. As such, its
effect can be described as “best effort,” and not to be relied upon. In other words, sending the
preference is no more reliable than going to each Web site and manually selecting a “safe” mode,
but it is considerably easier.</t>

<t>It is also important to note that the “safe” preference is not a reliable indicator that the end
user is a child; other users might have a desire for unobjectionable content, and some children
might browse without the preference being set.</t>

<t>Note also that the cultural context applies to the hosting location of a site, the content
provider, and the source of the content. It cannot be guaranteed that a user-agent and origin
server will have the same view of the concept of what is objectionable.</t>

<t>Simply put, it is a statement by (or on behalf of) the end user to the effect “If your site has a
‘safe’ setting, this user is hereby opting into that, according to your definition of the term.”</t>

<t>The mechanism described in this document does not have IETF consensus and is not a standard. It is
a widely deployed approach that has turned out to be useful, and is presented here so that server
and browser implementations can have a common understanding of how it operates.</t>

<t>This mechanism was presented for publication as an IETF Proposed Standard, but was not approved for
publication by the IESG despite having IETF consensus at that time. Concerns raised by the IESG
included the vagueness of the meaning of “safe”, the ability of a proxy to insert the hint outside
of a user’s control, and the fact that there is no way to know whether the hint was or was not
applied to the response returned by the server. While the current text is clear about these issues,
they remain as factors that block the IESG’s approval of this mechanism as an IETF Proposed
Standard.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as
shown here.</t>

</section>
</section>
<section anchor="safe" title="The “safe” Preference">

<t>When present in a request, the “safe” preference indicates that the user prefers that the origin
server to not respond with content which is designated as objectionable, according to the origin
server’s definition of the concept.</t>

<t>For example, a request that includes the “safe” preference:</t>

<figure><artwork><![CDATA[
GET /foo.html HTTP/1.1
Host: www.example.org
User-Agent: ExampleBrowser/1.0
Prefer: safe
]]></artwork></figure>

<t>Typically, user agents that emit the “safe” preference will include it in all requests with the
“https” URI scheme, although some might expose finer-grained controls over when it is sent; this
ensures that the preference is available to the applicable resources. User agents MUST NOT emit the
“safe” preference on requests with the “http” URI scheme (see <xref target="security"/>). See <xref target="browsers"/> for
more information about configuring the set of resources “safe” is sent to.</t>

<t>Safe MAY be implemented in common HTTP libraries (e.g., an operating system might choose to insert
the preference in requests based upon system-wide configuration).</t>

<t>Origin servers that utilize the “safe” preference ought to document that they do so, along with the
criteria that they use to denote objectionable content. If a server has more fine-grained degrees
of “safety”, it SHOULD select a reasonable default to use, and document that; it MAY use additional
mechanisms (e.g., cookies <xref target="RFC6265"/>) to fine-tune.</t>

<t>A response corresponding to the request above might have headers that look like this:</t>

<figure><artwork><![CDATA[
HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: text/html
Preference-Applied: safe
Server: ExampleServer/2.0
Vary: Prefer
]]></artwork></figure>

<t>Here, the Preference-Applied response header (<xref target="RFC7240"/>) indicates that the site has applied the
preference. Servers are not required to send Preference-Applied (even when they have applied the
preference), but are encouraged to where possible.</t>

<t>Note that the Vary response header needs to be sent if the response is cacheable and might change
depending on the value of the “Prefer” header. This is not only true for those responses that are
“safe”, but also the default “unsafe” response.</t>

<t>See <xref target="RFC7234"/> Section 4.1 for more information the interaction between Vary and Web caching.</t>

<t>See <xref target="servers"/> for additional advice specific to Web servers wishing to use “safe”.</t>

</section>
<section anchor="implementation-status" title="Implementation Status">

<t><spanx style="emph">Note to RFC Editor: Please remove this section before publication.</spanx></t>

<t>This section records the status of known implementations of the protocol defined by this
specification at the time of posting of this Internet-Draft. Please note that the listing of any
individual implementation here does not imply endorsement by the IETF. Furthermore, no effort has
been spent to verify the information presented here that was supplied by IETF contributors. This is
not intended as, and must not be construed to be, a catalog of available implementations or their
features. Readers are advised to note that other implementations may exist.</t>

<t><list style="symbols">
  <t>Microsoft Internet Explorer - see https://support.microsoft.com/en-hk/help/2980016/</t>
  <t>Microsoft Bing - see https://developer.microsoft.com/en-us/microsoft-edge/testdrive/demos/familysearch/</t>
  <t>Mozilla Firefox - see https://support.mozilla.org/en-US/kb/block-and-unblock-websites-parental-controls-firef</t>
  <t>Cisco - see http://blogs.cisco.com/security/filtering-explicit-content</t>
</list></t>

</section>
<section anchor="security" title="Security Considerations">

<t>The “safe” preference is not a secure mechanism; it can be inserted or removed by intermediaries
with access to the request stream (e.g. for “http” URLs). Therefore, it is prohibited from being
included in requests with the “http” scheme.</t>

<t>Its presence reveals limited information about the user, which may be of small assistance in
“fingerprinting” the user by sites. Therefore, user agents SHOULD NOT include it in requests when
the user has expressed a desire to avoid such attacks (e.g., some forms of “private mode” browsing).</t>

<t>By its nature, including “safe” in requests does not assure that all content will actually be safe;
it is only when servers elect to honor it that content might be “safe”.</t>

<t>Even then, a malicious server might adapt content so that it is even less “safe” (by some
definition of the word). As such, this mechanism on its own is not enough to assure that only
“safe” content is seen; those who wish to ensure that will need to combine its use with other
techniques (e.g., content filtering).</t>

<t>Furthermore, the server and user may have differing ideas regarding the semantics of “safe.” As
such, the “safety” of the user’s experience when browsing from site to site as well as over time
might (and probably will) change.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This specification registers the following entry in the “HTTP Preferences” registry <xref target="RFC7240"/>:</t>

<t><list style="symbols">
  <t>Preference: safe</t>
  <t>Value: (no value)</t>
  <t>Description: Indicates that “safe” / “unobjectionable” content is preferred.</t>
  <t>Reference: (this document)</t>
  <t>Notes:</t>
</list></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC7240" target='https://www.rfc-editor.org/info/rfc7240'>
<front>
<title>Prefer Header for HTTP</title>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2014' month='June' />
<abstract><t>This specification defines an HTTP header field that can be used by a client to request that certain behaviors be employed by a server while processing a request.</t></abstract>
</front>
<seriesInfo name='RFC' value='7240'/>
<seriesInfo name='DOI' value='10.17487/RFC7240'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC6265" target='https://www.rfc-editor.org/info/rfc6265'>
<front>
<title>HTTP State Management Mechanism</title>
<author initials='A.' surname='Barth' fullname='A. Barth'><organization /></author>
<date year='2011' month='April' />
<abstract><t>This document defines the HTTP Cookie and Set-Cookie header fields. These header fields can be used by HTTP servers to store state (called cookies) at HTTP user agents, letting the servers maintain a stateful session over the mostly stateless HTTP protocol.  Although cookies have many historical infelicities that degrade their security and privacy, the Cookie and Set-Cookie header fields are widely used on the Internet.  This document obsoletes RFC 2965.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6265'/>
<seriesInfo name='DOI' value='10.17487/RFC6265'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to Alissa Cooper, Ilya Grigorik, Emma Llanso, Jeff Hughes, Lorrie Cranor, Doug Turner and
Dave Crocker for their comments.</t>

</section>
<section anchor="browsers" title="Sending “safe” from Web Browsers">

<t>As discussed in <xref target="safe"/>, there are many possible ways for the “safe” preference to be generated.
One possibility is for a Web browser to allow its users to configure the preference to be sent.</t>

<t>When doing so, it is important not to misrepresent the preference as binding to Web sites. For
example, an appropriate setting might be a checkbox with wording such as:</t>

<figure><artwork><![CDATA[
  [] Request "safe" content from Web sites
]]></artwork></figure>

<t>… along with further information available upon request.</t>

<t>Browsers might also allow the “safe” preference to be “locked” – that is, prevent modification
without administrative access, or a passcode.</t>

<t>Note that this specification does not require browsers to send “safe” on all requests, although
that is one possible implementation; e.g., alternate implementation strategies include blacklists
and whitelists.</t>

</section>
<section anchor="servers" title="Supporting “safe” on Web Sites">

<t>Web sites that allow configuration of a “safe” mode (for example, using a cookie) can add support
for the “safe” preference incrementally; since the preference will not be supported by all clients
immediately, it is necessary to have another way to configure it.</t>

<t>When honoring the safe preference, it is important that it not be possible to disable it through
the Web site’s interface, since “safe” may be configured and locked down by the browser or
computer’s administrator (e.g., a parent). If the site has such a means of configuration (e.g.,
stored user preferences) and the safe preference is received in a request, the “safer”
interpretation ought to be used.</t>

<t>The appropriate level of “safety” is a site-specific decision. When selecting it, sites ought to
bear in mind that disabling the preference might be considerably more onerous than through other
means, especially if the preference is generated based upon Operating System configuration.</t>

<t>Sites might offer different levels of “safeness” through Web configuration, they will need to
either inform their users of what level the “safe” hint corresponds to, or provide them with some
means of adjusting it.</t>

<t>If the user expresses a wish to disable “safe” mode, the site can remind them that the safe
preference is being sent, and ask them to consult their administrator (since “safe” might be set by
a locked-down Operating System configuration).</t>

<t>As explained in <xref target="safe"/>, responses that change based upon the presence of the “safe” preference
need to either carry the “Vary: Prefer” response header field, or be uncacheable by shared caches
(e.g., with a “Cache-Control: private” response header field). This is to avoid an unsafe cached
response being served to a client that prefers safe content (or vice versa).</t>

</section>


  </back>

<!-- ##markdown-source:
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
HrCn/Z1qOqab1m3tXL8gJ/WQ0hsmRoN5kFmKquPMgid7s+5Qk4aQ7L+1EE3E
F0ySCDRLV7n2KIGJzX46kj1Q/oF6SQg7yuFdSwio+C1yxyeMiqg8qj5kV8QN
EjT4BMvInDTjYw2dJ4aZ5yU9QblRXUrQo0xxAgPsSA/4EN1lxGDm+jdAmY1A
5D1nZgIhguzKGvDdZYQ0SoLgmuCNiosTT8UpG5I2jaQt+14Cpx6zQiGj2A/4
xkocucgXnEAlJ6Aq7bvvqEQ2UraR3UBW2UElBB+xC85qevLm4/0DrMH/9dt3
/PnD7X9+vPtw+5I+37+6ef06f0hv3L969/H1y/6TPFcY+eLdmze3b1/KYDzV
J4/e3Pz3RKw2eff+4e7d25vXk/PwN0KylnZEIU1QI8j4+cV7/fSHyJCfPX36
E6oh+fLXp3/5AV9g8loW4zpAvrINoFuykRMKXxjEAJLLlJYICNCaA581OSRU
Q1r+HT36rNRvmDSFK8+X2Mn0ayk4lk2hz2SMsfLK4Ok4gUhyj24p5DlTQql8
Y1Gxro0o64zdnzYPRgs8CV/A7ZiWiBBSyfPJENxNexkjS5PYD18WeKHUH3/8
oX69fdBXq6aZb9ptxVXO1dP5U5TmoV1oasTE2eeNX6uPlEpvKJUu9K08/1kQ
F4OuldhhIXUmTa4ejjsoFZRqOig2U59l675Ghzgrx+1zUhV/yBVZYpxqwi2j
if744Q7FygaQDy1UxFpQizKzEUIjrQlNNZGfrYGTBBwRrGAQZgLkMJLAyWee
s+srwls/9IkxaTN74yrhlrmhQHhOTzCM+QpY8MeB7Cmis/zqXP6mPpdVs6xD
UfVFsFSIBgukA15//nw51/f8KObBgGCjLMM0eFCXRRBM1Xekz6mYzhsf1GhB
mjnEd6h5CrhgFEhpVgI/ptZBvU+078LO13MK95hbmTxKZ0CMI5Vkn2LUqZ4H
2liaECuBOMeMaEWWhKW7xC7fDTts0Xxdi7T2u/2Kz5HLMO/IaJdsDs7SwJmm
sf2TnQ+IBxB0ZvBiJ3KUlgn/F1k3CBHzXYEPoj1sHXLN7JmlXXtrg0p5uT1O
mFxGVJfyhMPdhDg7QMLEbhk2Ieg6kuQ5TUB2oz2asnSShVTOXtlS0s0Ko3YW
F9y8x7arLbeociYGfEX4G4BYQiJ42t4OK5ONNWU2SYWl4CqP0nyJkJRASD+7
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
1QRrMAAA

-->

</rfc>

