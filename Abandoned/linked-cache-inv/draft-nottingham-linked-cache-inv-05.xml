<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.10 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-nottingham-linked-cache-inv-05" category="info">

  <front>
    <title>Linked Cache Invalidation</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>
    <author initials="M." surname="Kelly" fullname="Mike Kelly">
      <organization></organization>
      <address>
        <email>mike@stateless.co</email>
        <uri>http://stateless.co</uri>
      </address>
    </author>

    <date year="2017"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This memo defines two new link types that indicate relationships between resources in terms of
cache invalidation, along with a HTTP cache-control extension that takes advantage of those
relationships to use them to extend response freshness. Collectively, this is referred to as Linked
Cache Invalidation (LCI).</t>



    </abstract>


    <note title="Note to Readers">


<t>The issues list for this draft can be found at
<eref target="https://github.com/mnot/I-D/labels/linked-cache-inv">https://github.com/mnot/I-D/labels/linked-cache-inv</eref>.</t>

<t>The most recent (often, unpublished) draft is at <eref target="https://mnot.github.io/I-D/linked-cache-inv/">https://mnot.github.io/I-D/linked-cache-inv/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/mnot/I-D/commits/gh-pages/linked-cache-inv">https://github.com/mnot/I-D/commits/gh-pages/linked-cache-inv</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>In normal operation, a HTTP <xref target="RFC7230"/> cache will invalidate a stored response if an
unsafe request (e.g., POST, PUT or DELETE) is made to its URI. HTTP also provides for such a
state-changing request to invalidate related resources (using the Location and Content-Location
headers in the response), but this is of limited utility, because those headers have defined
semantics, and can only occur once each.</t>

<t>Because of this, it is not practical to make a response that depends on the state of another
resource cacheable. For example, an update to a blog entry might change several different
resources, such as the user’s summary page, the blog’s “front” page, the blog’s Atom feed, and of
course the blog entry itself. If any of these resources is made cacheable, it will not reflect
those changes, causing confusion if the user tries to verify that their changes have been correctly
applied.</t>

<t>This memo introduces new link relation types <xref target="I-D.nottingham-rfc5988bis"/> that allow more
fine-grained relationships between resources to be defined, so that caches can invalidate all
related representations when the state of one changes. It also introduces a cache-control response
extension, so that responses using the relations can be cached by implementations that understand
these relations.</t>

<section anchor="example" title="Example">

<t>Taking the blog use case described above, imagine that we have the following related resources:</t>

<t><list style="symbols">
  <t>http://example.com/blog/2012/05/04/hi [the blog entry]</t>
  <t>http://example.com/blog/2012/05/04/hi/comments [full comments for the entry]</t>
  <t>http://example.com/blog/ {the blog “home”}</t>
  <t>http://example.com/users/bob/ [the user page, listing his entries]</t>
</list></t>

<t>When someone comments on Bob’s blog entry, they might send a request like this:</t>

<figure><artwork><![CDATA[
POST /cgi-bin/blog.cgi HTTP/1.1
Host: example.com
Content-Type: application/x-www-form-urlencoded
Content-Length: 7890

[...]
]]></artwork></figure>

<t>When the comment is successful, it’s typical to redirect the client back to the original blog page,
with a response like this:</t>

<figure><artwork><![CDATA[
HTTP/1.1 302 Moved Temporarily
Location: http://example.com/blog/2012/05/04/hi
Content-Length: 0

]]></artwork></figure>

<t>Which would invalidate the blog entry URI, as per HTTP’s normal operation.</t>

<t>To invalidate the full comments page for the entry, the relationship can be described in that
page’s response headers:</t>

<figure><artwork><![CDATA[
HTTP/1.1 200 OK
Content-Type: text/html
Content-Length: 5555
Link: </blog/2012/05/04/hi>; rel="inv-by"
Cache-Control: no-cache, inv-maxage=600

[...]
]]></artwork></figure>

<t>This declares that whenever the entry page (the target of the link header) changes, this response
(the full comments page) changes as well; it’s invalidated by the link target.</t>

<t>Note that the full comments page also carries a Cache-Control header that instructs “normal” caches
not to reuse this response, but allows those caches that are aware of LCI to consider it fresh for
ten minutes.</t>

<t>To invalidate the blog home page and user page, it’s impractical to list all of the resources that
might change if a new entry is posted; not only are there many of them, but their URLs might not be
known when the pages are cached. To address this, the POST response itself (i.e., when the comment
is made) can nominate resources to invalidate, using the ‘invalidates’ relation, making that
response:</t>

<figure><artwork><![CDATA[
HTTP/1.1 302 Moved Temporarily
Location: http://example.com/blog/2012/05/04/hi
Link: <http://example.com/blog/>; rel="invalidates",
      <http://example.com/users/bob/>; rel="invalidates"
Content-Length: 0

]]></artwork></figure>

<t>Depending on how important it is to see updates on the home page and user page, those responses can
either allow caching regardless of support for LCI, like this:</t>

<figure><artwork><![CDATA[
Cache-Control: max-age=300
]]></artwork></figure>

<t>… or they can only allow caching by LCI-aware caches, like this:</t>

<figure><artwork><![CDATA[
Cache-Control: no-cache, inv-maxage=300
]]></artwork></figure>

<t>Together, these techniques can be used to invalidate a variety of related responses.</t>

<t>It is important to note that the invalidations are only effective in the caches that the client’s
request stream travels through. This means other caches will continue to serve the “old” content
until the invalidation event is propagated to them (see below) or the cached responses become stale.</t>

<t>When multiple caches are close together, the HyperText Caching Protocol (HTCP) <xref target="RFC2756"/> can be used to propagate invalidation events between them.</t>

</section>
<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"/>.</t>

<t>This document uses the Augmented Backus-Naur Form (ABNF) notation of <xref target="RFC7230"/>, and explicitly
includes the following rules from it: delta-seconds.</t>

</section>
</section>
<section anchor="invalidates" title="The ‘invalidates’ Link Relation Type">

<t>The ‘invalidates’ link relation type allows a response that signifies a state change on the server
to indicate one or more associated URIs whose states have also changed.</t>

<t><list style="symbols">
  <t>Relation name: invalidates</t>
  <t>Description: Indicates that when the link context changes, the link target also has changed.</t>
  <t>Reference: [this document]</t>
  <t>Notes:</t>
</list></t>

</section>
<section anchor="inv-by" title="The ‘inv-by’ Link Relation Type">

<t>The ‘inv-by’ link relation type allows a response to nominate one or more other resources that
affect the state of the resource it’s associated with. That is, when one of the nominated resources
changes, it also changes the state of this response’s resource.</t>

<t><list style="symbols">
  <t>Relation name: inv-by</t>
  <t>Description: Indicates that when the link target changes, the link’s context has also changed.</t>
  <t>Reference: [this document]</t>
  <t>Notes:</t>
</list></t>

</section>
<section anchor="inv-maxage" title="The ‘inv-maxage’ Response Cache-Control Extension">

<t>When present, the ‘inv-maxage’ cache-control extension indicates the number of seconds that caches
who implement Linked Cache invalidation can consider responses fresh for, provided they are not
invalidated.</t>

<section anchor="inv-maxage-syntax" title="inv-maxage Syntax">

<t>The inv-maxage cache-control extension is parameterised with a numeric argument:</t>

<figure><artwork><![CDATA[
"inv-maxage" "=" ( delta-seconds | ( <"> delta-seconds <"> ) )
]]></artwork></figure>

<t>Note that the argument MAY occur in either token or quoted-string form.</t>

<t>If the argument is missing or otherwise does not conform to the BNF rule, it is invalid and MUST be
ignored by caches.</t>

<t>If the directive appears more than once in a response, each instance is invalid and MUST be ignored
by caches.</t>

</section>
<section anchor="inv-maxage-semantics" title="inv-maxage Semantics">

<t>HTTP caches MAY, if they fully implement this specification, disregard the HTTP response
cache-control directives ‘no-cache’, ‘max-age’ and ‘s-maxage’ when a valid ‘inv-maxage’
cache-control directive is present in a response, using its value as a replacement for max-age.</t>

<t>HTTP caches using inv-maxage to calculate freshness MUST invalidate all stored responses whose
request-URIs (after normalisation) are the target of a ‘invalidates’ link relation contained in a
successful response to a state-changing request, provided that they are allowed.</t>

<t>HTTP caches using inv-maxage to calculate freshness MUST invalidate all stored responses containing
a ‘inv-by’ link relation whose target is the current request-URI (after normalisation) upon receipt
of a successful response to a state-changing request.</t>

<t>Likewise, HTTP caches using inv-maxage to calculate freshness MUST invalidate all stored responses
containing a ‘inv-by’ link relation whose target is the content of either the Location or
Content-Location response headers (after normalisation) upon receipt of a successful response to a
state-changing request.</t>

<t>Here, a response is considered to “contain” a link relation if it is carried in the Link HTTP
header <xref target="I-D.nottingham-rfc5988bis"/>. I.e., it is not necessary to look at the response body.</t>

<t>“Invalidate” means that the cache will either remove all stored responses related to the effective
request URI, or will mark these as “invalid” and in need of a mandatory validation before they can
be returned in response to a subsequent request.</t>

<t>A “successful” response is one with a 2xx or redirecting 3xx (e.g., 301, 302, 303, 307) status code.</t>

<t>A “state-changing” request is one with an unsafe method (e.g., POST, PUT, DELETE, PATCH), or one
that is not known to be safe.</t>

<t>In this context, “normalisation” means, in the case of a relative request-URI, that it is
absolutised using the value of the Host request header and the appropriate protocol scheme.</t>

<t>Finally, an invalidation based upon “invalidates” is “allowed” if the host part of the request-URI
(if absolute) or Host request header (if the request-URI is relative) matches the host part of the
target URI. This prevents some types of denial-of-service attacks.</t>

<t>Implementations SHOULD effect invalidations when they become aware of changes through other means;
e.g., HTCP <xref target="RFC2756"/> CLR messages, upon invalidations caused by other links (i.e., chained
“cascades” of linked invalidations), or when a changed response is seen (such as when HTTP
validation is unsuccessful).</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Linked Cache Invalidation does not guarantee that invalidations will be effected; e.g., they can be
lost due to network issues or cache downtime. Furthermore, it does not guarantee that all caches
that understand LCI will be made aware of invalidations that happen, because of how they originate.</t>

<t>Therefore, care should be taken that LCI invalidations are not relied upon (e.g., to purge
sensitive content).</t>

<t>Furthermore, while some care is taken to avoid denial-of-service attacks through invalidation,
cache efficiency may still be impaired under certain circumstances (e.g., arranging for one request
to invalidate a large number of responses), leading to a reduction in service quality.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document registers two entries in the Link Relation Type Registry; see <xref target="invalidates"/> and
<xref target="inv-by"/>.</t>

<t>It also registers a HTTP Cache Directive, “inv-maxage”; see <xref target="inv-maxage"/>.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference anchor="I-D.nottingham-rfc5988bis">
<front>
<title>Web Linking</title>

<author initials='M' surname='Nottingham' fullname='Mark Nottingham'>
    <organization />
</author>

<date month='August' day='11' year='2017' />

<abstract><t>This specification defines a model for the relationships between resources on the Web ("links") and the type of those relationships ("link relation types").  It also defines the serialisation of such links in HTTP headers with the Link header field.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-nottingham-rfc5988bis-08' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-nottingham-rfc5988bis-08.txt' />
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC2756" target='https://www.rfc-editor.org/info/rfc2756'>
<front>
<title>Hyper Text Caching Protocol (HTCP/0.0)</title>
<author initials='P.' surname='Vixie' fullname='P. Vixie'><organization /></author>
<author initials='D.' surname='Wessels' fullname='D. Wessels'><organization /></author>
<date year='2000' month='January' />
<abstract><t>This document describes HTCP, a protocol for discovering HTTP caches and cached data, managing sets of HTTP caches, and monitoring cache activity.  This is an experimental protocol, one among several proposals to perform these functions.  This memo defines an Experimental Protocol for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2756'/>
<seriesInfo name='DOI' value='10.17487/RFC2756'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to Michael Hausenblas for his input.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAC8EF10AA7Vaa3PbRrL9Pr9ilvkgaYsPWb5eJ3SSXUVyrlQrP1aW69at
VCo1BIbklAAMgwFE8/oqv31Pdw9elLRxPsSVYigQmJ5+nT7dg8lkoipXZXau
r1xxa1N9ZpK11ZfFnclcairnC5X6pDA5bklLs6wmha8qV6zWJp9k/MwkoWcm
rribHL9QeAi3nhw/e6kSfF35cjfXrlh6pdymnOuqrEN1cnz8zfGJMqU1c/3f
trClydTWl7er0tebubq1O/yVzrGRypaFrSbnJFupUJki/cVkvoCQnQ1q4+b6
p8onY40PV6S2qMY6+LIq7TLg2y6PX6rSJfgp8fnGxC85bsZProAe9melTF2t
fTlXeqI0/rkizPWbqX7bKsyXxRZvTHm7/4svV6Zw/8dWm/MVmxuXzXUOm/2D
PqZQhX+oS+x7XVWbMJ/NttvttPl1ti/9nzbLdn3B7tb2Lj4tE/f9A+aqbGZD
mCZ+KBdiBz+qwpc5VrmztMr1j2cnz559M4fP4Ln2B6Umk4k2CxgTNlTqZu2C
zm3udWqXsGHQ1dbrwm41RYaudhu6tDYVtEkdhYMubcZ7DWu3CXphq621Ba4G
X5cJ7naFhsfzoP1ScVzhSheLY02uX+mtq9ba6Iubm/daoi/xRVX6TNtPlS0C
bhW5lbnFoia9M0VlVhar4roPVg33UXldB4ufbE7feZGUdrXBHVYv8W1dkKX0
mc8ym5A5sh1ijgyA/xBjtiyRPnjYhJhL6mEu6cOrs8ujaTQkXG5/eUsflf/l
2prUloGMCp1DqLHvzIVKw/4ih9MP6hYwG67W2KGp1LdNFK1gk3oBX+YzCqbZ
5eR8lpmFzcJsP0+/n4qY3GP90ibIA33ol1B6rOtiUy8geG3ToygSsmHKVhCH
apTmvMjZEzAjCdeycLI2xYqcUFpWyKaD1R7bNuWmq8JstZ5s4LXHFWAT5i5N
M6vUV4QUpU/rhCFLXRaaAzrTfgNwibEjAfP5818Q3y9Pnh/f30v0IJ6yrAs0
iztD5cmfbQi4pTaFqotglhTEv8I9sJmdrqZj/f7dhxt8frxBNurz11evb14f
kdFyeJQiAqroj9eXUxFvsuD1pvR3LoVVyLuhThDNivNxwuYCqLRCaIFuZxy3
srGYMYd1oNsRu/rKJxJmAElEKrCzqCbNRbWWCOMUW9tWtaOxXtRVG8rIkMzB
+pBRVy5zFcJ8YRMj+YHU0c06a3NnY+KnKgB2isolwFMSTlHqi2ynfZLUJb4m
VluYGn77IS7GqegIfznC4HtYBbACnMhI6RypC0e0HuB8Tu0GmYldig5sMlrJ
4PG1LVVjFvGrWWR2qn+Eie0nk28yS5vT9YYtSamqF5lfaVip3CGUVusmWnWw
d1STdOqWyGzc0K5MtYT9FXgH0KQ8CLiU5waLULiO+QdaGT+MliX8MHr4w2nl
c720NhWDEdxhfQGh/rYQPDZbTvUlKbkTq9lg+5AZI61VmU3KIU1GBTYRYilx
XsxG1D8jcQPgXNYMmG7ZaoQq7SzDIszglrsIpmvryjaf2f0LQu/EA/uSChXJ
bDaZs+m0XxpcTEw80laGBn1jiUBGIu2nPWZRLpMX33z99cIF5CgLN1nmt0Cs
0iqKuMmqNBR4v1tQoMOiDVOiBrIcGytwnPbzPstUl2EbrAInyPJ6u7Z7QQcS
0lgD/qkks3vqmr3a1ISyaotUt5/mt6C7dG5Va0Cfl0v1AlFB0Zx3m+M1UBGQ
l8SQVBMjcQE45Kuv9GtJAjjH3DYyONIoHRMTyEwhKd2CIHrh7yiQcgMwism3
teJ0em7pyR+CU3uIBJ7w14ZjxLxjeCdRMxDDk9nxi9nxf83WDsxtEOw/f+mD
s4a96Z+WNeK8/VOKpf395fTnVvRo7XM7un/8ZsqGMFv4xUw2y9khyUzFjAxA
kU7ykDEgkf9DYRKwIkdHsy+E+g9+gbTvlGU0aGAnEN8wLeZnRPIIHWHL3377
TVGF0bNk5SYLV7ACU/zB9WT2bPpMXaCQz3Vv36pB/xsk2FxzXkoZmH2agG9O
iNVN6jKzReJT4ipNtbDFqlrP9cuvvzlW6qfpdPoz70D0IgtEnQh2AITwd4AL
CHKgHdK5gW9UT0eoIM8AFfDIwiS39Btd8qVDZOFetghbVEVa10L+vhkaffXz
4xP9BgGa6hubb3xpSgf0aSrd/MuC6IHOx6pR1QHgt77O0j447AEzKvqYqgD4
BTviIDygHISDfn+JYcCS4sOoHQ9zH7DWpH+XnU7oraKnD0JnsFia982Fdku/
++deTFRAodm6yrMHdniBf4o47Fx/+4jdvn9Fu/tuRA3fYjcSmjs5E5CbwwjC
06ixupvk5hP2+N3fjofRxOUhtUkGVhjRi/CVqm5nCTHOIf1dmXJlq1j9pIaI
rkddRWMG02Ls4eO2Pur4KCAdbdQridzOSYyvrRQRDEcST2/L4GNOZPRPTMmV
0+iBVeJmm14I/ROIKsiBBMwoViNF5ZpTR8hWTx3haFwDQ6RhsYJJcQS3Nlv6
hIXQYtAqqDrBkVCQAW5gKMwUHA3IKerKhkejkwOcADEqBVjqQZ6YKh/wNG5S
sLPGOb3SSyE6oFXEopkFRG4D03nqCF4xU2HCSEoQlUN30vGdvOGoREA+Xl+F
CJv01MKq28Jvi65Ac8/AC0nBnGroadIUOwuRc9JtDKodwWeepQ/d1ILSb/fQ
TkWSdcS5WHiYUNh4j2Z0lhz3ivhBdzkctGk9JnortxjmlryJPwfmYiY/dXMv
nZt9jsY8LNCPPtRVxMeefBJUz5m5k8qohWtQOUcagaxUsQGABYO1kZ23DP/J
UJQk6GgT/KKso8iJVJF8L/xkZcqU5hwUTKHekFiGXCTK+EGN2UMz4NeEAOw5
AIz1AIZpgetd1+UMJQI/sPREElLS9HflPIqardAbDxCCauNI/iubrAtHXKGp
DbBMutcqGn2HgLEVJ1GPpYnBkP2XbPfOD3i8GKBcf/QiCcXaWvREPAJpWsk+
FHXl/iCohs8A8KzJ0VWAPmZ0Y+nr1Rp5KV2CwercvzUrcfNCtBlIZSUyykg8
Rz5LR/wbpWWNW7IHe9WoI8JQ0GcjXFhz4R25PqQoW1g47Cg6suHVXTCh4aW4
A5dG0Efuk9dZ5ZAEzR7ZuRkFYdX3jr5AdS1vUFy5BFA8vC995RNUgcOLm7P3
R2h3/k4Dtpcv/sYDiIH/2g0/olDX3pAiNAIBqUdd4lsAxggmuo2cJfOdW8Qo
zVFRad58/HAzGsv/9dt3/P369b8+Xl6/PqfvHy5Or67aL80dHy7efbw6777J
dYUnz969efP67bk8/Ob0f0fSxo7evb+5fPf29GoksUFV3ic1E0ZGdu7GHE11
0V3xLCgMeI36/DkOH+/vmzayXaEOVrru03pFF/DED6CUdZi8NXVJjT7ce/rD
2x+PKJDFcoj9/sBHtmk/ER921LK6IsnqNK7b62rqjKYzJZp0B2qd2qwyk4Cw
KNLAltc3D8CdgFZfN60tsSz9+aveHffileFDD/vhpszvzz6CWxVuKexCetBY
VZthCOUIKrzvpq3UgyDGqWuGoYNPHKcCqCv1sxS7vFBs5oXB8JrUwv+100VG
z71948dz9tpGKtFllNjjch2H4mT9VPWZ2oBdieA1IqEVTrJ58JJYmu/3o4C6
OiJjBKRwg/xr7ApC+rQf8GPPBXzrl1nfdxW/b1GBrD2+Yxgch4OCPi0SDtVz
BjU9hITEDENkHixFnmsk9xps1RrSVX2nhX2pPQIpXQI//4RrYY8/5NXouwdO
haTG4eTSYVB9uV9bN0ktPMCD0R1DZv26HfiLj+X2+wjacYQzbqlYu9xTxwau
pzOsX+cL+JiIg+R+f3qkkELdJGZ4gjZAb8L4lo53VaZl5eNmHpwKryCkBICp
XlMiE5xOAf1hV1TmUzwu6C4/qRZ1KSV8DeR1IYYdkXHYvnQJRK7YC5GdjLol
R3r03UgfDiFQ/z+ufDv6fu8qXTnSR0Jahh1TI0CjWMSpMCpEZGyVv6WoL/Wv
NR5KJ3RaBxCmIQXxlOVwBeIMLjDDxiOchVtH0ytvZY5MM02qBXHUgILAeN6M
mqNZuRJwPUQLAWzlgf9iF53byZU5BtEds9lYUwbJfmhWyGAbephep0Zzbm7y
DP/4qDwd5am+vH0PNyN1pbqDrkD2G8dZ7Y770N40UHI+bGyCQpHETiN1QTiw
0BNaqu2Sh+HSahr0QUNID8b6IJLgA9bgILQ5xIBANJO062fXU+sKJeOU3Lea
dEx0VILlaipX/PMmM4moRow9bmQ6tEh8tLMcdb8mS2qivN3hndh+OO3dP+eJ
ZbEhrhOulIdmiayJ0x0X2KxHTaPaG02Y/1jayRgysibNVTc7GxSaWNofHAMN
IEJSSnCCyxXjw59mkrhzrKjMU6VT2ES0hRPwRI7T0YnuGfMJW9aQxAeRqDyK
LfkHzQP1r9BgEQyM9Z9lCNUZQv8xQ0i3QjHSAF7/tM6XXdfcXNsf6X2B4fR/
NNwTx4sUN6jH4z7fcaGtVtKUjKLiI9w11BY4JJgqg6+06QiZgpEf4qnj7xzx
TPUlj126o8DCkhZ0pEYjJu9vdawj7S4XPt1h96P2fB2VSlrJrg/tDnej3Uub
+7snwrxpkWPVaLvctovliS9QiBfM6QUQ6cYBVc0MZMQQCSMU1qbiEIA4Nueh
SY8RLOxSaohMEdSCFKvqMsLDXsjXi0Bb6FIJep/qUefq0cB5xB5jeT/59Il2
3AzjyfHPcSkeXD8/fkYfJ/TxnD5eHnF+1RQAqY1SBnEzas8oBoIKHY/GQTDW
Pn1wMj6O5+L44/Tm7OKI7YjHlUxExecyxpMWkRab8jk+l7TIKMfNyDQmQPT4
uBtEyMGyiRF6Z/vgM47zVxKozCL4rK6YC3XTOqk9kXpfyOsRom6MY3Ivk5EN
deolUXhCZunvA8Itp23/SCcb9IJI/3iR/W5YHmXtYGxGJhhFKB81J7Frkg/W
VnU9RKuLOqRZquhgeZDx2G4P3YMH5XUVMc4RgrOKo5uH4lQEMX51gRtxlG6Z
Q9D5Vjy7xb2pLZzJJn45oRbUgfSYqkJfzhxq76AyzhEkufYGTE1/sWvmL+1I
u+tveHAUOy/2/SsloUajleFk5ezqGrcARLg9YZsP5fF7CEz5ZD2CttBMgCGS
X2wYIaYSGBM+4lcjmOMP1pFgjlwodjqDfAw0sjls3hrgGxkae3GBu5BAbT4f
yYjhg0UJddWOJjsMxyYOd558Wa/jwKsadB9JY5tDh4GlCcEWDcbR/F2M2E41
wYgzCodUxm+FrejtvOa9JB8HdZC2BUPN6SWLuiQbEjNmGH9qH4S8sXvaO7Pm
c4tmY/xCQ+v+4eb5uTVx8aJ7NQV30VCZFYhHi5WV15xKxlp64wGrhTUf6y0s
vxoW3xIjyQ9nnfLyBL3PIMETMY2GdDUSQwVqrRhjYn0nrw3ssF27zEqysHCi
AyIVsH7nQZqfTJ021Aevv8VX4uA2lzg00TsYagfIjlZDH2AcFTW2qk5sSVVb
J65Eiy39SGjUQL2OTGApUNyAhNqfImcEA71OuK2YCPwMOMPY6Rlz4/tXBMeN
Pr/Whl4ikoC+PH17+iCYhzM+tCr0klgp7xLGc/UBrRhOdq75/nL3ik8PPn/u
z9vuCa4VX6PZz73MvHki0YmJb4VJLp03ncpY91vg3uLNgOG+eQWNDrVJt9OE
6ldm0xXjHStmCFBgmzcOuGAzfUGxWiwyI28q8CtXxaZGPf836xYRjYorAAA=

-->

</rfc>

