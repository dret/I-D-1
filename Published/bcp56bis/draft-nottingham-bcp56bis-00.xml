<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.2 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfc2629xslt/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-nottingham-bcp56bis-00" category="bcp" obsoletes="3205">

  <front>
    <title>On the use of HTTP as a Substrate</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2017"/>

    <area>General</area>
    
    <keyword>substrate</keyword>

    <abstract>


<t>HTTP is often used as a substrate for other application protocols. This document specifies best
practices for these protocols’ use of HTTP.</t>



    </abstract>


    <note title="Note to Readers ">


<t>The issues list for this draft can be found at <eref target="https://github.com/mnot/I-D/labels/bcp56bis">https://github.com/mnot/I-D/labels/bcp56bis</eref>.</t>

<t>The most recent (often, unpublished) draft is at <eref target="https://mnot.github.io/I-D/bcp56bis/">https://mnot.github.io/I-D/bcp56bis/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/mnot/I-D/commits/gh-pages/bcp56bis">https://github.com/mnot/I-D/commits/gh-pages/bcp56bis</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>HTTP <xref target="RFC7230"/> is often used as a substrate for other application protocols. This is done for a
variety of reasons, including:</t>

<t><list style="symbols">
  <t>familiarity by implementers, specifiers, administrators, developers and users,</t>
  <t>availability of a variety of client, server and proxy implementations,</t>
  <t>ease of use,</t>
  <t>ubiquity of Web browsers,</t>
  <t>reuse of existing mechanisms like authentication and encryption,</t>
  <t>presence of HTTP servers and clients in target deployments, and</t>
  <t>its ability to traverse firewalls.</t>
</list></t>

<t>The Internet community has a long tradition of protocol reuse, dating back to the use of Telnet
<xref target="RFC0854"/> as a substrate for FTP <xref target="RFC0959"/> and SMTP <xref target="RFC2821"/>. However, layering new
protocols over HTTP brings its own set of issues:</t>

<t><list style="symbols">
  <t>Should an application using HTTP define a new URL scheme? Use new ports?</t>
  <t>Should it use standard HTTP methods and status codes, or define new ones?</t>
  <t>How can the maximum value be extracted from the use of HTTP?</t>
  <t>How does it coexist with other uses of HTTP – especially Web browsing?</t>
  <t>How can interoperability problems and “protocol dead ends” be avoided?</t>
</list></t>

<t>This document contains best current practices regarding the use of HTTP by applications other than
Web browsing. <xref target="used"/> defines what applications it applies to; <xref target="overview"/> surveys the properties
of HTTP that are important to preserve, and <xref target="bp"/> conveys best practices for those applications
that do use HTTP.</t>

<t>It is written primarily to guide IETF efforts, but might be applicable in other situations. Note
that the requirements herein do not necessarily apply to the development of generic HTTP extensions.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="used" title="Is HTTP Being Used?">

<t>Different applications have different goals when using HTTP. In this document, we say an
application is <spanx style="emph">using HTTP</spanx> when any of the following conditions are true:</t>

<t><list style="symbols">
  <t>The transport port in use is 80 or 443,</t>
  <t>The URL scheme “http” or “https” is used,</t>
  <t>The ALPN protocol ID <xref target="RFC7301"/> “http/1.1”, “h2” or “h2c” is used, or</t>
  <t>The message formats described in <xref target="RFC7320"/> and/or <xref target="RFC7540"/> are used in conjunction with the IANA registries defined for HTTP.</t>
</list></t>

<t>When an application is using HTTP, all of the requirements of the HTTP protocol suite (including
but not limited to <xref target="RFC7320"/>, <xref target="RFC7321"/>, <xref target="RFC7322"/>, <xref target="RFC7233"/>, <xref target="RFC7234"/>,
<xref target="RFC7325"/> and <xref target="RFC7540"/>) are in force.</t>

<t>An application might not be <spanx style="emph">using HTTP</spanx> according to this definition, but still relying upon the
HTTP specifications in some manner. For example, an application might wish to avoid re-specifying
parts of the message format, but change others; or, it might want to use a different set of methods.</t>

<t>Such applications are referred to as <spanx style="emph">protocols based upon HTTP</spanx> in this document. These have more
freedom to modify protocol operation, but are also likely to lose at least a portion of the
benefits outlined above, as most HTTP implementations won’t be easily adaptable to these changes,
and as the protocol diverges from HTTP, the benefit of mindshare will be lost.</t>

<t>Protocols that are based upon HTTP MUST NOT reuse HTTP’s URL schemes, transport ports, ALPN
protocol IDs or IANA registries; rather, they are encouraged to establish their own.</t>

</section>
<section anchor="overview" title="What’s Important About HTTP">

<t>There are many ways that HTTP applications are defined and deployed, and sometimes they are brought
to the IETF for standardisation. In that process, what might be workable for deployment in a
limited fashion isn’t appropriate for standardisation and the corresponding broader deployment.</t>

<t>This section examines the facets of the protocol that are important to preserve in these situations.</t>

<section anchor="generic-semantics" title="Generic Semantics">

<t>When writing an application’s specification, it’s often tempting to specify exactly how HTTP is to
be implemented, supported and used.</t>

<t>However, this can easily lead to an unintended profile of HTTP’s behaviour. For example, it’s
common to see specifications with language like this:</t>

<figure><artwork><![CDATA[
A `200 OK` response means that the widget has successfully been updated.
]]></artwork></figure>

<t>This sort of specification is bad practice, because it is adding new semantics to HTTP’s status
codes and methods, respectively; a recipient – whether it’s an origin server, client library,
intermediary or cache – now has to know these extra semantics to understand the message.</t>

<t>Some applications even require specific behaviours, such as:</t>

<figure><artwork><![CDATA[
A `POST` request MUST result in a `201 Created` response.
]]></artwork></figure>

<t>This forms an expectation in the client that the response will always be <spanx style="verb">201 Created</spanx>, when in
fact there are a number of reasons why the status code might differ in a real deployment. If the
client does not anticipate this, the application’s deployment is brittle.</t>

<t>Much of the value of HTTP is in its <spanx style="emph">generic semantics</spanx> – that is, the protocol elements defined
by HTTP are potentially applicable to every resource, not specific to a particular context.
Application-specific semantics are expressed in the payload; mostly, in the body, but also in
header fields.</t>

<t>This allows a HTTP message to be examined by generic HTTP software (e.g., HTTP servers,
intermediaries, client implementatiions), and its handling to be correctly determined. It also
allows people to leverage their knowledge of HTTP semantics without special-casing them for a
particular application.</t>

<t>Therefore, applications that use HTTP MUST NOT re-define, refine or overlay the semantics of
defined protocol elements. Instead, they SHOULD focus their specifications on protocol elements
that are specific to them; namely their HTTP resources.</t>

<t>See <xref target="resource"/> for details.</t>

</section>
<section anchor="links" title="Links">

<t>Another common practice is assuming that the HTTP server’s name space (or a portion thereof) is
exclusively for the use of a single application. This effectively overlays special,
application-specific semantics onto that space, precludes other applications from using it.</t>

<t>As explained in <xref target="RFC7320"/>, such “squatting” on a part of the URL space by a standard usurps the
server’s authority over its own resources, can cause deployment issues, and is therefore bad
practice in standards.</t>

<t>Instead of statically defining URL paths, it is RECOMMENDED that applications using HTTP define
links in payloads, to allow flexibility in deployment.</t>

<t>Using runtime links in this fashion has a number of other benefits. For example, navigating with a
link allows a request to be routed to a different server without the overhead of a redirection,
thereby supporting deployment across machines well. It becomes possible to “mix” different
applications on the same server, and offers a natural path for extensibility, versioning and
capability management.</t>

</section>
<section anchor="getting-value-from-http" title="Getting Value from HTTP">

<t>The simplest possible use of HTTP is to POST data to a single URL, thereby effectively tunnelling
through the protocol.</t>

<t>This “RPC” style of communication does get some benefit from using HTTP – namely, message framing and the availability of implementations – but fails to realise many others:</t>

<t><list style="symbols">
  <t>Caching for server scalability, latency and bandwidth reduction, and reliability;</t>
  <t>Authentication and access control;</t>
  <t>Automatic redirection;</t>
  <t>Partial content to selectively request part of a response;</t>
  <t>Natural support for extensions and versioning through protocol extension; and</t>
  <t>The ability to interact with the application easily using a Web browser.</t>
</list></t>

<t>Using such a high-level protocol to tunnel simple semantics has downsides too; because of its more
advanced capabilities, breadth of deployment and age, HTTP’s complexity can cause interoperability
problems that could be avoided by using a simpler substrate (e.g., WebSockets <xref target="RFC6455"/>, if
browser support is necessary, or TCP <xref target="RFC0793"/> if not), or making the application be <spanx style="emph">based upon
HTTP</spanx>, instead of using it (as defined in <xref target="used"/>).</t>

<t>Applications that use HTTP are encouraged to accommodate the various features that the protocol
offers, so that their users receive the maximum benefit from it. This document does not require
specific features to be used, since the appropriate design tradeoffs are highly specific to a given
situation. However, following the practices in <xref target="bp"/> will help make them available.</t>

</section>
</section>
<section anchor="bp" title="Best Practices for Using HTTP">

<t>This section contains best practices regarding the use of HTTP by applications, including practices
for specific HTTP protocol elements.</t>

<section anchor="specifying-the-use-of-http" title="Specifying the Use of HTTP">

<t>When specifying the use of HTTP, an application SHOULD use <xref target="RFC7230"/> as the primary reference;
it is not necessary to reference all of the specifications in the HTTP suite unless there are
specific reasons to do so (e.g., a particular feature is called out).</t>

<t>Applications using HTTP MAY specify a minimum version to be supported (HTTP/1.1 is suggested), and
MUST NOT specify a maximum version.</t>

<t>Likewise, applications need not specify what HTTP mechanisms – such as redirection, caching,
authentication, proxy authentication, and so on – are to be supported. Full featured support for
HTTP SHOULD be taken for granted in servers and clients, and the application’s function SHOULD
degrade gracefully if they are not (although this might be achieved by informing the user that
their task cannot be completed).</t>

<t>For example, an application can specify that it uses HTTP like this:</t>

<figure><artwork><![CDATA[
Foo Application uses HTTP {{RFC7230}}. Implementations MUST support 
HTTP/1.1, and MAY support later versions. Support for common HTTP 
mechanisms such as redirection and caching are assumed.
]]></artwork></figure>

</section>
<section anchor="resource" title="Defining HTTP Resources">

<t>HTTP Applications SHOULD focus on defining the following application-specific protocol elements:</t>

<t><list style="symbols">
  <t>Media types <xref target="RFC6838"/>, often based upon a format convention such as JSON <xref target="RFC7159"/>,</t>
  <t>HTTP header fields, as per <xref target="headers"/>, and</t>
  <t>The behaviour of resources, as identified by link relations <xref target="RFC5988"/>.</t>
</list></t>

<t>By composing these protocol elements, an application can define a set of resources, identified by
link relations, that implement specified behaviours, including:</t>

<t><list style="symbols">
  <t>Retrieval of their state using GET, in one or more formats identified by media type;</t>
  <t>Resource creation or update using POST or PUT, with an appropriately identified request body format;</t>
  <t>Data processing using POST and identified request and response body format(s); and</t>
  <t>Resource deletion using DELETE.</t>
</list></t>

<t>For example, an application might specify:</t>

<figure><artwork><![CDATA[
Resources linked to with the "example-widget" link relation type are
Widgets. The state of a Widget can be fetched in the
"application/example-widget+json" format, and can be updated by PUT
to the same link. Widget resources can be deleted.

The "Example-Count" response header field on Widget representations
indicates how many Widgets are held by the sender.

The "application/example-widget+json" format is a JSON {{RFC7159}}
format representing the state of a Widget. It contains links to
related information in the link indicated by the Link header field
value with the "example-other-info" link relation type.
]]></artwork></figure>

</section>
<section anchor="http-urls" title="HTTP URLs">

<t>In HTTP, URLs are opaque identifiers under the control of the server. As outlined in <xref target="RFC7320"/>,
standards cannot usurp this space, since it might conflict with existing resources, and constrain
implementation and deployment.</t>

<t>In other words, applications that use HTTP MUST NOT associate application semantics with specific
URL paths. For example, specifying that a “GET to the URL /foo retrieves a bar document” is bad
practice. Likewise, specifying “The widget API is at the path /bar” violates <xref target="RFC7320"/>.</t>

<t>Instead, applications that use HTTP are encouraged to use typed links <xref target="RFC5988"/> to convey the
URIs that are in use, as well as the semantics of the resources that they identify. See
<xref target="resource"/> for details.</t>

<section anchor="initial-url-discovery" title="Initial URL Discovery">

<t>Generally, a client with begin interacting with a given application server by requesting an initial
document that contains information about that particular deployment, potentially including links to
other relevant resources.</t>

<t>Applications that use HTTP SHOULD allow an arbitrary URL to be used as that entry point. For
example, rather than specifying “the initial document is at “/foo/v1”, they should allow a
deployment to use any URL as the entry point for the application.</t>

<t>In cases where doing so is impractical (e.g., it is not possible to convey a whole URL, but only a
hostname) applications that use HTTP MAY define a well-known URL <xref target="RFC5785"/> as an entry point.</t>

</section>
<section anchor="scheme" title="URL Schemes">

<t>Applications that use HTTP MUST allow use of the “https” URL scheme, and SHOULD NOT allow use of
the “http” URL scheme, unless interoperability considerations with existing deployments require it.
They MUST NOT use other URL schemes.</t>

<t>“https” is preferred to mitigate pervasive monitoring attacks <xref target="RFC7258"/>.</t>

<t>Using other schemes to denote an application using HTTP makes it more difficult to use with
existing implementations (e.g., Web browsers), and is likely to fail to meet the requirements of
<xref target="RFC7595"/>.</t>

<t>If it is necessary to advertise the application in use, this SHOULD be done in message payloads,
not the URL scheme.</t>

</section>
<section anchor="transport-ports" title="Transport Ports">

<t>Applications that use HTTP SHOULD use the default port for the URL scheme in use. If it is felt
that networks might need to distinguish the application’s traffic for operational reasons, it MAY
register a separate port, but be aware that this has privacy implications for that protocol’s
users. The impact of doing so MUST be documented in Security Considerations.</t>

</section>
</section>
<section anchor="state" title="Authentication and Application State">

<t>Applications that use HTTP MAY use stateful cookies <xref target="RFC6265"/> to identify a client and/or store
client-specific data to contextualise requests.</t>

<t>If it is only necessary to identify clients, applications that use HTTP MAY use HTTP authentication
<xref target="RFC7235"/>; if the Basic authentication scheme <xref target="RFC7617"/> is used, it MUST NOT be used with the
‘http’ URL scheme.</t>

<t>In either case, it is important to carefully specify the scoping and use of these mechanisms; if
they expose sensitive data or capabilities (e.g., by acting as an ambiant authority), exploits are
possible. Mitigations include using a request-specific token to assure the intent of the client.</t>

</section>
<section anchor="http-methods" title="HTTP Methods">

<t>Applications that use HTTP MUST confine themselves to using registered HTTP methods such as GET,
POST, PUT, DELETE, and PATCH.</t>

<t>New HTTP methods are rare; they are required to be registered with IETF Review (see <xref target="RFC7232"/>),
and are also required to be <spanx style="emph">generic</spanx>. That means that they need to be potentially applicable to
all resources, not just those of one application.</t>

<t>While historically some applications (e.g., <xref target="RFC6352"/> and <xref target="RFC4791"/>) have defined non-generic
methods, <xref target="RFC7231"/> now forbids this.</t>

<t>When it is believed that a new method is required, authors are encouraged to engage with the HTTP
community early, and document their proposal as a separate HTTP extension, rather than as part of
an application’s specification.</t>

</section>
<section anchor="http-status-codes" title="HTTP Status Codes">

<t>Applications that use HTTP MUST only use registered HTTP status codes.</t>

<t>As with methods, new HTTP status codes are rare, and required (by <xref target="RFC7231"/>) to be registered
with IETF review. Similarly, HTTP status codes are generic; they are required (by <xref target="RFC7231"/>) to
be potentially applicable to all resources, not just to those of one application.</t>

<t>When it is believed that a new status code is required, authors are encouraged to engage with the
HTTP community early, and document their proposal as a separate HTTP extension, rather than as part
of an application’s specification.</t>

<t>Status codes’ primary function is to convey HTTP semantics for the benefit of generic HTTP
software, not application-specific semantics. Therefore, applications MUST NOT specify additional
semantics or refine existing semantics for status codes.</t>

<t>In particular, specifying that a particular status code has a specific meaning in the context of an
application is harmful, as these are not generic semantics, since the consumer needs to be in the
context of the application to understand them.</t>

<t>Furthermore, applications using HTTP MUST NOT re-specify the semantics of HTTP status codes, even
if it is only by copying their definition. They MUST NOT require specific status phrases to be
used; the status phrase has no function in HTTP, and is not guaranteed to be preserved by
implementations.</t>

<t>Typically, applications using HTTP will convey application-specific information in the message body
and/or HTTP header fields, not the status code.</t>

<t>Specifications sometimes also create a “laundry list” of potential status codes, in an effort to be
helpful. The problem with doing so is that such a list is never complete; for example, if a network
proxy is interposed, the client might encounter a <spanx style="verb">407 Proxy Authentication Required</spanx> response; or,
if the server is rate limiting the client, it might receive a <spanx style="verb">429 Too Many Requests</spanx> response.</t>

<t>Since the list of HTTP status codes can be added to, it’s safer to refer to it directly, and point
out that clients SHOULD be able to handle all applicable protocol elements gracefully (i.e.,
falling back to the generic <spanx style="verb">n00</spanx> semantics of a given status code; e.g., <spanx style="verb">499</spanx> can be safely
handled as <spanx style="verb">400</spanx> by clients that don’t recognise it).</t>

</section>
<section anchor="headers" title="HTTP Header Fields">

<t>Applications that use HTTP MAY define new HTTP header fields, following the advice in <xref target="RFC7321"/>,
Section 8.3.1.</t>

<t>Typically, using HTTP header fields is appropriate in a few different situations:</t>

<t><list style="symbols">
  <t>Their content is useful to intermediaries (who often wish to avoid parsing the body), and/or</t>
  <t>Their content is useful to generic HTTP software (e.g., clients, servers), and/or</t>
  <t>It is not possible to include their content in the message body (usually because a format does not allow it).</t>
</list></t>

<t>If none of these motivations apply, using a header field is NOT RECOMMENDED.</t>

<t>New header fields MUST be registered, as per <xref target="RFC7231"/> and <xref target="RFC3864"/>.</t>

<t>It is RECOMMENDED that header field names be short (even when HTTP/2 header compression is in
effect, there is an overhead) but appropriately specific. In particular, if a header field is
specific to an application, an identifier for that application SHOULD form a prefix to the header
field name, separated by a “-“.</t>

<t>The semantics of existing HTTP header fields MUST NOT be re-defined without updating their
registration or defining an extension to them (if allowed). For example, an application using HTTP
cannot specify that the <spanx style="verb">Location</spanx> header has a special meaning in a certain context.</t>

<t>See <xref target="state"/> for requirements regarding header fields that carry application state (e.g,. Cookie).</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document has no requirements for IANA.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t><xref target="state"/> discusses the impact of using stateful mechanisms in the protocol as ambiant authority,
and suggests a mitigation.</t>

<t><xref target="scheme"/> requires support for ‘https’ URLs, and discourages the use of ‘http’ URLs, to mitigate
pervasive monitoring attacks.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC7230" target='http://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC2119" target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC7301" target='http://www.rfc-editor.org/info/rfc7301'>
<front>
<title>Transport Layer Security (TLS) Application-Layer Protocol Negotiation Extension</title>
<author initials='S.' surname='Friedl' fullname='S. Friedl'><organization /></author>
<author initials='A.' surname='Popov' fullname='A. Popov'><organization /></author>
<author initials='A.' surname='Langley' fullname='A. Langley'><organization /></author>
<author initials='E.' surname='Stephan' fullname='E. Stephan'><organization /></author>
<date year='2014' month='July' />
<abstract><t>This document describes a Transport Layer Security (TLS) extension for application-layer protocol negotiation within the TLS handshake. For instances in which multiple application protocols are supported on the same TCP or UDP port, this extension allows the application layer to negotiate which protocol will be used within the TLS connection.</t></abstract>
</front>
<seriesInfo name='RFC' value='7301'/>
<seriesInfo name='DOI' value='10.17487/RFC7301'/>
</reference>



<reference  anchor="RFC7320" target='http://www.rfc-editor.org/info/rfc7320'>
<front>
<title>URI Design and Ownership</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2014' month='July' />
<abstract><t>Section 1.1.1 of RFC 3986 defines URI syntax as &quot;a federated and extensible naming system wherein each scheme's specification may further restrict the syntax and semantics of identifiers using that scheme.&quot;  In other words, the structure of a URI is defined by its scheme.  While it is common for schemes to further delegate their substructure to the URI's owner, publishing independent standards that mandate particular forms of URI substructure is inappropriate, because that essentially usurps ownership.  This document further describes this problematic practice and provides some acceptable alternatives for use in standards.</t></abstract>
</front>
<seriesInfo name='BCP' value='190'/>
<seriesInfo name='RFC' value='7320'/>
<seriesInfo name='DOI' value='10.17487/RFC7320'/>
</reference>



<reference  anchor="RFC7321" target='http://www.rfc-editor.org/info/rfc7321'>
<front>
<title>Cryptographic Algorithm Implementation Requirements and Usage Guidance for Encapsulating Security Payload (ESP) and Authentication Header (AH)</title>
<author initials='D.' surname='McGrew' fullname='D. McGrew'><organization /></author>
<author initials='P.' surname='Hoffman' fullname='P. Hoffman'><organization /></author>
<date year='2014' month='August' />
<abstract><t>This document updates the Cryptographic Algorithm Implementation Requirements for the Encapsulating Security Payload (ESP) and Authentication Header (AH).  It also adds usage guidance to help in the selection of these algorithms.</t><t>ESP and AH protocols make use of various cryptographic algorithms to provide confidentiality and/or data origin authentication to protected data communications in the IP Security (IPsec) architecture.  To ensure interoperability between disparate implementations, the IPsec standard specifies a set of mandatory-to- implement algorithms.  This document specifies the current set of mandatory-to-implement algorithms for ESP and AH, specifies algorithms that should be implemented because they may be promoted to mandatory at some future time, and also recommends against the implementation of some obsolete algorithms.  Usage guidance is also provided to help the user of ESP and AH best achieve their security goals through appropriate choices of cryptographic algorithms.</t></abstract>
</front>
<seriesInfo name='RFC' value='7321'/>
<seriesInfo name='DOI' value='10.17487/RFC7321'/>
</reference>



<reference  anchor="RFC7322" target='http://www.rfc-editor.org/info/rfc7322'>
<front>
<title>RFC Style Guide</title>
<author initials='H.' surname='Flanagan' fullname='H. Flanagan'><organization /></author>
<author initials='S.' surname='Ginoza' fullname='S. Ginoza'><organization /></author>
<date year='2014' month='September' />
<abstract><t>This document describes the fundamental and unique style conventions and editorial policies currently in use for the RFC Series.  It captures the RFC Editor's basic requirements and offers guidance regarding the style and structure of an RFC.  Additional guidance is captured on a website that reflects the experimental nature of that guidance and prepares it for future inclusion in the RFC Style Guide.  This document obsoletes RFC 2223, &quot;Instructions to RFC Authors&quot;.</t></abstract>
</front>
<seriesInfo name='RFC' value='7322'/>
<seriesInfo name='DOI' value='10.17487/RFC7322'/>
</reference>



<reference  anchor="RFC7233" target='http://www.rfc-editor.org/info/rfc7233'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Range Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='Y.' surname='Lafon' fullname='Y. Lafon' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines range requests and the rules for constructing and combining responses to those requests.</t></abstract>
</front>
<seriesInfo name='RFC' value='7233'/>
<seriesInfo name='DOI' value='10.17487/RFC7233'/>
</reference>



<reference  anchor="RFC7234" target='http://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>



<reference  anchor="RFC7325" target='http://www.rfc-editor.org/info/rfc7325'>
<front>
<title>MPLS Forwarding Compliance and Performance Requirements</title>
<author initials='C.' surname='Villamizar' fullname='C. Villamizar' role='editor'><organization /></author>
<author initials='K.' surname='Kompella' fullname='K. Kompella'><organization /></author>
<author initials='S.' surname='Amante' fullname='S. Amante'><organization /></author>
<author initials='A.' surname='Malis' fullname='A. Malis'><organization /></author>
<author initials='C.' surname='Pignataro' fullname='C. Pignataro'><organization /></author>
<date year='2014' month='August' />
<abstract><t>This document provides guidelines for implementers regarding MPLS    forwarding and a basis for evaluations of forwarding implementations.    Guidelines cover many aspects of MPLS forwarding.  Topics are    highlighted where implementers might otherwise overlook practical    requirements which are unstated or under emphasized or are optional    for conformance to RFCs but are often considered mandatory by    providers.</t></abstract>
</front>
<seriesInfo name='RFC' value='7325'/>
<seriesInfo name='DOI' value='10.17487/RFC7325'/>
</reference>



<reference  anchor="RFC7540" target='http://www.rfc-editor.org/info/rfc7540'>
<front>
<title>Hypertext Transfer Protocol Version 2 (HTTP/2)</title>
<author initials='M.' surname='Belshe' fullname='M. Belshe'><organization /></author>
<author initials='R.' surname='Peon' fullname='R. Peon'><organization /></author>
<author initials='M.' surname='Thomson' fullname='M. Thomson' role='editor'><organization /></author>
<date year='2015' month='May' />
<abstract><t>This specification describes an optimized expression of the semantics of the Hypertext Transfer Protocol (HTTP), referred to as HTTP version 2 (HTTP/2).  HTTP/2 enables a more efficient use of network resources and a reduced perception of latency by introducing header field compression and allowing multiple concurrent exchanges on the same connection.  It also introduces unsolicited push of representations from servers to clients.</t><t>This specification is an alternative to, but does not obsolete, the HTTP/1.1 message syntax.  HTTP's existing semantics remain unchanged.</t></abstract>
</front>
<seriesInfo name='RFC' value='7540'/>
<seriesInfo name='DOI' value='10.17487/RFC7540'/>
</reference>



<reference  anchor="RFC6838" target='http://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC5988" target='http://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor="RFC7595" target='http://www.rfc-editor.org/info/rfc7595'>
<front>
<title>Guidelines and Registration Procedures for URI Schemes</title>
<author initials='D.' surname='Thaler' fullname='D. Thaler' role='editor'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<author initials='T.' surname='Hardie' fullname='T. Hardie'><organization /></author>
<date year='2015' month='June' />
<abstract><t>This document updates the guidelines and recommendations, as well as the IANA registration processes, for the definition of Uniform Resource Identifier (URI) schemes.  It obsoletes RFC 4395.</t></abstract>
</front>
<seriesInfo name='BCP' value='35'/>
<seriesInfo name='RFC' value='7595'/>
<seriesInfo name='DOI' value='10.17487/RFC7595'/>
</reference>



<reference  anchor="RFC7232" target='http://www.rfc-editor.org/info/rfc7232'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP/1.1 conditional requests, including metadata header fields for indicating state changes, request header fields for making preconditions on such state, and rules for constructing the responses to a conditional request when one or more preconditions evaluate to false.</t></abstract>
</front>
<seriesInfo name='RFC' value='7232'/>
<seriesInfo name='DOI' value='10.17487/RFC7232'/>
</reference>



<reference  anchor="RFC7231" target='http://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC3864" target='http://www.rfc-editor.org/info/rfc3864'>
<front>
<title>Registration Procedures for Message Header Fields</title>
<author initials='G.' surname='Klyne' fullname='G. Klyne'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='J.' surname='Mogul' fullname='J. Mogul'><organization /></author>
<date year='2004' month='September' />
<abstract><t>This specification defines registration procedures for the message header fields used by Internet mail, HTTP, Netnews and other applications.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='90'/>
<seriesInfo name='RFC' value='3864'/>
<seriesInfo name='DOI' value='10.17487/RFC3864'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC0854" target='http://www.rfc-editor.org/info/rfc854'>
<front>
<title>Telnet Protocol Specification</title>
<author initials='J.' surname='Postel' fullname='J. Postel'><organization /></author>
<author initials='J.K.' surname='Reynolds' fullname='J.K. Reynolds'><organization /></author>
<date year='1983' month='May' />
<abstract><t>This is the specification of the Telnet protocol used for remote    terminal access in the ARPA Internet.  The purpose of the TELNET    Protocol is to provide a fairly general, bi-directional, eight-bit    byte oriented communications facility.  Its primary goal is to allow    a standard method of interfacing terminal devices and    terminal-oriented processes to each other.  It is envisioned that the    protocol may also be used for terminal-terminal communication    (&quot;linking&quot;) and process-process communication (distributed    computation).   This RFC specifies a standard for the ARPA Internet    community.  Hosts on the ARPA Internet are expected to adopt and    implement this standard.  Obsoletes NIC 18639.</t></abstract>
</front>
<seriesInfo name='STD' value='8'/>
<seriesInfo name='RFC' value='854'/>
<seriesInfo name='DOI' value='10.17487/RFC0854'/>
</reference>



<reference  anchor="RFC0959" target='http://www.rfc-editor.org/info/rfc959'>
<front>
<title>File Transfer Protocol</title>
<author initials='J.' surname='Postel' fullname='J. Postel'><organization /></author>
<author initials='J.' surname='Reynolds' fullname='J. Reynolds'><organization /></author>
<date year='1985' month='October' />
<abstract><t>This memo is the official specification of the File Transfer Protocol    (FTP) for the DARPA Internet community.  The primary intent is to    clarify and correct the documentation of the FTP specification, not to    change the protocol.  The following new optional commands are included    in this edition of the specification:  Change to Parent Directory    (CDUP), Structure Mount (SMNT), Store Unique (STOU), Remove Directory    (RMD), Make Directory (MKD), Print Directory (PWD), and System (SYST).    Note that this specification is compatible with the previous edition.</t></abstract>
</front>
<seriesInfo name='STD' value='9'/>
<seriesInfo name='RFC' value='959'/>
<seriesInfo name='DOI' value='10.17487/RFC0959'/>
</reference>



<reference  anchor="RFC2821" target='http://www.rfc-editor.org/info/rfc2821'>
<front>
<title>Simple Mail Transfer Protocol</title>
<author initials='J.' surname='Klensin' fullname='J. Klensin' role='editor'><organization /></author>
<date year='2001' month='April' />
<abstract><t>This document is a self-contained specification of the basic protocol for the Internet electronic mail transport.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2821'/>
<seriesInfo name='DOI' value='10.17487/RFC2821'/>
</reference>



<reference  anchor="RFC6455" target='http://www.rfc-editor.org/info/rfc6455'>
<front>
<title>The WebSocket Protocol</title>
<author initials='I.' surname='Fette' fullname='I. Fette'><organization /></author>
<author initials='A.' surname='Melnikov' fullname='A. Melnikov'><organization /></author>
<date year='2011' month='December' />
<abstract><t>The WebSocket Protocol enables two-way communication between a client running untrusted code in a controlled environment to a remote host that has opted-in to communications from that code.  The security model used for this is the origin-based security model commonly used by web browsers.  The protocol consists of an opening handshake followed by basic message framing, layered over TCP.  The goal of this technology is to provide a mechanism for browser-based applications that need two-way communication with servers that does not rely on opening multiple HTTP connections (e.g., using XMLHttpRequest or &lt;iframe&gt;s and long polling).  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6455'/>
<seriesInfo name='DOI' value='10.17487/RFC6455'/>
</reference>



<reference  anchor="RFC0793" target='http://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author initials='J.' surname='Postel' fullname='J. Postel'><organization /></author>
<date year='1981' month='September' />
</front>
<seriesInfo name='STD' value='7'/>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference  anchor="RFC7159" target='http://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference  anchor="RFC5785" target='http://www.rfc-editor.org/info/rfc5785'>
<front>
<title>Defining Well-Known Uniform Resource Identifiers (URIs)</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='E.' surname='Hammer-Lahav' fullname='E. Hammer-Lahav'><organization /></author>
<date year='2010' month='April' />
<abstract><t>This memo defines a path prefix for &quot;well-known locations&quot;, &quot;/.well-known/&quot;, in selected Uniform Resource Identifier (URI) schemes.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5785'/>
<seriesInfo name='DOI' value='10.17487/RFC5785'/>
</reference>



<reference  anchor="RFC7258" target='http://www.rfc-editor.org/info/rfc7258'>
<front>
<title>Pervasive Monitoring Is an Attack</title>
<author initials='S.' surname='Farrell' fullname='S. Farrell'><organization /></author>
<author initials='H.' surname='Tschofenig' fullname='H. Tschofenig'><organization /></author>
<date year='2014' month='May' />
<abstract><t>Pervasive monitoring is a technical attack that should be mitigated in the design of IETF protocols, where possible.</t></abstract>
</front>
<seriesInfo name='BCP' value='188'/>
<seriesInfo name='RFC' value='7258'/>
<seriesInfo name='DOI' value='10.17487/RFC7258'/>
</reference>



<reference  anchor="RFC6265" target='http://www.rfc-editor.org/info/rfc6265'>
<front>
<title>HTTP State Management Mechanism</title>
<author initials='A.' surname='Barth' fullname='A. Barth'><organization /></author>
<date year='2011' month='April' />
<abstract><t>This document defines the HTTP Cookie and Set-Cookie header fields. These header fields can be used by HTTP servers to store state (called cookies) at HTTP user agents, letting the servers maintain a stateful session over the mostly stateless HTTP protocol.  Although cookies have many historical infelicities that degrade their security and privacy, the Cookie and Set-Cookie header fields are widely used on the Internet.  This document obsoletes RFC 2965.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6265'/>
<seriesInfo name='DOI' value='10.17487/RFC6265'/>
</reference>



<reference  anchor="RFC7235" target='http://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>



<reference  anchor="RFC7617" target='http://www.rfc-editor.org/info/rfc7617'>
<front>
<title>The 'Basic' HTTP Authentication Scheme</title>
<author initials='J.' surname='Reschke' fullname='J. Reschke'><organization /></author>
<date year='2015' month='September' />
<abstract><t>This document defines the &quot;Basic&quot; Hypertext Transfer Protocol (HTTP) authentication scheme, which transmits credentials as user-id/ password pairs, encoded using Base64.</t></abstract>
</front>
<seriesInfo name='RFC' value='7617'/>
<seriesInfo name='DOI' value='10.17487/RFC7617'/>
</reference>



<reference  anchor="RFC6352" target='http://www.rfc-editor.org/info/rfc6352'>
<front>
<title>CardDAV: vCard Extensions to Web Distributed Authoring and Versioning (WebDAV)</title>
<author initials='C.' surname='Daboo' fullname='C. Daboo'><organization /></author>
<date year='2011' month='August' />
<abstract><t>This document defines extensions to the Web Distributed Authoring and Versioning (WebDAV) protocol to specify a standard way of accessing, managing, and sharing contact information based on the vCard format.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6352'/>
<seriesInfo name='DOI' value='10.17487/RFC6352'/>
</reference>



<reference  anchor="RFC4791" target='http://www.rfc-editor.org/info/rfc4791'>
<front>
<title>Calendaring Extensions to WebDAV (CalDAV)</title>
<author initials='C.' surname='Daboo' fullname='C. Daboo'><organization /></author>
<author initials='B.' surname='Desruisseaux' fullname='B. Desruisseaux'><organization /></author>
<author initials='L.' surname='Dusseault' fullname='L. Dusseault'><organization /></author>
<date year='2007' month='March' />
<abstract><t>This document defines extensions to the Web Distributed Authoring and Versioning (WebDAV) protocol to specify a standard way of accessing, managing, and sharing calendaring and scheduling information based on the iCalendar format.  This document defines the &quot;calendar-access&quot; feature of CalDAV.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4791'/>
<seriesInfo name='DOI' value='10.17487/RFC4791'/>
</reference>




    </references>




  </back>

<!-- ##markdown-source:
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
/l+4lWuvq04AAA==

-->

</rfc>

