<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="3"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>

<rfc ipr="pre5378Trust200902" category="std" number="8288" obsoletes="5988">

  <front>
    <title>Web Linking</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2017" month="September"/>

    <area>General</area>
    
    <keyword>link relation</keyword>

    <abstract>


<t>This specification defines a model for the relationships between resources on the Web
(“links”) and the type of those relationships (“link relation types”).</t>

<t>It also defines the serialisation of such links in HTTP headers with the Link header field.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>This specification defines a model for the relationships between resources on the Web
(“links”) and the type of those relationships (“link relation types”).</t>

<t>HTML <xref target="W3C.REC-html5-20141028"/> and Atom <xref target="RFC4287"/> both have well-defined concepts of linking;
<xref target="links"/> generalises this into a framework that encompasses linking in these formats and
(potentially) elsewhere.</t>

<t>Furthermore, <xref target="header"/> defines an HTTP header field for conveying such links.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as
shown here.</t>

<t>This document uses the Augmented Backus-Naur Form (ABNF) <xref target="RFC5234"/> notation of <xref target="RFC7230"/>,
including the #rule, and explicitly includes the following rules from it: quoted-string, token, SP
(space), BWS (bad whitespace), OWS (optional whitespace), RWS (required whitespace), LOALPHA, DIGIT.</t>

<t>Additionally, the following rules are included:</t>

<t><list style="symbols">
  <t>URI and URI-Reference from <xref target="RFC3986"/>,</t>
  <t>type-name and subtype-name from <xref target="RFC6838"/>,</t>
  <t>media-query-list from <xref target="W3C.REC-css3-mediaqueries-20120619"/>, and</t>
  <t>Language-Tag from <xref target="RFC5646"/>.</t>
</list></t>

</section>
<section anchor="conformance-and-error-handling" title="Conformance and Error Handling">

<t>The requirements regarding conformance and error handling highlighted in <xref target="RFC7230"/>, Section 2.5
apply to this document.</t>

</section>
</section>
<section anchor="links" title="Links">

<t>In this specification, a link is a typed connection between two resources and is comprised of:</t>

<t><list style="symbols">
  <t>A link context,</t>
  <t>a link relation type (<xref target="link-relation-types"/>),</t>
  <t>a link target, and</t>
  <t>optionally, target attributes (<xref target="attributes"/>).</t>
</list></t>

<t>A link can be viewed as a statement of the form “link context has a link relation type resource
at link target, which has target attributes”.</t>

<t>For example, “https://www.example.com/” has a “canonical” resource at “https://example.com”, which
has a “type” of “text/html”.</t>

<t>Link contexts and link targets are both Internationalized Resource Identifiers (IRIs) <xref target="RFC3987"/>.
However, in the common case, the link context will also be a URI <xref target="RFC3986"/>, because many
protocols (such as HTTP) do not support dereferencing IRIs. Likewise, the link target will
sometimes be converted to a URI (see <xref target="RFC3987"/>, Section 3.1) in serialisations that do not
support IRIs (such as the Link header field defined in <xref target="header"/>).</t>

<t>This specification does not place restrictions on the cardinality of links; there can be multiple
links to and from a particular target and multiple links of the same or different types between a
given context and target. Likewise, the relative ordering of links in any particular
serialisation, or between serialisations (e.g., the Link header field and in-content links), is not
specified or significant in this specification; applications that wish to consider ordering
significant can do so.</t>

<t>Links are conveyed in link serialisations; they are the “bytes on the wire”, and can occur in
various forms. For example, Atom <xref target="RFC4287"/> and HTML <xref target="W3C.REC-html5-20141028"/> both defined
serialisations of links into their respective formats, and <xref target="header"/> defines how to serialise
links in HTTP header fields.</t>

<t>This specification does not define a general syntax for links across different serialisations, nor
does it mandate a specific context for any given link; it is expected that serialisations of links
will specify both aspects.</t>

<t>Finally, links are used by link applications. Generally, an application will define the link
relation type(s) it uses, along with the serialisation(s) that they might occur within. For
example, the application “Web browsing” looks for the “stylesheet” link relation type in the HTML
link serialisation (and optionally in the Link header field), whereas the application “AtomPub”
uses the “edit” and “edit-media” link relations in the Atom serialisation.</t>

<section anchor="link-relation-types" title="Link Relation Types">

<t>In the simplest case, a link relation type identifies the semantics of a link. For example, a link
with the relation type “copyright” indicates that the current link context has a copyright resource
at the link target.</t>

<t>Link relation types can also be used to indicate that the target resource has particular
attributes, or exhibits particular behaviours; for example, a “service” link implies that the
link target can be used as part of a defined protocol (in this case, a service description).</t>

<t>Relation types are not to be confused with media types <xref target="RFC2046"/>; they do not identify the format
of the representation that results when the link is dereferenced. Rather, they only describe how
the current context is related to another resource.</t>

<t>Relation types SHOULD NOT infer any additional semantics based upon the presence or absence of
another link relation type, or its own cardinality of occurrence. An exception to this is the
combination of the “alternate” and “stylesheet” registered relation types, which has special
meaning in HTML for historical reasons.</t>

<t>There are two kinds of relation types: registered and extension.</t>

<section anchor="registered" title="Registered Relation Types">

<t>Well-defined relation types can be registered as tokens for convenience and/or to promote reuse by
other applications, using the procedure in <xref target="procedure"/>.</t>

<t>Registered relation type names MUST conform to the reg-rel-type rule (see <xref target="header-type"/>) and MUST
be compared character by character in a case-insensitive fashion. They SHOULD be appropriate to the
specificity of the relation type; that is, if the semantics are highly specific to a particular
application, the name should reflect that, so that more general names are available for
less-specific use.</t>

<t>Registered relation types MUST NOT constrain the media type of the link context and MUST NOT
constrain the available representation media types of the link target. However, they can specify
the behaviours and properties of the target resource (e.g., allowable HTTP methods, and request and
response media types that are required be supported).</t>

<t>Historically, registered relation types have been identified with a URI <xref target="RFC3986"/> by prefixing
their names with an application-defined base URI (e.g., see <xref target="atom"/>). This practice is NOT
RECOMMENDED, because the resulting strings will not be considered equivalent to the registered
relation types by other applications. Applications that do use such URIs internally MUST NOT use
them in link serialisations that do not explicitly accommodate them.</t>

<section anchor="procedure" title="Registering Link Relation Types">

<t>The “Link Relations” registry is located at “https://www.iana.org/assignments/link-relations/”.
Registration requests can be made by following the instructions located there or by sending an
email to the “link-relations@ietf.org” mailing list.</t>

<t>Registration requests consist of at least the following information:</t>

<t><list style="symbols">
  <t><spanx style="strong">Relation Name</spanx>: The name of the relation type</t>
  <t><spanx style="strong">Description</spanx>: A short English description of the type’s semantics. It SHOULD be stated in
terms of the relationship between the link context and link target.</t>
  <t><spanx style="strong">Reference</spanx>: Reference to the document that specifies the link relation type,
preferably including a URI that can be used to retrieve a copy of the document. An indication of
the relevant section(s) can also be included but is not required.</t>
</list></t>

<t>The expert(s) can define additional fields to be collected in the registry.</t>

<t>General requirements for registered relation types are described in <xref target="registered"/>.</t>

<t>Registrations MUST reference a freely available, stable specification.</t>

<t>Note that relation types can be registered by third parties (including the expert(s)), if the
expert(s) determines that an unregistered relation type is widely deployed and not likely to be
registered in a timely manner otherwise. Such registrations still are subject to the requirements
defined, including the need to reference a specification.</t>

</section>
<section anchor="processing" title="Registration Request Processing">

<t>Relation types are registered using the Specification Required policy (see Section 4.6 of
<xref target="RFC8126"/>), which implies review and approval by a designated expert.</t>

<t>The goal of the registry is to reflect common use of links on the Internet. Therefore, the
expert(s) should be strongly biased towards approving registrations, unless they are abusive,
frivolous, not likely to be used on the Internet, or actively harmful to the Internet and/or the
Web (not merely aesthetically displeasing or architecturally dubious). As stated in
<xref target="registered"/>, the expert(s) can withhold registration of names that are too general for the
proposed application.</t>

<t>The expert(s) will clearly identify any issues that cause a registration to be refused. Advice
about the semantics of a proposed link relation type can be given, but if it does not block
registration, this should be explicitly stated.</t>

<t>When a request is approved, the expert(s) will inform IANA, and the registration will be processed.
The IESG is the final arbiter of any objection.</t>

</section>
</section>
<section anchor="extension-relation-types" title="Extension Relation Types">

<t>Applications that don’t wish to register a relation type can use an extension relation type, which
is a URI <xref target="RFC3986"/> that uniquely identifies the relation type. Although the URI can point to a
resource that contains a definition of the semantics of the relation type, clients SHOULD NOT
automatically access that resource to avoid overburdening its server.</t>

<t>The URI used for an extension relation type SHOULD be under the control of the person or party
defining it or be delegated to them.</t>

<t>When extension relation types are compared, they MUST be compared as strings (after converting to
URIs if serialised in a different format) in a case-insensitive fashion, character by character.
Because of this, all-lowercase URIs SHOULD be used for extension relations.</t>

<t>Note that while extension relation types are required to be URIs, a serialisation of links can
specify that they are expressed in another form, as long as they can be converted to URIs.</t>

</section>
</section>
<section anchor="attributes" title="Target Attributes">

<t>Target attributes are a list of key/value pairs that describe the link or its target; for example,
a media type hint.</t>

<t>They can be defined both by individual link relation types and by link serialisations.</t>

<t>This specification does not attempt to coordinate the name of target attributes, their cardinality,
or use. Those creating and maintaining serialisations SHOULD coordinate their target attributes to
avoid conflicts in semantics or syntax and MAY define their own registries of target attributes.</t>

<t>The names of target attributes SHOULD conform to the token rule, but SHOULD NOT include any of the
characters “%”, “’”, or “*”, for portability across serialisations and MUST be compared in a
case-insensitive fashion.</t>

<t>Target attribute definitions SHOULD specify:</t>

<t><list style="symbols">
  <t>The serialisation of their values into Unicode or a subset thereof, to maximise their chances of
portability across link serialisations.</t>
  <t>The semantics and error handling of multiple occurrences of the target attribute on a given link.</t>
</list></t>

<t>This specification does define target attributes for use in the Link HTTP header field in
<xref target="header-attrs"/>.</t>

</section>
</section>
<section anchor="header" title="Link Serialisation in HTTP Headers">

<t>The Link header field provides a means for serialising one or more links into HTTP headers.</t>

<t>The ABNF for the field value is:</t>

<figure><artwork type="abnf2616"><![CDATA[
  Link       = #link-value
  link-value = "<" URI-Reference ">" *( OWS ";" OWS link-param )
  link-param = token BWS [ "=" BWS ( token / quoted-string ) ]
]]></artwork></figure>

<t>Note that any link-param can be generated with values using either the <spanx style="verb">token</spanx> or the
quoted-string syntax; therefore, recipients MUST be able to parse both forms. In other words,
the following parameters are equivalent:</t>

<figure><artwork><![CDATA[
  x=y
  x="y"
]]></artwork></figure>

<t>Previous definitions of the Link header did not equate the token and quoted-string forms
explicitly; the title parameter was always quoted, and the hreflang parameter was always a
token. Senders wishing to maximize interoperability will send them in those forms.</t>

<t>Individual link-params specify their syntax in terms of the value after any necessary unquoting
(as per <xref target="RFC7230"/>, Section 3.2.6).</t>

<t>This specification establishes the link-params “rel”, “anchor”, and “rev” (which are part of the
general link model), as well as “hreflang”, “media”, “title”, “title*”, and “type” (which are
target attributes defined by the serialisation).</t>

<section anchor="link-target" title="Link Target">

<t>Each link-value conveys one target IRI as a URI-Reference (after conversion to one, if necessary;
see <xref target="RFC3987"/>, Section 3.1) inside angle brackets (“&lt;&gt;”). If the URI-Reference is relative,
parsers MUST resolve it as per <xref target="RFC3986"/>, Section 5. Note that any base IRI appearing in the
message’s content is not applied.</t>

</section>
<section anchor="header-context" title="Link Context">

<t>By default, the context of a link conveyed in the Link header field is the URL of the
representation it is associated with, as defined in <xref target="RFC7231"/>, Section 3.1.4.1, and is serialised
as a URI.</t>

<t>When present, the anchor parameter overrides this with another URI, such as a fragment of this
resource, or a third resource (i.e., when the anchor value is an absolute URI). If the anchor
parameter’s value is a relative URI, parsers MUST resolve it as per <xref target="RFC3986"/>, Section 5. Note
that any base URI from the body’s content is not applied.</t>

<t>The ABNF for the <spanx style="verb">anchor</spanx> parameter’s value is:</t>

<figure><artwork type="abnf2616"><![CDATA[
  URI-Reference ; Section 4.1 of [RFC3986]
]]></artwork></figure>

<t>Link application can choose to ignore links with an anchor parameter. For example, the
application in use might not allow the link context to be assigned to a different resource. In such
cases, the entire link is to be ignored; link applications MUST NOT process the link
without applying the anchor.</t>

<t>Note that depending on HTTP status code and response headers, the link context might be “anonymous”
(i.e., no link context is available). For example, this is the case on a 404 response to a GET
request.</t>

</section>
<section anchor="header-type" title="Relation Type">

<t>The relation type of a link conveyed in the Link header field is conveyed in the “rel” parameter’s
value. The rel parameter MUST be present but MUST NOT appear more than once in a given link-value;
occurrences after the first MUST be ignored by parsers.</t>

<t>The rel parameter can, however, contain multiple link relation types. When this occurs, it
establishes multiple links that share the same context, target, and target attributes.</t>

<t>The “rev” parameter has been used in the past to indicate that the semantics of the relationship
are in the reverse direction. That is, a link from A to B with REL=”X” expresses the same
relationship as a link from B to A with REV=”X”. rev is deprecated by this specification because
it often confuses authors and readers; in most cases, using a separate relation type is preferable.</t>

<t>The ABNF for the rel and rev parameters’ values is:</t>

<figure><artwork type="abnf2616"><![CDATA[
  relation-type *( 1*SP relation-type )
]]></artwork></figure>

<t>where:</t>

<figure><artwork type="abnf2616"><![CDATA[
  relation-type  = reg-rel-type / ext-rel-type
  reg-rel-type   = LOALPHA *( LOALPHA / DIGIT / "." / "-" )
  ext-rel-type   = URI ; Section 3 of [RFC3986]
]]></artwork></figure>

<t>Note that extension relation types are REQUIRED to be absolute URIs in Link header fields and MUST
be quoted when they contain characters not allowed in tokens, such as a semicolon (“;”) or comma
(“,”) (as these characters are used as delimiters in the header field itself).</t>

</section>
<section anchor="header-attrs" title="Target Attributes">

<t>The Link header field defines several target attributes specific to this serialisation and also
allows extension target attributes. Target attributes are serialised in the Link header field as
parameters (see <xref target="RFC7231"/>, Section 3.1.1.1 for the definition of their syntax).</t>

<section anchor="serialisation-defined-attributes" title="Serialisation-Defined Attributes">

<t>The “hreflang”, “media”, “title”, “title*”, and “type” link-params can be translated to
serialisation-defined target attributes for the link.</t>

<t>The “hreflang” attribute, when present, is a hint indicating what the language of the result of
dereferencing the link should be. Note that this is only a hint; for example, it does not override
the Content-Language header field of a HTTP response obtained by actually following the link.
Multiple hreflang attributes on a single link-value indicate that multiple languages are
available from the indicated resource.</t>

<t>The ABNF for the hreflang parameter’s value is:</t>

<figure><artwork type="abnf2616"><![CDATA[
  Language-Tag
]]></artwork></figure>

<t>The “media” attribute, when present, is used to indicate intended destination medium or media for
style information (see <xref target="W3C.REC-html5-20141028"/>, Section 4.2.4). Its value MUST be quoted if it
contains a semicolon (“;”) or comma (“,”). There MUST NOT be more than one media attribute in
a link-value; occurrences after the first MUST be ignored by parsers.</t>

<t>The ABNF for the media parameter’s value is:</t>

<figure><artwork type="abnf2616"><![CDATA[
  media-query-list
]]></artwork></figure>

<t>The “title” attribute, when present, is used to label the destination of a link such that it can be
used as a human-readable identifier (e.g., a menu entry) in the language indicated by the
Content-Language header field (if present). The title attribute MUST NOT appear more than once in
a given link; occurrences after the first MUST be ignored by parsers.</t>

<t>The “title*” link-param can be used to encode this attribute in a different character set and/or
contain language information as per <xref target="RFC8187"/>. The title* link-param MUST NOT appear more than
once in a given link-value; occurrences after the first MUST be ignored by parsers. If the
attribute does not contain language information, its language is indicated by the Content-Language
header field (when present).</t>

<t>If both the title and title* link-params appear in a link, applications SHOULD use the
title* link-param’s value for the title attribute.</t>

<t>The “type” attribute, when present, is a hint indicating what the media type of the result of
dereferencing the link should be. Note that this is only a hint; for example, it does not override
the Content-Type header field of a HTTP response obtained by actually following the link. The
type attribute MUST NOT appear more than once in a given link-value; occurrences after the first
MUST be ignored by parsers.</t>

<t>The ABNF for the type parameter’s value is:</t>

<figure><artwork type="abnf2616"><![CDATA[
  type-name "/" subtype-name ; see Section 4.2 of [RFC6838]
]]></artwork></figure>

</section>
<section anchor="extension-attributes" title="Extension Attributes">

<t>Other link-params are link-extensions and are to be considered as target attributes.</t>

<t>Such target attributes MAY be defined to use the encoding in <xref target="RFC8187"/> (e.g.,
“example” and “example*”). When both forms are present, they SHOULD be considered to be the same
target attribute; applications SHOULD use the value of the name ending in “*” (after
<xref target="RFC8187"/> decoding) but MAY fall back to the other value if there is an
error in decoding it, or if they do not support decoding.</t>

</section>
</section>
<section anchor="link-header-field-examples" title="Link Header Field Examples">

<t>For example:</t>

<figure><artwork><![CDATA[
Link: <http://example.com/TheBook/chapter2>; rel="previous";
      title="previous chapter"
]]></artwork></figure>

<t>indicates that “chapter2” is previous to this resource in a logical navigation path.</t>

<t>Similarly,</t>

<figure><artwork><![CDATA[
Link: </>; rel="http://example.net/foo"
]]></artwork></figure>

<t>indicates that the root resource (“/”) is related to this resource with the extension relation type
“http://example.net/foo”.</t>

<t>This link:</t>

<figure><artwork><![CDATA[
Link: </terms>; rel="copyright"; anchor="#foo"
]]></artwork></figure>

<t>indicates that the linked copyright terms only apply to the portion of the document indicated by
the (media type-specific) fragment identifier “foo”.</t>

<t>The example below shows an instance of the Link header field encoding multiple links and also the
use of the encoding from RFC 8187 to encode both non-ASCII characters and language information.</t>

<figure><artwork><![CDATA[
Link: </TheBook/chapter2>;
      rel="previous"; title*=UTF-8'de'letztes%20Kapitel,
      </TheBook/chapter4>;
      rel="next"; title*=UTF-8'de'n%c3%a4chstes%20Kapitel
]]></artwork></figure>

<t>Here, both links have titles encoded in UTF-8, both use the German language (“de”), and the second
link contains the Unicode code point U+00E4 (“LATIN SMALL LETTER A WITH DIAERESIS”).</t>

<t>Note that link-values can convey multiple links between the same link target and link context; for
example:</t>

<figure><artwork><![CDATA[
Link: <http://example.org/>;
      rel="start http://example.net/relation/other"
]]></artwork></figure>

<t>Here, the link to “http://example.org/” has the registered relation type “start” and the extension
relation type “http://example.net/relation/other”.</t>

<t>Finally, this header field:</t>

<figure><artwork><![CDATA[
Link: <https://example.org/>; rel="start",
      <https://example.org/index>; rel="index"
]]></artwork></figure>

<t>is equivalent to these:</t>

<figure><artwork><![CDATA[
Link: <https://example.org/>; rel="start"
Link: <https://example.org/index>; rel="index"
]]></artwork></figure>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="link-http-header-field-registration" title="Link HTTP Header Field Registration">

<t>This specification updates the “Message Headers” registry entry for “Link” in HTTP <xref target="RFC3864"/> to
refer to this document.</t>

<figure><artwork><![CDATA[
Header Field Name: Link
Protocol: http
Status: standard
Reference: RFC 8288
]]></artwork></figure>

</section>
<section anchor="link-relation-type-registry" title="Link Relation Type Registry">

<t>This specification updates the registration procedures for the “Link Relation Types” registry; see
<xref target="procedure"/>. Also, all references to RFC 5988 in that registry have been replaced with references
to this document.</t>

<t>IANA will direct any incoming requests regarding the registry to this document and, if defined, the
processes established by the expert(s); typically, this will mean referring them to the registry
Web page.</t>

<t>Note that the expert(s) is allowed (as per <xref target="procedure"/>) to define additional fields to be
collected in the registry.</t>

</section>
<section anchor="link-relation-application-data-registry" title="Link Relation Application Data Registry">

<t>Per this specification, IANA has removed the “Link Relation Application Data” registry, as it has
not been used, and future use is not anticipated.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>The content of the Link header field is not secure, private, or integrity-guaranteed. Use of
Transport Layer Security (TLS) with HTTP <xref target="RFC2818"/> is currently the only end-to-end way to
provide these properties.</t>

<t>Link applications ought to consider the attack vectors opened by automatically following, trusting,
or otherwise using links gathered from HTTP header fields.</t>

<t>For example, Link header fields that use the “anchor” parameter to associate a link’s context with
another resource cannot be trusted since they are effectively assertions by a third party that
could be incorrect or malicious. Applications can mitigate this risk by specifying that such links
should be discarded unless some relationship between the resources is established (e.g., they share
the same authority).</t>

<t>Dereferencing links has a number of risks, depending on the application in use. For example, the
Referer header <xref target="RFC7231"/> can expose information about the application’s state (including private
information) in its value. Likewise, cookies <xref target="RFC6265"/> are another mechanism that, if
used, can become an attack vector. Applications can mitigate these risks by carefully specifying
how such mechanisms should operate.</t>

<t>The Link header field makes extensive use of IRIs and URIs. See <xref target="RFC3987"/>, Section 8 for security
considerations relating to IRIs. See <xref target="RFC3986"/>, Section 7 for security considerations relating to
URIs. See <xref target="RFC7230"/>, Section 9 for security considerations relating to HTTP header fields.</t>

</section>
<section anchor="internationalisation-considerations" title="Internationalisation Considerations">

<t>Link targets may need to be converted to URIs in order to express them in serialisations that do
not support IRIs. This includes the Link HTTP header field.</t>

<t>Similarly, the anchor parameter of the Link header field does not support IRIs; therefore, IRIs
must be converted to URIs before inclusion there.</t>

<t>Relation types are defined as URIs, not IRIs, to aid in their comparison. It is not expected that
they will be displayed to end users.</t>

<t>Note that registered Relation Names are required to be lowercase ASCII letters.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3864" target='https://www.rfc-editor.org/info/rfc3864'>
<front>
<title>Registration Procedures for Message Header Fields</title>
<author initials='G.' surname='Klyne' fullname='G. Klyne'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='J.' surname='Mogul' fullname='J. Mogul'><organization /></author>
<date year='2004' month='September' />
<abstract><t>This specification defines registration procedures for the message header fields used by Internet mail, HTTP, Netnews and other applications.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='90'/>
<seriesInfo name='RFC' value='3864'/>
<seriesInfo name='DOI' value='10.17487/RFC3864'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC3987" target='https://www.rfc-editor.org/info/rfc3987'>
<front>
<title>Internationalized Resource Identifiers (IRIs)</title>
<author initials='M.' surname='Duerst' fullname='M. Duerst'><organization /></author>
<author initials='M.' surname='Suignard' fullname='M. Suignard'><organization /></author>
<date year='2005' month='January' />
<abstract><t>This document defines a new protocol element, the Internationalized  Resource Identifier (IRI), as a complement of the Uniform Resource  Identifier (URI). An IRI is a sequence of characters from the  Universal Character Set (Unicode/ISO 10646). A mapping from IRIs to   URIs is defined, which means that IRIs can be used instead of URIs,  where appropriate, to identify resources.</t><t> The approach of defining a new protocol element was chosen instead of extending or changing the definition of URIs.  This was done in order  to allow a clear distinction and to avoid incompatibilities with  existing software. Guidelines are provided for the use and deployment of IRIs in various protocols, formats, and software components that currently deal with URIs.</t></abstract>
</front>
<seriesInfo name='RFC' value='3987'/>
<seriesInfo name='DOI' value='10.17487/RFC3987'/>
</reference>



<reference  anchor="RFC5234" target='https://www.rfc-editor.org/info/rfc5234'>
<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author initials='D.' surname='Crocker' fullname='D. Crocker' role='editor'><organization /></author>
<author initials='P.' surname='Overell' fullname='P. Overell'><organization /></author>
<date year='2008' month='January' />
<abstract><t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='68'/>
<seriesInfo name='RFC' value='5234'/>
<seriesInfo name='DOI' value='10.17487/RFC5234'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC8126" target='https://www.rfc-editor.org/info/rfc8126'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='M.' surname='Cotton' fullname='M. Cotton'><organization /></author>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<date year='2017' month='June' />
<abstract><t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t><t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t><t>This is the third edition of this document; it obsoletes RFC 5226.</t></abstract>
</front>
<seriesInfo name='BCP' value='26'/>
<seriesInfo name='RFC' value='8126'/>
<seriesInfo name='DOI' value='10.17487/RFC8126'/>
</reference>



<reference  anchor="RFC5646" target='https://www.rfc-editor.org/info/rfc5646'>
<front>
<title>Tags for Identifying Languages</title>
<author initials='A.' surname='Phillips' fullname='A. Phillips' role='editor'><organization /></author>
<author initials='M.' surname='Davis' fullname='M. Davis' role='editor'><organization /></author>
<date year='2009' month='September' />
<abstract><t>This document describes the structure, content, construction, and semantics of language tags for use in cases where it is desirable to indicate the language used in an information object.  It also describes how to register values for use in language tags and the creation of user-defined extensions for private interchange.  This document  specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='47'/>
<seriesInfo name='RFC' value='5646'/>
<seriesInfo name='DOI' value='10.17487/RFC5646'/>
</reference>



<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC8187" target='https://www.rfc-editor.org/info/rfc8187'>
<front>
<title>Indicating Character Encoding and Language for HTTP Header Field Parameters</title>
<author initials='J.' surname='Reschke' fullname='J. Reschke'><organization /></author>
<date year='2017' month='September' />
<abstract><t>By default, header field values in Hypertext Transfer Protocol (HTTP) messages cannot easily carry characters outside the US-ASCII coded character set.  RFC 2231 defines an encoding mechanism for use in parameters inside Multipurpose Internet Mail Extensions (MIME) header field values.  This document specifies an encoding suitable for use in HTTP header fields that is compatible with a simplified profile of the encoding defined in RFC 2231.</t><t>This document obsoletes RFC 5987.</t></abstract>
</front>
<seriesInfo name='RFC' value='8187'/>
<seriesInfo name='DOI' value='10.17487/RFC8187'/>
</reference>



<reference anchor="W3C.REC-css3-mediaqueries-20120619"
           target='http://www.w3.org/TR/2012/REC-css3-mediaqueries-20120619'>
<front>
<title>Media Queries</title>

<author initials='F.' surname='Rivoal' fullname='Florian Rivoal'>
    <organization />
</author>

<date month='June' day='19' year='2012' />
</front>

<seriesInfo name='World Wide Web Consortium Recommendation' value='REC-css3-mediaqueries-20120619' />
<format type='HTML' target='http://www.w3.org/TR/2012/REC-css3-mediaqueries-20120619' />
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC2046" target='https://www.rfc-editor.org/info/rfc2046'>
<front>
<title>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='N.' surname='Borenstein' fullname='N. Borenstein'><organization /></author>
<date year='1996' month='November' />
<abstract><t>This second document defines the general structure of the MIME media typing system and defines an initial set of media types.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2046'/>
<seriesInfo name='DOI' value='10.17487/RFC2046'/>
</reference>



<reference  anchor="RFC2818" target='https://www.rfc-editor.org/info/rfc2818'>
<front>
<title>HTTP Over TLS</title>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2000' month='May' />
<abstract><t>This memo describes how to use Transport Layer Security (TLS) to secure Hypertext Transfer Protocol (HTTP) connections over the Internet.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='2818'/>
<seriesInfo name='DOI' value='10.17487/RFC2818'/>
</reference>



<reference  anchor="RFC4287" target='https://www.rfc-editor.org/info/rfc4287'>
<front>
<title>The Atom Syndication Format</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='R.' surname='Sayre' fullname='R. Sayre' role='editor'><organization /></author>
<date year='2005' month='December' />
<abstract><t>This document specifies Atom, an XML-based Web content and metadata syndication format.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4287'/>
<seriesInfo name='DOI' value='10.17487/RFC4287'/>
</reference>



<reference anchor="W3C.REC-html5-20141028"
           target='http://www.w3.org/TR/2014/REC-html5-20141028'>
<front>
<title>HTML5</title>

<author initials='I.' surname='Hickson' fullname='Ian Hickson'>
    <organization />
</author>

<author initials='R.' surname='Berjon' fullname='Robin Berjon'>
    <organization />
</author>

<author initials='S.' surname='Faulkner' fullname='Steve Faulkner'>
    <organization />
</author>

<author initials='T.' surname='Leithead' fullname='Travis Leithead'>
    <organization />
</author>

<author initials='E.' surname='Navara' fullname='Erika Doyle Navara'>
    <organization />
</author>

<author initials='T.' surname='O&amp;#039;Connor' fullname='Theresa O&amp;#039;Connor'>
    <organization />
</author>

<author initials='S.' surname='Pfeiffer' fullname='Silvia Pfeiffer'>
    <organization />
</author>

<date month='October' day='28' year='2014' />
</front>

<seriesInfo name='World Wide Web Consortium Recommendation' value='REC-html5-20141028' />
<format type='HTML' target='http://www.w3.org/TR/2014/REC-html5-20141028' />
</reference>



<reference  anchor="RFC6265" target='https://www.rfc-editor.org/info/rfc6265'>
<front>
<title>HTTP State Management Mechanism</title>
<author initials='A.' surname='Barth' fullname='A. Barth'><organization /></author>
<date year='2011' month='April' />
<abstract><t>This document defines the HTTP Cookie and Set-Cookie header fields. These header fields can be used by HTTP servers to store state (called cookies) at HTTP user agents, letting the servers maintain a stateful session over the mostly stateless HTTP protocol.  Although cookies have many historical infelicities that degrade their security and privacy, the Cookie and Set-Cookie header fields are widely used on the Internet.  This document obsoletes RFC 2965.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6265'/>
<seriesInfo name='DOI' value='10.17487/RFC6265'/>
</reference>




    </references>


<section anchor="notes-on-other-link-serialisations" title="Notes on Other Link Serialisations">

<t>Header fields (<xref target="header"/>) are only one serialisation of links; other specifications have defined
alternative serialisations.</t>

<section anchor="html" title="Link Serialisation in HTML">

<t>HTML motivated the original syntax of the Link header field, and many of the design decisions in
this document are driven by a desire to stay compatible with it.</t>

<t>In HTML, the link element can be mapped to links as specified here by using the “href” attribute
for the target URI, and “rel” to convey the relation type, as in the Link header field. The context
of the link is the URI associated with the entire HTML document. HTML also defines several
attributes on links that can be seen as target attributes, including “media”, “hreflang”, “type”,
and “sizes”.</t>

<t>Section 4.8 of HTML5 <xref target="W3C.REC-html5-20141028"/> defines modern HTML links. That document links to
the Microformats Wiki as a registry; over time, the IANA registry ought to mirror its contents and,
ideally, eventually replace it (although that depends on the HTML community).</t>

<t>Surveys of existing HTML content have shown that unregistered link relation types that are not URIs
are (perhaps inevitably) common. Consuming HTML implementations ought not consider such
unregistered short links to be errors, but rather relation types with a local scope (i.e., their
meaning is specific and perhaps private to that document).</t>

<t>Finally, the HTML specification gives a special meaning when the “alternate” relation types
coincide with other relation types in the same link. Such links ought to be serialised in the Link
header field using a single list of relation-types (e.g., rel=”alternate stylesheet”) to preserve
this relationship.</t>

</section>
<section anchor="atom" title="Link Serialisation in Atom">

<t>Atom <xref target="RFC4287"/> is a link serialisation that conveys links in the atom:link element, with the
“href” attribute indicating the link target and the “rel” attribute containing the relation type.
The context of the link is either a feed locator or an entry ID, depending on where it appears;
generally, feed-level links are obvious candidates for transmission as a Link header field.</t>

<t>When serialising an atom:link into a Link header field, it is necessary to convert link targets (if
used) to URIs.</t>

<t>Atom defines extension relation types in terms of IRIs. This specification redefines them as URIs,
to simplify and reduce errors in their comparison.</t>

<t>Atom allows registered link relation types to be serialised as absolute URIs using a prefix,
“http://www.iana.org/assignments/relation/”. This prefix is specific to the Atom serialisation.</t>

<t>Furthermore, link relation types are always compared in a case-sensitive fashion; therefore,
registered link relation types SHOULD be converted to their registered form (usually, lowercase)
when serialised in an Atom document.</t>

<t>Note also that while the Link header field allows multiple relations to be serialised in a single
link, atom:link does not. In this case, a single link-value may map to several atom:link elements.</t>

<t>As with HTML, atom:link defines some attributes that are not explicitly mirrored in the Link header
field syntax, but they can also be used as link-extensions to maintain fidelity.</t>

</section>
</section>
<section anchor="parse" title="Algorithms for Parsing Link Header Fields">

<t>This appendix outlines a set of non-normative algorithms: for parsing the Link header(s) out of a
header set, for parsing a Link header field value, and algorithms for parsing generic parts of the
field value.</t>

<t>These algorithms are more permissive than the ABNF defining the syntax might suggest; the error
handling embodied in them is a reasonable approach, but not one that is required. As such they are
advisory only, and in cases where there is disagreement, the correct behaviour is defined by the
body of this specification.</t>

<section anchor="parse-set" title="Parsing a Header Set for Links">

<t>This algorithm can be used to parse the Link header fields that a HTTP header set contains. Given a
header_set of (string field_name, string field_value) pairs, assuming ASCII encoding, it
returns a list of link objects.</t>

<t><list style="numbers">
  <t>Let field_values be a list containing the members of header_set whose field_name is a
case-insensitive match for “link”.</t>
  <t>Let links be an empty list.</t>
  <t>For each field_value in field_values:  <list style="numbers">
      <t>Let value_links be the result of Parsing A Link Field Value (<xref target="parse-fv"/>) from
field_value.</t>
      <t>Append each member of value_links to links.</t>
    </list></t>
  <t>Return links.</t>
</list></t>

</section>
<section anchor="parse-fv" title="Parsing a Link Field Value">

<t>This algorithm parses zero or more comma-separated link-values from a Link header field. Given a
string field_value, assuming ASCII encoding, it returns a list of link objects.</t>

<t><list style="numbers">
  <t>Let links be an empty list.</t>
  <t>While field_value has content:  <list style="numbers">
      <t>Consume any leading OWS.</t>
      <t>If the first character is not “&lt;”, return links.</t>
      <t>Discard the first character (“&lt;”).</t>
      <t>Consume up to but not including the first “&gt;” character or end of field_value and let the
result be target_string.</t>
      <t>If the next character is not “&gt;”, return links.</t>
      <t>Discard the leading “&gt;” character.</t>
      <t>Let link_parameters be the result of Parsing Parameters (<xref target="parse-param"/>) from
field_value (consuming zero or more characters of it).</t>
      <t>Let target_uri be the result of relatively resolving (as per <xref target="RFC3986"/>, Section 5.2)
  target_string. Note that any base URI carried in the payload body is NOT used.</t>
      <t>Let relations_string be the second item of the first tuple of link_parameters whose first
item matches the string “rel” or the empty string (“”) if it is not present.</t>
      <t>Split relations_string on RWS (removing it in the process) into a list of string
relation_types.</t>
      <t>Let context_string be the second item of the first tuple of link_parameters whose first
item matches the string “anchor”. If it is not present, context_string is the URL of
the representation carrying the Link header <xref target="RFC7231"/>, Section 3.1.4.1, serialised as a
URI. Where the URL is anonymous, context_string is null.</t>
      <t>Let context_uri be the result of relatively resolving (as per <xref target="RFC3986"/>, Section 5.2)
  context_string, unless context_string is null, in which case context is null. Note that
any base URI carried in the payload body is NOT used.</t>
      <t>Let target_attributes be an empty list.</t>
      <t>For each tuple (param_name, param_value) of link_parameters:      <list style="numbers">
          <t>If param_name matches “rel” or “anchor”, skip this tuple.</t>
          <t>If param_name matches “media”, “title”, “title*” or “type” and target_attributes
already contains a tuple whose first element matches the value of param_name, skip this
tuple.</t>
          <t>Append (param_name, param_value) to target_attributes.</t>
        </list></t>
      <t>Let star_param_names be the set of param_names in the (param_name, param_value) tuples
of link_parameters where the last character of param_name is an asterisk (“*”).</t>
      <t>For each star_param_name in star_param_names:      <list style="numbers">
          <t>Let base_param_name be star_param_name with the last character removed.</t>
          <t>If the implementation does not choose to support an internationalised form of a parameter
named base_param_name for any reason (including, but not limited to, it being prohibited
by the parameter’s specification), remove all tuples from link_parameters whose first
member is star_param_name, and skip to the next star_param_name.</t>
          <t>Remove all tuples from link_parameters whose first member is base_param_name.</t>
          <t>Change the first member of all tuples in link_parameters whose first member is
star_param_name to base_param_name.</t>
        </list></t>
      <t>For each relation_type in relation_types:      <list style="numbers">
          <t>Case-normalise relation_type to lowercase.</t>
          <t>Append a link object to links with the target target_uri, relation type of
relation_type, context of context_uri, and target attributes target_attributes.</t>
        </list></t>
    </list></t>
  <t>Return links.</t>
</list></t>

</section>
<section anchor="parse-param" title="Parsing Parameters">

<t>This algorithm parses the parameters from a header field value. Given input, an ASCII string, it
returns a list of (string parameter_name, string parameter_value) tuples that it contains.
input is modified to remove the parsed parameters.</t>

<t><list style="numbers">
  <t>Let parameters be an empty list.</t>
  <t>While input has content:  <list style="numbers">
      <t>Consume any leading OWS.</t>
      <t>If the first character is not “;”, return parameters.</t>
      <t>Discard the leading “;” character.</t>
      <t>Consume any leading OWS.</t>
      <t>Consume up to but not including the first BWS, “=”, “;”, “,” character or end of input and
let the result be parameter_name.</t>
      <t>Consume any leading BWS.</t>
      <t>If the next character is “=”:      <list style="numbers">
          <t>Discard the leading “=” character.</t>
          <t>Consume any leading BWS.</t>
          <t>If the next character is DQUOTE, let parameter_value be the result of Parsing a Quoted
String (<xref target="parse-qs"/>) from input (consuming zero or more characters of it).</t>
          <t>Else, consume the contents up to but not including the first “;” or “,” character, or up to the end of input, and let the results be parameter_value.</t>
          <t>If the last character of parameter_name is an asterisk (“*”), decode parameter_value
according to <xref target="RFC8187"/>. Continue processing input if an unrecoverable
error is encountered.</t>
        </list></t>
      <t>Else:      <list style="numbers">
          <t>Let parameter_value be an empty string.</t>
        </list></t>
      <t>Case-normalise parameter_name to lowercase.</t>
      <t>Append (parameter_name, parameter_value) to parameters.</t>
      <t>Consume any leading OWS.</t>
      <t>If the next character is “,” or the end of input, stop processing input and return
parameters.</t>
    </list></t>
</list></t>

</section>
<section anchor="parse-qs" title="Parsing a Quoted String">

<t>This algorithm parses a quoted string, as per <xref target="RFC7230"/>, Section 3.2.6. Given input, an ASCII
string, it returns an unquoted string. input is modified to remove the parsed string.</t>

<t><list style="numbers">
  <t>Let output be an empty string.</t>
  <t>If the first character of input is not DQUOTE, return output.</t>
  <t>Discard the first character.</t>
  <t>While input has content:  <list style="numbers">
      <t>If the first character is a backslash (“\”):      <list style="numbers">
          <t>Discard the first character.</t>
          <t>If there is no more input, return output.</t>
          <t>Else, consume the first character and append it to output.</t>
        </list></t>
      <t>Else, if the first character is DQUOTE, discard it and return output.</t>
      <t>Else, consume the first character and append it to output.</t>
    </list></t>
  <t>Return output.</t>
</list></t>

</section>
</section>
<section anchor="changes-from-rfc-5988" title="Changes from RFC 5988">

<t>This specification has the following differences from its predecessor, RFC 5988:</t>

<t><list style="symbols">
  <t>The initial relation type registrations were removed, since they’ve already been registered by
RFC 5988.</t>
  <t>The introduction has been shortened.</t>
  <t>The “Link Relation Application Data” registry has been removed.</t>
  <t>Incorporated errata.</t>
  <t>Updated references.</t>
  <t>Link cardinality was clarified.</t>
  <t>Terminology was changed from “target IRI” and “context IRI” to “link target” and “link context”,
respectively.</t>
  <t>Made assigning a URI to registered relation types serialisation specific.</t>
  <t>Removed misleading statement that the Link header field is semantically equivalent to HTML and
Atom links.</t>
  <t>More carefully defined and used “link serialisations” and “link applications.”</t>
  <t>Clarified the cardinality of target attributes (generically and for “type”).</t>
  <t>Corrected the default link context for the Link header field, to be dependent upon the identity
of the representation (as per RFC 7231).</t>
  <t>Defined a suggested parsing algorithm for the Link header.</t>
  <t>The value space of target attributes and their definition has been specified.</t>
  <t>The ABNF has been updated to be compatible with <xref target="RFC7230"/>. In particular, whitespace is now
explicit.</t>
  <t>Some parameters on the HTTP header field can now appear as a token.</t>
  <t>Parameters on the HTTP header can now be valueless.</t>
  <t>Handling of quoted strings is now defined by <xref target="RFC7230"/>.</t>
  <t>The <spanx style="verb">type</spanx> header field parameter now needs to be quoted (as <spanx style="verb">token</spanx> does not allow “/”).</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

