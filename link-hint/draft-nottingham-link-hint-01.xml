<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.2 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-nottingham-link-hint-01" category="info">

  <front>
    <title>HTTP Link Hints</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>http://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This memo specifies “HTTP Link Hints”, a mechanism for annotating Web links to
HTTP(S) resources with information that otherwise might be discovered by
interacting with them.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="emph">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/mnot/I-D/labels/link-hint">https://github.com/mnot/I-D/labels/link-hint</eref>.</t>

<t>The most recent (often, unpublished) draft is at <eref target="https://mnot.github.io/I-D/link-hint/">https://mnot.github.io/I-D/link-hint/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/mnot/I-D/commits/gh-pages/link-hint">https://github.com/mnot/I-D/commits/gh-pages/link-hint</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-nottingham-link-hint/">https://datatracker.ietf.org/doc/draft-nottingham-link-hint/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>HTTP <xref target="RFC7230"/> clients can discover a variety of information about a resource by interacting with
it. For example, the methods supported can be learned through the Allow response header field,
and the need for authentication is conveyed with a 401 Authentication Required status code.</t>

<t>In some situations, it can be beneficial to know this information before interacting with the
resource; not only can it save time (through reduced round trips), but it can also affect the
choices given to the code or user driving the interaction.</t>

<t>For example, a user interface that presents the data from an HTTP-based API might need to know
which resources the user has write access to, so that it can present the appropriate interface.</t>

<t>This specification defines a vocabulary of “HTTP link hints” that allow such metadata about HTTP
resources to be attached to Web links <xref target="RFC8288"/>, thereby making it available before the link is
followed. It also establishes a registry for future hints.</t>

<t>It does not recommend a single way to express link hints; rather, it is expected that this will be
done by individual link serialisations (see <xref target="RFC8288"/>, Section 3.4.1). However, <xref target="link_header"/>
does recommend how to include link hints in the existing Link HTTP header field.</t>

<t>Hints are just that – they are not a “contract”, and are to only be taken as advisory. The runtime
behaviour of the resource always overrides hinted information.</t>

<t>For example, a client might receive a hint that the PUT method is allowed on all “widget”
resources. This means that generally, the client can PUT to them, but a specific resource might
reject a PUT based upon access control or other considerations.</t>

<t>More fine-grained information might also be gathered by interacting with the resource (e.g., via a
GET), or by another resource “containing” it (such as a “widgets” collection) or describing it
(e.g., one linked to it with a “describedby” link relation).</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as
shown here.</t>

</section>
</section>
<section anchor="link_hints" title="HTTP Link Hints">

<t>A HTTP link hint is a (key, value) tuple that describes the target resource of a Web link
<xref target="RFC8288"/>, or the link itself. The value’s canonical form is a JSON <xref target="RFC8259"/> data structure specific to that hint.</t>

<t>Typically, link hints are serialised in links as target attributes (<xref target="RFC8288"/>, Section 3.4.1).</t>

<t>In JSON-based formats, this can be achieved by simply serialising link hints as an object; for
example:</t>

<figure><artwork><![CDATA[
{
  "_links": {
    "self": {
      "href": "/orders/523",
       "hints": {
        "allow": ["GET", "POST"],
        "accept-post": {
          "application/example+json":
            {}
        }
      }
    }
  }
}
]]></artwork></figure>

<t>In other link formats, this requires a mapping from the canonical JSON data model. One such mapping
is described in <xref target="link_header"/> for the Link HTTP header field.</t>

<t>The information in a link hint SHOULD NOT be considered valid for longer than the freshness
lifetime (<xref target="RFC7234"/>, Section 4.2) of the representation that the link occurred within, and
in some cases, it might be valid for a considerably shorter period.</t>

<t>Likewise, the information in a link hint is specific to the link it is attached to. This means that
if a representation is specific to a particular user, the hints on links in that representation are
also specific to that user.</t>

</section>
<section anchor="hints" title="Pre-Defined HTTP Link Hints">

<section anchor="allow" title="allow">

<t><list style="symbols">
  <t>Hint Name: allow</t>
  <t>Description: Hints the HTTP methods that can be used to interact with the target resource;
equivalent to the Allow HTTP response header.</t>
  <t>Content Model: array (of strings)</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing HTTP methods.</t>

</section>
<section anchor="formats" title="formats">

<t><list style="symbols">
  <t>Hint Name: formats</t>
  <t>Description: Hints the representation type(s) that the target resource can produce and consume,
using the GET and PUT (if allowed) methods respectively.</t>
  <t>Content Model: object</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an object, whose keys are media types, and values are objects.</t>

<t>The object MAY have a “links” member, whose value is an object representing links (in the sense of
<xref target="RFC8288"/>) whose context is any document that uses that format. Generally, this will be schema or
profile (<xref target="RFC6906"/>) information. The “links” member has the same format as the “links” hint.</t>

<t>Furthermore, the object MAY have a “deprecated” member, whose value is either true or false,
indicating whether support for the format might be removed in the near future.</t>

<t>All other members of the object are under control of the corresponding media type’s definition.</t>

</section>
<section anchor="links" title="links">

<t><list style="symbols">
  <t>Hint Name: links</t>
  <t>Description: Hints at links whose context is the target resource.</t>
  <t>Content Model: object</t>
  <t>Specification: [this document]</t>
</list></t>

<t>The “links” hint contains links (in the sense of <xref target="RFC8288"/>) whose context is the hinted target
resource, which are stable for the lifetime of the hint.</t>

<t>Content MUST be an object, whose member names are link relations (<xref target="RFC8288"/>) and values are
objects that MUST have an “href” member whose value is a URI-reference (<xref target="RFC3986"/>, using the
original link as the base for resolution) for the link hint’s target resource, and MAY itself
contain link hints, serialised as the value for a “hints” member.</t>

<t>For example:</t>

<figure><artwork><![CDATA[
"links": {
  "edit-form": {
    "href": "./edit",
    "hints": {
      formats: {
        "application/json": {}
      }
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="accept-post" title="accept-post">

<t><list style="symbols">
  <t>Hint Name: accept-post</t>
  <t>Description: Hints the POST request format(s) that the target resource can consume.</t>
  <t>Content Model: object</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an object, with the same constraints as for “formats”.</t>

<t>When this hint is present, “POST” SHOULD be listed in the “allow” hint.</t>

</section>
<section anchor="accept-patch" title="accept-patch">

<t><list style="symbols">
  <t>Hint Name: accept-patch</t>
  <t>Description: Hints the PATCH <xref target="RFC5789"/> request format(s) that the target resource can consume;
equivalent to the Accept-Patch HTTP response header.</t>
  <t>Content Model: array (of strings)</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing media types. Note that there is no opportunity to
communicate format-specific hints for PATCH formats.</t>

<t>When this hint is present, “PATCH” SHOULD be listed in the “allow” hint.</t>

</section>
<section anchor="accept-ranges" title="accept-ranges">

<t><list style="symbols">
  <t>Hint Name: accept-ranges</t>
  <t>Description: Hints the range-specifier(s) available for the target resource; equivalent to the
Accept-Ranges HTTP response header <xref target="RFC7233"/>.</t>
  <t>Content Model: array (of strings)</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing HTTP range-specifiers.</t>

</section>
<section anchor="accept-prefer" title="accept-prefer">

<t><list style="symbols">
  <t>Hint Name: accept-prefer</t>
  <t>Description: Hints the preference(s) <xref target="RFC7240"/> that the target resource understands (and might
act upon) in requests.</t>
  <t>Content Model: array (of strings)</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, contain preferences. Note that, by its nature, a preference can be ignored by the server.</t>

</section>
<section anchor="precondition-req" title="precondition-req">

<t><list style="symbols">
  <t>Hint Name: precondition-req</t>
  <t>Description: Hints that the target resource requires state-changing requests (e.g., PUT, PATCH)
to include a precondition, as per <xref target="RFC7232"/>, to avoid conflicts due to concurrent updates.</t>
  <t>Content Model: array (of strings)</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, with possible values “etag” and “last-modified” indicating
type of precondition expected.</t>

<t>See also the 428 Precondition Required status code (<xref target="RFC6585"/>).</t>

</section>
<section anchor="auth-schemes" title="auth-schemes">

<t><list style="symbols">
  <t>Hint Name: auth-schemes</t>
  <t>Description: Hints that the target resource requires authentication using the HTTP Authentication
Framework <xref target="RFC7235"/>.</t>
  <t>Content Model: array (of objects)</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of objects, each with a “scheme” member containing a string that
corresponds to a HTTP authentication scheme, and optionally a “realms” member containing an array
of zero to many strings that identify protection spaces that the resource is a member of.</t>

<t>For example:</t>

<figure><artwork><![CDATA[
  {
    "auth-req": [
      {
        "scheme": "Basic",
        "realms": ["private"]
      }
    ]
  }
]]></artwork></figure>

</section>
<section anchor="status" title="status">

<t><list style="symbols">
  <t>Hint Name: status</t>
  <t>Description: Hints the status of the target resource.</t>
  <t>Content Model: string</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be a string; possible values are:</t>

<t><list style="symbols">
  <t>“deprecated” - indicates that use of the resource is not recommended, but it is still available.</t>
  <t>“gone” - indicates that the resource is no longer available; i.e., it will return a 410 Gone HTTP
status code if accessed.</t>
</list></t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when using hints. For example, a naive client might send credentials
to a server that uses the auth-req hint, without checking to see if those credentials are
appropriate for that server.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="hint_registry" title="HTTP Link Hint Registry">

<t>This specification defines the HTTP Link Hint Registry. See <xref target="link_hints"/> for a general
description of the function of link hints.</t>

<t>Link hints are generic; that is, they are potentially applicable to any HTTP resource, not specific
to one application of HTTP, nor to one particular format. Generally, they ought to be information
that would otherwise be discoverable by interacting with the resource.</t>

<t>Hint names MUST be composed of the lowercase letters (a-z), digits (0-9), underscores (“_”) and
hyphens (“-“), and MUST begin with a lowercase letter.</t>

<t>Hint content MUST be described in terms of JSON values (<xref target="RFC8259"/>, Section 3).</t>

<t>Hint semantics SHOULD be described in terms of the framework defined in <xref target="RFC8288"/>.</t>

<t>New hints are registered using the Expert Review process described in <xref target="RFC8126"/> to enforce the
criteria above. Requests for registration of new resource hints are to use the following template:</t>

<t><list style="symbols">
  <t>Hint Name: [hint name]</t>
  <t>Description: [a short description of the hint’s semantics]</t>
  <t>Content Model: [valid JSON value types; see RFC627 Section 2.1]</t>
  <t>Specification: [reference to specification document]</t>
</list></t>

<t>Initial registrations are enumerated in <xref target="hints"/>. The “rel”, “rev”, “hreflang”, “media”, “title”,
and “type” hint names are reserved, so as to avoid potential clashes with link serialisations.</t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC8288" target='https://www.rfc-editor.org/info/rfc8288'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2017' month='October' />
<abstract><t>This specification defines a model for the relationships between resources on the Web (&quot;links&quot;) and the type of those relationships (&quot;link relation types&quot;).</t><t>It also defines the serialisation of such links in HTTP headers with the Link header field.</t></abstract>
</front>
<seriesInfo name='RFC' value='8288'/>
<seriesInfo name='DOI' value='10.17487/RFC8288'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC8259" target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2017' month='December' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5789" target='https://www.rfc-editor.org/info/rfc5789'>
<front>
<title>PATCH Method for HTTP</title>
<author initials='L.' surname='Dusseault' fullname='L. Dusseault'><organization /></author>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2010' month='March' />
<abstract><t>Several applications extending the Hypertext Transfer Protocol (HTTP) require a feature to do partial resource modification.  The existing HTTP PUT method only allows a complete replacement of a document. This proposal adds a new HTTP method, PATCH, to modify an existing HTTP resource.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5789'/>
<seriesInfo name='DOI' value='10.17487/RFC5789'/>
</reference>



<reference  anchor="RFC7233" target='https://www.rfc-editor.org/info/rfc7233'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Range Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='Y.' surname='Lafon' fullname='Y. Lafon' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines range requests and the rules for constructing and combining responses to those requests.</t></abstract>
</front>
<seriesInfo name='RFC' value='7233'/>
<seriesInfo name='DOI' value='10.17487/RFC7233'/>
</reference>



<reference  anchor="RFC7240" target='https://www.rfc-editor.org/info/rfc7240'>
<front>
<title>Prefer Header for HTTP</title>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2014' month='June' />
<abstract><t>This specification defines an HTTP header field that can be used by a client to request that certain behaviors be employed by a server while processing a request.</t></abstract>
</front>
<seriesInfo name='RFC' value='7240'/>
<seriesInfo name='DOI' value='10.17487/RFC7240'/>
</reference>



<reference  anchor="RFC7232" target='https://www.rfc-editor.org/info/rfc7232'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP/1.1 conditional requests, including metadata header fields for indicating state changes, request header fields for making preconditions on such state, and rules for constructing the responses to a conditional request when one or more preconditions evaluate to false.</t></abstract>
</front>
<seriesInfo name='RFC' value='7232'/>
<seriesInfo name='DOI' value='10.17487/RFC7232'/>
</reference>



<reference  anchor="RFC6585" target='https://www.rfc-editor.org/info/rfc6585'>
<front>
<title>Additional HTTP Status Codes</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<date year='2012' month='April' />
<abstract><t>This document specifies additional HyperText Transfer Protocol (HTTP) status codes for a variety of common situations.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6585'/>
<seriesInfo name='DOI' value='10.17487/RFC6585'/>
</reference>



<reference  anchor="RFC7235" target='https://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC6906" target='https://www.rfc-editor.org/info/rfc6906'>
<front>
<title>The 'profile' Link Relation Type</title>
<author initials='E.' surname='Wilde' fullname='E. Wilde'><organization /></author>
<date year='2013' month='March' />
<abstract><t>This specification defines the 'profile' link relation type that allows resource representations to indicate that they are following one or more profiles.  A profile is defined not to alter the semantics of the resource representation itself, but to allow clients to learn about additional semantics (constraints, conventions, extensions) that are associated with the resource representation, in addition to those defined by the media type and possibly other mechanisms.</t></abstract>
</front>
<seriesInfo name='RFC' value='6906'/>
<seriesInfo name='DOI' value='10.17487/RFC6906'/>
</reference>



<reference  anchor="RFC8126" target='https://www.rfc-editor.org/info/rfc8126'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='M.' surname='Cotton' fullname='M. Cotton'><organization /></author>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<date year='2017' month='June' />
<abstract><t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t><t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t><t>This is the third edition of this document; it obsoletes RFC 5226.</t></abstract>
</front>
<seriesInfo name='BCP' value='26'/>
<seriesInfo name='RFC' value='8126'/>
<seriesInfo name='DOI' value='10.17487/RFC8126'/>
</reference>




    </references>


<section anchor="link_header" title="Representing Link Hints in Link Headers">

<t>A link hint can be represented in a Link header (<xref target="RFC8288"/>, Section 3) as a link-extension.</t>

<t>When doing so, the JSON of the hint’s content SHOULD be normalised to reduce extraneous spaces
(%x20), and MUST NOT contain horizontal tabs (%x09), line feeds (%x0A) or carriage returns (%x0D).
When they are part of a string value, these characters MUST be escaped as described in <xref target="RFC8259"/>
Section 7; otherwise, they MUST be discarded.</t>

<t>Furthermore, if the content is an array or an object, the surrounding delimiters MUST be removed
before serialisation. In other words, the outermost object or array is represented without the
braces (“{}”) or brackets (“[]”) respectively, but this does not apply to inner objects or arrays.</t>

<t>For example, the two JSON values below are those of the fictitious “example” and “example1” hints,
respectively:</t>

<figure><artwork><![CDATA[
"The Example Value"
1.2
]]></artwork></figure>

<t>In a Link header, they would be serialised as:</t>

<figure><artwork><![CDATA[
Link: </>; rel="sample"; example="The Example Value";
      example1=1.2
]]></artwork></figure>

<t>A more complex, single value for “example”:</t>

<figure><artwork><![CDATA[
[
  "foo",
  -1.23,
  true,
  ["charlie", "bennet"],
  {"cat": "thor"},
  false
]
]]></artwork></figure>

<t>would be serialised as:</t>

<figure><artwork><![CDATA[
Link: </>; rel="sample"; example="\"foo\", -1.23, true,
      [\"charlie\", \"bennet\"], {"cat": \"thor\"}, false"
]]></artwork></figure>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to Jan Algermissen, Mike Amundsen, Bill Burke, Graham Klyne, Leif Hedstrom, Jeni Tennison,
Erik Wilde and Jorge Williams for their suggestions and feedback.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAPivuVoAA81b+3PbOJL+nX8FjqmtseYk+ZG3vbO7njwmns3rbOemrhJX
CiIhCWOK1AKkHY3L87fv190AScn2pipTd3v5IRFfQKPR/fXX3choNEpqWxdm
X706PX2vXtvyXL2yZe0TPZk4c7Gf5FVW6gVeyJ2e1qOyqmtbzuZ6MSrw8miO
l0c7u0mua7yzt7P7JMnwc1a51b6y5bRKErt0+6p2ja/3dnae7uwl2hm9r34y
pXG6SC4rdz5zVbPcT87NClf5vjoqa+NKU4+e06RJ4mtd5p91UZWYZGV8srT7
6mNdZUOFv2yZm7IeKl+52pmpx6/VIvyonc3wKKsWSx1+LPAyHtkSCzBnSaKb
el65/USNEoU/tvT76s1YvW1XyrdFCW+0O998UrmZLu1vurZVuc93zELbYl8t
oKy/0V9jLIUfNA5yz+t6ub+9fXl5OY4Pt5OkrNwCQ1yY/SQZjUZKTyA7RE6S
07n1amEWlfJLk9mpNV6lG9uVDpXGO9kckviFmlZO6RKDaxJU/WIminbLQ1sJ
fbl1MlDO+KpxGQa7tPWc94olqEpVz3Wtqnpu3KX1Ri3sbF6riVG59Vl1YZzJ
1WSVWNokSEgz8BD4YDEW6TG1+fyW/qqrz8dG58b5JPn++OUz9eL50em74321
LIzG4A4LuzD4Fov0JuP5JwayGLVsJoXNWKTvSQ1GWe8bCFxYX/Ma+Ss2TJVp
+g53mzJXEP/PpGYPPc8gWjMZY+O3Sd3bR6Pn24WemMJvtxb8l7GMv6gwsDMZ
LERtVdPalEPVlCyHn5t8EObCpP0ZeBfDNLaSCeLI2zT0sYxIuzOD+LB/XoL5
uqBkrrb227P5aKnx7brIJ8YoXfiKNC+ifedV1jhHs8Fn6sZjX/np0YvTlwpO
qsmozo2DvdRJO3XvwdiaejqGTW/D87fvdnpeGG31wuZ5YZLkHnmtq/KG9zBh
O1NXV/+BPX+8d3/n+lplhSXX462KpgSzvdAOc65UNV0zQj2pmhqPo53C5NSm
ySW2HquXMATzRS9gUENe68LAoXOYU7NcAhKg5mAcsDigSo6XgDczNlh1WBTV
JU2yrEqY45xtVcHJinyYAHX4pdLgK3YqYAXWEKySDCGryguzwmN2Aa0e7Oyq
w/W3js0/GktOE7Ykq3ID5R2VQKyFUd7WDb9IoNQa8gTwOLWZ1QWcVp2XEJKt
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
qZk4myGsS6DCi4RgBP8UCv4JD1QyHAozAAA=

-->

</rfc>

