<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.10 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-nottingham-link-hint-02" category="info">

  <front>
    <title>HTTP Link Hints</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This memo specifies “HTTP Link Hints”, a mechanism for annotating Web links to
HTTP(S) resources with information that otherwise might be discovered by
interacting with them.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="emph">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/mnot/I-D/labels/link-hint">https://github.com/mnot/I-D/labels/link-hint</eref>.</t>

<t>The most recent (often, unpublished) draft is at <eref target="https://mnot.github.io/I-D/link-hint/">https://mnot.github.io/I-D/link-hint/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/mnot/I-D/commits/gh-pages/link-hint">https://github.com/mnot/I-D/commits/gh-pages/link-hint</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-nottingham-link-hint/">https://datatracker.ietf.org/doc/draft-nottingham-link-hint/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>HTTP <xref target="RFC7230"/> clients can discover a variety of information about a resource by interacting with
it. For example, the methods supported can be learned through the Allow response header field,
and the need for authentication is conveyed with a 401 Authentication Required status code.</t>

<t>Often, it can be beneficial to know this information before interacting with the resource; not only
can it save time (through reduced round trips), but it can also affect the choices given to the
code or user driving the interaction.</t>

<t>For example, a user interface that presents the data from an HTTP-based API might need to know
which resources the user has write access to, so that it can present the appropriate interface.</t>

<t>This specification defines a vocabulary of “HTTP link hints” that allow such metadata about HTTP
resources to be attached to Web links <xref target="RFC8288"/>, thereby making it available before the link is
followed. It also establishes a registry for future hints.</t>

<t>Hints are just that – they are not a “contract”, and are to only be taken as advisory. The runtime
behaviour of the resource always overrides hinted information.</t>

<t>For example, a client might receive a hint that the PUT method is allowed on all “widget”
resources. This means that generally, the client can PUT to them, but a specific resource might
reject a PUT based upon access control or other considerations.</t>

<t>More fine-grained information might also be gathered by interacting with the resource (e.g., via a
GET), or by another resource “containing” it (such as a “widgets” collection) or describing it
(e.g., one linked to it with a “describedby” link relation).</t>

<t>There is not a single way to carry hints in a link; rather, it is expected that this will be done
by individual link serialisations (see <xref target="RFC8288"/>, Section 3.4.1). However, <xref target="link_header"/> does
recommend how to include link hints in the existing Link HTTP header field.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as
shown here.</t>

</section>
</section>
<section anchor="link_hints" title="HTTP Link Hints">

<t>A HTTP link hint is a (key, value) tuple that describes the target resource of a Web link
<xref target="RFC8288"/>, or the link itself. The value’s canonical form is a JSON <xref target="RFC8259"/> data structure specific to that hint.</t>

<t>Typically, link hints are serialised in links as target attributes (<xref target="RFC8288"/>, Section 3.4.1).</t>

<t>In JSON-based formats, this can be achieved by simply serialising link hints as an object; for
example:</t>

<figure><artwork><![CDATA[
{
  "_links": {
    "self": {
      "href": "/orders/523",
       "hints": {
        "allow": ["GET", "POST"],
        "accept-post": {
          "application/example+json":
            {}
        }
      }
    }
  }
}
]]></artwork></figure>

<t>In other link formats, this requires a mapping from the canonical JSON data model. One such mapping
is described in <xref target="link_header"/> for the Link HTTP header field.</t>

<t>The information in a link hint SHOULD NOT be considered valid for longer than the freshness
lifetime (<xref target="RFC7234"/>, Section 4.2) of the representation that the link occurred within, and
in some cases, it might be valid for a considerably shorter period.</t>

<t>Likewise, the information in a link hint is specific to the link it is attached to. This means that
if a representation is specific to a particular user, the hints on links in that representation are
also specific to that user.</t>

</section>
<section anchor="hints" title="Pre-Defined HTTP Link Hints">

<section anchor="allow" title="allow">

<t><list style="symbols">
  <t>Hint Name: allow</t>
  <t>Description: Hints the HTTP methods that can be used to interact with the target resource;
equivalent to the Allow HTTP response header.</t>
  <t>Content Model: array (of strings)</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing HTTP methods (<xref target="RFC7231"/>, Section 4).</t>

</section>
<section anchor="formats" title="formats">

<t><list style="symbols">
  <t>Hint Name: formats</t>
  <t>Description: Hints the representation type(s) that the target resource can produce and consume,
using the GET and PUT (if allowed) methods respectively.</t>
  <t>Content Model: object</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an object, whose keys are media types (<xref target="RFC7231"/>, Section 3.1.1.1), and values
are objects.</t>

<t>The object MAY have a “links” member, whose value is an object representing links (in the sense of
<xref target="RFC8288"/>) whose context is any document that uses that format. Generally, this will be schema or
profile (<xref target="RFC6906"/>) information. The “links” member has the same format as the “links” hint.</t>

<t>Furthermore, the object MAY have a “deprecated” member, whose value is either true or false,
indicating whether support for the format might be removed in the near future.</t>

<t>All other members of the object are under control of the corresponding media type’s definition.</t>

</section>
<section anchor="links" title="links">

<t><list style="symbols">
  <t>Hint Name: links</t>
  <t>Description: Hints at links whose context is the target resource.</t>
  <t>Content Model: object</t>
  <t>Specification: [this document]</t>
</list></t>

<t>The “links” hint contains links (in the sense of <xref target="RFC8288"/>) whose context is the hinted target
resource, which are stable for the lifetime of the hint.</t>

<t>Content MUST be an object, whose member names are link relations (<xref target="RFC8288"/>) and values are
objects that MUST have an “href” member whose value is a URI-reference (<xref target="RFC3986"/>, using the
original link as the base for resolution) for the link hint’s target resource, and MAY itself
contain link hints, serialised as the value for a “hints” member.</t>

<t>For example:</t>

<figure><artwork><![CDATA[
"links": {
  "edit-form": {
    "href": "./edit",
    "hints": {
      formats: {
        "application/json": {}
      }
    }
  }
}
]]></artwork></figure>

</section>
<section anchor="accept-post" title="accept-post">

<t><list style="symbols">
  <t>Hint Name: accept-post</t>
  <t>Description: Hints the POST request format(s) that the target resource can consume.</t>
  <t>Content Model: object</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an object, with the same constraints as for “formats”.</t>

<t>When this hint is present, “POST” SHOULD be listed in the “allow” hint.</t>

</section>
<section anchor="accept-patch" title="accept-patch">

<t><list style="symbols">
  <t>Hint Name: accept-patch</t>
  <t>Description: Hints the PATCH <xref target="RFC5789"/> request format(s) that the target resource can consume;
equivalent to the Accept-Patch HTTP response header.</t>
  <t>Content Model: array (of strings)</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing media types (<xref target="RFC7231"/>, Section 3.1.1.1).</t>

<t>When this hint is present, “PATCH” SHOULD be listed in the “allow” hint.</t>

</section>
<section anchor="accept-ranges" title="accept-ranges">

<t><list style="symbols">
  <t>Hint Name: accept-ranges</t>
  <t>Description: Hints the range-specifier(s) available for the target resource; equivalent to the
Accept-Ranges HTTP response header <xref target="RFC7233"/>.</t>
  <t>Content Model: array (of strings)</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing HTTP range-specifiers (<xref target="RFC7233"/>, Section 3.1).</t>

</section>
<section anchor="accept-prefer" title="accept-prefer">

<t><list style="symbols">
  <t>Hint Name: accept-prefer</t>
  <t>Description: Hints the preference(s) <xref target="RFC7240"/> that the target resource understands (and might
act upon) in requests.</t>
  <t>Content Model: array (of strings)</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, contain preferences (<xref target="RFC7240"/>, Section 2). Note that, by
its nature, a preference can be ignored by the server.</t>

</section>
<section anchor="precondition-req" title="precondition-req">

<t><list style="symbols">
  <t>Hint Name: precondition-req</t>
  <t>Description: Hints that the target resource requires state-changing requests (e.g., PUT, PATCH)
to include a precondition, as per <xref target="RFC7232"/>, to avoid conflicts due to concurrent updates.</t>
  <t>Content Model: array (of strings)</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, with possible values “etag” and “last-modified” indicating
type of precondition expected.</t>

<t>See also the 428 Precondition Required status code (<xref target="RFC6585"/>).</t>

</section>
<section anchor="auth-schemes" title="auth-schemes">

<t><list style="symbols">
  <t>Hint Name: auth-schemes</t>
  <t>Description: Hints that the target resource requires authentication using the HTTP Authentication
Framework <xref target="RFC7235"/>.</t>
  <t>Content Model: array (of objects)</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of objects, each with a “scheme” member containing a string that
corresponds to a HTTP authentication scheme (<xref target="RFC7235"/>), and optionally a “realms” member
containing an array of zero to many strings that identify protection spaces that the resource is a
member of.</t>

<t>For example:</t>

<figure><artwork><![CDATA[
  {
    "auth-req": [
      {
        "scheme": "Basic",
        "realms": ["private"]
      }
    ]
  }
]]></artwork></figure>

</section>
<section anchor="status" title="status">

<t><list style="symbols">
  <t>Hint Name: status</t>
  <t>Description: Hints the status of the target resource.</t>
  <t>Content Model: string</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be a string; possible values are:</t>

<t><list style="symbols">
  <t>“deprecated” - indicates that use of the resource is not recommended, but it is still available.</t>
  <t>“gone” - indicates that the resource is no longer available; i.e., it will return a 410 Gone HTTP
status code if accessed.</t>
</list></t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when using hints. For example, a naive client might send credentials
to a server that uses the auth-req hint, without checking to see if those credentials are
appropriate for that server.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="hint_registry" title="HTTP Link Hint Registry">

<t>This specification defines the HTTP Link Hint Registry. See <xref target="link_hints"/> for a general
description of the function of link hints.</t>

<t>Link hints are generic; that is, they are potentially applicable to any HTTP resource, not specific
to one application of HTTP, nor to one particular format. Generally, they ought to be information
that would otherwise be discoverable by interacting with the resource.</t>

<t>Hint names MUST be composed of the lowercase letters (a-z), digits (0-9), underscores (“_”) and
hyphens (“-“), and MUST begin with a lowercase letter.</t>

<t>Hint content MUST be described in terms of JSON values (<xref target="RFC8259"/>, Section 3).</t>

<t>Hint semantics SHOULD be described in terms of the framework defined in <xref target="RFC8288"/>.</t>

<t>New hints are registered using the Expert Review process described in <xref target="RFC8126"/> to enforce the
criteria above. Requests for registration of new resource hints are to use the following template:</t>

<t><list style="symbols">
  <t>Hint Name: [hint name]</t>
  <t>Description: [a short description of the hint’s semantics]</t>
  <t>Content Model: [valid JSON value types; see RFC627 Section 2.1]</t>
  <t>Specification: [reference to specification document]</t>
</list></t>

<t>Initial registrations are enumerated in <xref target="hints"/>. The “rel”, “rev”, “hreflang”, “media”, “title”,
and “type” hint names are reserved, so as to avoid potential clashes with link serialisations.</t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC8288" target='https://www.rfc-editor.org/info/rfc8288'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2017' month='October' />
<abstract><t>This specification defines a model for the relationships between resources on the Web (&quot;links&quot;) and the type of those relationships (&quot;link relation types&quot;).</t><t>It also defines the serialisation of such links in HTTP headers with the Link header field.</t></abstract>
</front>
<seriesInfo name='RFC' value='8288'/>
<seriesInfo name='DOI' value='10.17487/RFC8288'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC8259" target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2017' month='December' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5789" target='https://www.rfc-editor.org/info/rfc5789'>
<front>
<title>PATCH Method for HTTP</title>
<author initials='L.' surname='Dusseault' fullname='L. Dusseault'><organization /></author>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2010' month='March' />
<abstract><t>Several applications extending the Hypertext Transfer Protocol (HTTP) require a feature to do partial resource modification.  The existing HTTP PUT method only allows a complete replacement of a document. This proposal adds a new HTTP method, PATCH, to modify an existing HTTP resource.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5789'/>
<seriesInfo name='DOI' value='10.17487/RFC5789'/>
</reference>



<reference  anchor="RFC7233" target='https://www.rfc-editor.org/info/rfc7233'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Range Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='Y.' surname='Lafon' fullname='Y. Lafon' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines range requests and the rules for constructing and combining responses to those requests.</t></abstract>
</front>
<seriesInfo name='RFC' value='7233'/>
<seriesInfo name='DOI' value='10.17487/RFC7233'/>
</reference>



<reference  anchor="RFC7240" target='https://www.rfc-editor.org/info/rfc7240'>
<front>
<title>Prefer Header for HTTP</title>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2014' month='June' />
<abstract><t>This specification defines an HTTP header field that can be used by a client to request that certain behaviors be employed by a server while processing a request.</t></abstract>
</front>
<seriesInfo name='RFC' value='7240'/>
<seriesInfo name='DOI' value='10.17487/RFC7240'/>
</reference>



<reference  anchor="RFC7232" target='https://www.rfc-editor.org/info/rfc7232'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP/1.1 conditional requests, including metadata header fields for indicating state changes, request header fields for making preconditions on such state, and rules for constructing the responses to a conditional request when one or more preconditions evaluate to false.</t></abstract>
</front>
<seriesInfo name='RFC' value='7232'/>
<seriesInfo name='DOI' value='10.17487/RFC7232'/>
</reference>



<reference  anchor="RFC6585" target='https://www.rfc-editor.org/info/rfc6585'>
<front>
<title>Additional HTTP Status Codes</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<date year='2012' month='April' />
<abstract><t>This document specifies additional HyperText Transfer Protocol (HTTP) status codes for a variety of common situations.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6585'/>
<seriesInfo name='DOI' value='10.17487/RFC6585'/>
</reference>



<reference  anchor="RFC7235" target='https://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC6906" target='https://www.rfc-editor.org/info/rfc6906'>
<front>
<title>The 'profile' Link Relation Type</title>
<author initials='E.' surname='Wilde' fullname='E. Wilde'><organization /></author>
<date year='2013' month='March' />
<abstract><t>This specification defines the 'profile' link relation type that allows resource representations to indicate that they are following one or more profiles.  A profile is defined not to alter the semantics of the resource representation itself, but to allow clients to learn about additional semantics (constraints, conventions, extensions) that are associated with the resource representation, in addition to those defined by the media type and possibly other mechanisms.</t></abstract>
</front>
<seriesInfo name='RFC' value='6906'/>
<seriesInfo name='DOI' value='10.17487/RFC6906'/>
</reference>



<reference  anchor="RFC8126" target='https://www.rfc-editor.org/info/rfc8126'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='M.' surname='Cotton' fullname='M. Cotton'><organization /></author>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<date year='2017' month='June' />
<abstract><t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t><t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t><t>This is the third edition of this document; it obsoletes RFC 5226.</t></abstract>
</front>
<seriesInfo name='BCP' value='26'/>
<seriesInfo name='RFC' value='8126'/>
<seriesInfo name='DOI' value='10.17487/RFC8126'/>
</reference>




    </references>


<section anchor="link_header" title="Representing Link Hints in Link Headers">

<t>A link hint can be represented in a Link header (<xref target="RFC8288"/>, Section 3) as a link-extension.</t>

<t>When doing so, the JSON of the hint’s content SHOULD be normalised to reduce extraneous spaces
(%x20), and MUST NOT contain horizontal tabs (%x09), line feeds (%x0A) or carriage returns (%x0D).
When they are part of a string value, these characters MUST be escaped as described in <xref target="RFC8259"/>
Section 7; otherwise, they MUST be discarded.</t>

<t>Furthermore, if the content is an array or an object, the surrounding delimiters MUST be removed
before serialisation. In other words, the outermost object or array is represented without the
braces (“{}”) or brackets (“[]”) respectively, but this does not apply to inner objects or arrays.</t>

<t>For example, the two JSON values below are those of the fictitious “example” and “example1” hints,
respectively:</t>

<figure><artwork><![CDATA[
"The Example Value"
1.2
]]></artwork></figure>

<t>In a Link header, they would be serialised as:</t>

<figure><artwork><![CDATA[
Link: </>; rel="sample"; example="The Example Value";
      example1=1.2
]]></artwork></figure>

<t>A more complex, single value for “example”:</t>

<figure><artwork><![CDATA[
[
  "foo",
  -1.23,
  true,
  ["charlie", "bennet"],
  {"cat": "thor"},
  false
]
]]></artwork></figure>

<t>would be serialised as:</t>

<figure><artwork><![CDATA[
Link: </>; rel="sample"; example="\"foo\", -1.23, true,
      [\"charlie\", \"bennet\"], {"cat": \"thor\"}, false"
]]></artwork></figure>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to Jan Algermissen, Mike Amundsen, Bill Burke, Graham Klyne, Leif Hedstrom, Jeni Tennison,
Erik Wilde and Jorge Williams for their suggestions and feedback.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAKUbF10AA81b+3PbOJL+nX8FjqmtsWYl+ZG3vbN7njwmnkvinOPc1FXi
SkEkJGFMkVqAtKNxef72/bobICnZ3tRl6m5vpioRX0Cj0f31193IaDRKalsX
Zl+9Oj19p17b8ly9smXtEz2ZOHOxn+RVVuoFXsidntajsqprW87mejEq8PJo
jpdHO3tJrmu8s7ez+yTJ8HNWudW+suW0ShK7dPuqdo2v93Z2nuJd7YzeVz+Z
0jhdJJeVO5+5qlnuJ+dmhat8Xx2VtXGlqUfPadIk8bUu88+6qEpMsjI+Wdp9
9bGusqHCH7bMTVkPla9c7czU49dqEX7UzmZ4lFWLpQ4/FngZj2yJBZizJNFN
Pa/cfqJGicJ/tvT76s1YvW1XyrdFCW+0O998UrmZLu1vurZVuc93zELbYl8t
oKx/pz/GWAo/aBzkntf10u9vb19eXo7j0+0kKSu3wBgXZj9JRqOR0hMID5mT
5HRuvVqYRaX80mR2ao1X6cZ+pUOl8U42hyh+oaaVU7rE4JokVb+YiaLt8lBX
Ql9uvR8oZ3zVuAyDXdp6zpvFElSlque6VlU9N+7SeqMWdjav1cSo3PqsujDO
5GqySiztEiSkGXgIfLAYi/SY2nx+S3/U1ecTo3PjfJJ8f/LymXrx/Oj0+GRf
LQujMbjDwi4MvsUivcl4/omBLEYtm0lhMxbpe1KDUdb7BgIX1te8Rv6KLVNl
mr7D3abMFcT/S9TzDKI1kzF2fpvUvX00er5d6Ikp/HZrwn8dy/iLCgM7k8FE
1FY1rU05VE3Jcvi5yQdhLkzan4F3MUxjK5kgjrxNQ5/IiLQ7M4gPB+AlmK8L
SvZqa789m4+WGt+ui/zeGKULX5HmRbTvvMoa52g2OE3deOwrPz16cfpSwUs1
GdW5cbCXOmmn7j0YW1NPxzDqbbj+9t1ezwujrV7YPC9Mktwjt3VV3vAeJmxn
6urq37Dnj/fu71xfq6yw5Hu8VdGUYLYX2mHOlaqma0aoJ1VT43G0U5ic2jS5
xNZj9RKGYL7oBQxqyGtdGHh0DnNqlktgAtQcjAMWB1jJ8RIAZ8YGqw6Lorqk
SZZVCXOcs60qOFmRDxPADr9UGnzFTgWwwBqCVZIhZFV5YVZ4zC6g1YOdXXW4
/taJ+XtjyWnClmRVbqC8Y7Ev29ruBJA4tZnVBfxUnZeQiw28r5XgGrf5Xqup
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
CVR4kRCM4J9CwT8AGuSEzj0zAAA=

-->

</rfc>

