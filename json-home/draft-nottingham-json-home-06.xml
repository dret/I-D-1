<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.10 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-nottingham-json-home-06" category="info">

  <front>
    <title>Home Documents for HTTP APIs</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2017"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a “home document” format for non-browser HTTP clients.</t>



    </abstract>


    <note title="Note to Readers">


<t>The issues list for this draft can be found at <eref target="https://github.com/mnot/I-D/labels/json-home">https://github.com/mnot/I-D/labels/json-home</eref>.</t>

<t>The most recent (often, unpublished) draft is at <eref target="https://mnot.github.io/I-D/json-home/">https://mnot.github.io/I-D/json-home/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/mnot/I-D/commits/gh-pages/json-home">https://github.com/mnot/I-D/commits/gh-pages/json-home</eref>.</t>

<t>For information about implementations, see <eref target="https://github.com/mnot/I-D/wiki/json-home">https://github.com/mnot/I-D/wiki/json-home</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>It is becoming increasingly common to use HTTP <xref target="RFC7230"/> for applications other than traditional
Web browsing. Such “HTTP APIs” are used to integrate processes on disparate systems, make
information available to machines across the Internet, and as part of the implementation of
“microservices.”</t>

<t>By using HTTP, these applications realise a number of benefits, from message framing to caching,
and well-defined semantics that are broadly understood and useful.</t>

<t>Often, these applications of HTTP are defined by documenting static URLs that clients need to 
know and servers need to implement. Any interaction outside of these bounds is uncharted territory.</t>

<t>For some applications, this approach brings issues, especially when the interface changes, either
due to evolution, extension or drift between implementations. Furthermore, implementing more than
one instance of interface can bring further issues, as different environments have different
requirements.</t>

<t>The Web itself offers one way to address these issues, using links <xref target="RFC3986"/> to navigate between
states. A link-driven application discovers relevant resources at run time, using a shared
vocabulary of link relations <xref target="RFC5988"/> and internet media types <xref target="RFC6838"/> to support a “follow
your nose” style of interaction – just as a Web browser does to navigate the Web.</t>

<t>A client can then decide which resources to interact with “on the fly” based upon its
capabilities (as described by link relations), and the server can safely add new resources and
formats without disturbing clients that are not yet aware of them.</t>

<t>Doing so can provide any of a number of benefits, including:</t>

<t><list style="symbols">
  <t>Extensibility - Because new server capabilities can be expressed as link relations, new features can be layered in without introducing a new API version; clients will discover them in the home document. This promotes loose coupling between clients and servers.</t>
  <t>Evolvability - Likewise, interfaces can change gradually by introducing a new link relation and/or format while still supporting the old ones.</t>
  <t>Customisation - Home documents can be tailored for the client, allowing different classes of service or different client permissions to be exposed naturally.</t>
  <t>Flexible deployment - Since URLs aren’t baked into documentation, the server can choose what URLs to use for a given service.</t>
  <t>API mixing - Likewise, more than one API can be deployed on a given server, without fear of collisions.</t>
</list></t>

<t>Whether an application ought to use links in this fashion depends on how it is deployed; generally,
the most benefit will be received when multiple instances of the service are deployed, possibly
with different versions, and they are consumed by clients with different capabilities. In
particular, Internet Standards that use HTTP as a substrate are likely to require the attributes
described above.</t>

<t>This document defines a “home document” format using the JSON format <xref target="RFC7159"/> for APIs to use as a
launching point for the interactions they offer, using links. Having a well-defined format for this
purpose promotes good practice and tooling.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="api-home-documents" title="API Home Documents">

<t>An API Home Document (or, interchangeably, “home document”) uses the format described in <xref target="RFC7159"/>
and has the media type “application/json-home”.</t>

<t><spanx style="strong">Note: this media type is not final, and will change before final publication.</spanx></t>

<t>Its content consists of a root object with:</t>

<t><list style="symbols">
  <t>A “resources” member, whose value is an object that describes the resources associated with the
API. Its member names are link relation types (as defined by <xref target="RFC5988"/>), and their values are
Resource Objects (<xref target="resource-object"/>).</t>
  <t>Optionally, a “api” member, whose value is an API Object (<xref target="api-object"/>) that contains
information about the API as a whole.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET / HTTP/1.1
  Host: example.org
  Accept: application/json-home

  HTTP/1.1 200 OK
  Content-Type: application/json-home
  Cache-Control: max-age=3600
  Connection: close

  {
    "api": {
      "title": "Example API",
      "links": {
        "author": "mailto:api-admin@example.com",
        "describedBy": "https://example.com/api-docs/"
      }
    },
    "resources": {
      "tag:me@example.com,2016:widgets": {
        "href": "/widgets/"
      },
      "tag:me@example.com,2016:widget": {
        "hrefTemplate": "/widgets/{widget_id}",
        "hrefVars": {
          "widget_id": "https://example.org/param/widget"
        },
        "hints": {
          "allow": ["GET", "PUT", "DELETE", "PATCH"],
          "formats": {
            "application/json": {}
          },
          "acceptPatch": ["application/json-patch+json"],
          "acceptRanges": ["bytes"]
        }
      }
    }
  }
]]></artwork></figure>

<t>Here, we have a home document for the API “Example API”, whose author can be contacted at the
e-mail address “api-admin@example.com”, and whose documentation is at
“https://example.com/api-docs/”.</t>

<t>It links to a resource “/widgets/” with the relation “tag:me@example.com,2016:widgets”. It also
links to an unknown number of resources with the relation type “tag:me@example.com,2016:widget”
using a URI Template <xref target="RFC6570"/>, along with a mapping of identifiers to a variable for use in that
template.</t>

<t>It also gives several hints about interacting with the latter “widget” resources, including the
HTTP methods usable with them, the PATCH and POST formats they accept, and the fact that they
support partial requests <xref target="RFC7233"/> using the “bytes” range-specifier.</t>

<t>It gives no such hints about the “widgets” resource. This does not mean that it (for example)
doesn’t support any HTTP methods; it means that the client will need to discover this by
interacting with the resource, and/or examining the documentation for its link relation type.</t>

<t>Effectively, this names a set of behaviors, as described by a resource object, with a link relation
type. This means that several link relations might apply to a common base URL; e.g.:</t>

<figure><artwork><![CDATA[
{
  "resources": {
    "tag:me@example.com,2016:search-by-id": {
      "hrefTemplate": "/search?id={widget_id}",
      "hrefVars": {
        "widget_id": "https://example.org/param/widget_id"
      }
    },
    "tag:me@example.com,2016:search-by-name": {
      "hrefTemplate": "/search?name={widget_name}",
      "hrefVars": {
        "widget_name": "https://example.org/param/widget_name"
      }
    }
  }
}
]]></artwork></figure>

<t>Note that the examples above use both tag <xref target="RFC4151"/> and https <xref target="RFC7230"/> URIs; any URI scheme
can be used to identify link relations and other artefacts in home documents. Typically, these are
not links to be followed; they are only used to identify things.</t>

</section>
<section anchor="api-object" title="API Objects">

<t>An API Object contains links to information about the API itself.</t>

<t>Two optional members are defined:</t>

<t><list style="symbols">
  <t>“title” has a string value indicating the name of the API;</t>
  <t>“links” has an object value, whose member names are link relation types <xref target="RFC5988"/>, and values
are URLs <xref target="RFC3986"/>. The context of these links is the API home document as a whole.</t>
</list></t>

<t>No links are required to be conveyed, but APIs might benefit from setting the following:</t>

<t><list style="symbols">
  <t>author - a suitable URL (e.g., mailto: or https:) for the author(s) of the API</t>
  <t>describedBy - a link to documentation for the API</t>
  <t>license - a link to the legal terms for using the API</t>
</list></t>

<t>Future members of the API Object MAY be defined by specifications that update this document.</t>

</section>
<section anchor="resource-object" title="Resource Objects">

<t>A Resource Object links to resources of the type indicated in their name using one of two
mechanisms; either a direct link (in which case there is exactly one resource of that relation type
associated with the API), or a templated link, in which case there are zero to many such resources.</t>

<t>Direct links are indicated with an “href” property, whose value is a URI <xref target="RFC3986"/>.</t>

<t>Templated links are indicated with an “hrefTemplate” property, whose value is a URI Template
<xref target="RFC6570"/>. When “hrefTemplate” is present, the Resource Object MUST have a “hrefVars” property;
see “Resolving Templated Links”.</t>

<t>Resource Objects MUST have exactly one of the “href” or “href-vars” properties.</t>

<t>In both forms, the links that “href” and “hrefTemplate” refer to are URI-references <xref target="RFC3986"/>
whose base URI is that of the API Home Document itself.</t>

<t>Resource Objects MAY also have a “hints” property, whose value is an object that uses named
Resource Hints (see <xref target="resource_hints"/>) as its properties.</t>

<section anchor="resolving-templated-links" title="Resolving Templated Links">

<t>A URI can be derived from a Templated Link by treating the “hrefTemplate” value as a Level 3 URI
Template <xref target="RFC6570"/>, using the “hrefVars” property to fill the template.</t>

<t>The “hrefVars” property, in turn, is an object that acts as a mapping between variable names
available to the template and absolute URIs that are used as global identifiers for the semantics
and syntax of those variables.</t>

<t>For example, given the following Resource Object:</t>

<figure><artwork><![CDATA[
  "https://example.org/rel/widget": {
    "hrefTemplate": "/widgets/{widget_id}",
    "hrefVars": {
      "widget_id": "https://example.org/param/widget"
    },
    "hints": {
      "allow": ["GET", "PUT", "DELETE", "PATCH"],
      "formats": {
        "application/json": {}
      },
      "acceptPatch": ["application/json-patch+json"],
      "acceptRanges": ["bytes"]
    }
  }
]]></artwork></figure>

<t>If you understand that “https://example.org/param/widget” is an numeric identifier for a widget, you
can then find the resource corresponding to widget number 12345 at
“https://example.org/widgets/12345” (assuming that the Home Document is located at
“https://example.org/”).</t>

</section>
</section>
<section anchor="resource_hints" title="Resource Hints">

<t>Resource hints allow clients to find relevant information about interacting with a resource
beforehand, as a means of optimizing communications, as well as advertising available behaviors
(e.g., to aid in laying out a user interface for consuming the API).</t>

<t>Hints are just that – they are not a “contract”, and are to only be taken as advisory. The runtime
behavior of the resource always overrides hinted information.</t>

<t>For example, a resource might hint that the PUT method is allowed on all “widget” resources. This
means that generally, the user has the ability to PUT to a particular resource, but a specific
resource might reject a PUT based upon access control or other considerations. More fine-grained
information might be gathered by interacting with the resource (e.g., via a GET), or by another
resource “containing” it (such as a “widgets” collection) or describing it (e.g., one linked to it
with a “describedBy” link relation).</t>

<t>This specification defines a set of common hints, based upon information that’s discoverable by
directly interacting with resources. See <xref target="resource_hint_registry"/> for information on defining new
hints.</t>

<section anchor="allow" title="allow">

<t><list style="symbols">
  <t>Resource Hint Name: allow</t>
  <t>Description: Hints the HTTP methods that the current client will be able to use to interact with
the resource; equivalent to the Allow HTTP response header.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing HTTP methods. As per HTTP, when GET is supported, a
client MAY assume that HEAD is supported.</t>

</section>
<section anchor="formats" title="formats">

<t><list style="symbols">
  <t>Resource Hint Name: formats</t>
  <t>Description: Hints the representation types that the resource makes available, using the
GET method.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an object, whose keys are media types, and values are objects, currently empty.</t>

</section>
<section anchor="acceptpatch" title="acceptPatch">

<t><list style="symbols">
  <t>Resource Hint Name: accept-Patch</t>
  <t>Description: Hints the PATCH <xref target="RFC5789"/> request formats accepted by the resource for this
client; equivalent to the Accept-Patch HTTP response header.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing media types.</t>

<t>When this hint is present, “PATCH” SHOULD be listed in the “allow” hint.</t>

</section>
<section anchor="acceptpost" title="acceptPost">

<t><list style="symbols">
  <t>Resource Hint Name: acceptPost</t>
  <t>Description: Hints the POST request formats accepted by the resource for this client;
equivalent to the Accept-Post HTTP response header.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing media types.</t>

<t>When this hint is present, “POST” SHOULD be listed in the “allow” hint.</t>

</section>
<section anchor="acceptput" title="acceptPut">

<t><list style="symbols">
  <t>Resource Hint Name: acceptPut</t>
  <t>Description: Hints the PUT request formats accepted by the resource for this client.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing media types.</t>

<t>When this hint is present, “PUT” SHOULD be listed in the “allow” hint.</t>

</section>
<section anchor="acceptranges" title="acceptRanges">

<t><list style="symbols">
  <t>Resource Hint Name: acceptRanges</t>
  <t>Description: Hints the range-specifiers available to the client for this resource; equivalent to
the Accept-Ranges HTTP response header <xref target="RFC7233"/>.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing HTTP range-specifiers (typically, “bytes”).</t>

</section>
<section anchor="acceptprefer" title="acceptPrefer">

<t><list style="symbols">
  <t>Resource Hint Name: acceptPrefer</t>
  <t>Description: Hints the preferences <xref target="RFC7240"/> supported by the resource. Note that, as per that
specifications, a preference can be ignored by the server.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing preferences.</t>

</section>
<section anchor="docs" title="docs">

<t><list style="symbols">
  <t>Resource Hint Name: docs</t>
  <t>Description: Hints the location for human-readable documentation for the relation type of the
resource.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be a string containing an absolute-URI <xref target="RFC3986"/> referring to documentation that
SHOULD be in HTML format.</t>

</section>
<section anchor="preconditionrequired" title="preconditionRequired">

<t><list style="symbols">
  <t>Resource Hint Name: preconditionRequired</t>
  <t>Description: Hints that the resource requires state-changing requests (e.g., PUT, PATCH) to
include a precondition, as per <xref target="RFC7232"/>, to avoid conflicts due to concurrent updates.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, with possible values “etag” and “last-modified” indicating
type of precondition expected.</t>

</section>
<section anchor="authschemes" title="authSchemes">

<t><list style="symbols">
  <t>Resource Hint Name: authSchemes</t>
  <t>Description: Hints that the resource requires authentication using the HTTP Authentication
Framework <xref target="RFC7235"/>.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of objects, each with a “scheme” property containing a string that
corresponds to a HTTP authentication scheme, and optionally a “realms” property containing an array
of zero to many strings that identify protection spaces that the resource is a member of.</t>

<t>For example, a Resource Object might contain the following hint:</t>

<figure><artwork><![CDATA[
  {
    "authSchemes": [
      {
        "scheme": "Basic",
        "realms": ["private"]
      }
    ]
  }
]]></artwork></figure>

</section>
<section anchor="status" title="status">

<t><list style="symbols">
  <t>Resource Hint Name: status</t>
  <t>Description: Hints the status of the resource.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be a string; possible values are:</t>

<t><list style="symbols">
  <t>“deprecated” - indicates that use of the resource is not recommended, but it is still available.</t>
  <t>“gone” - indicates that the resource is no longer available; i.e., it will return a 404 (Not
Found) or 410 (Gone) HTTP status code if accessed.</t>
</list></t>

</section>
</section>
<section anchor="discovery" title="Discovering Home Documents">

<t>Home documents are useful starting points for interacting with APIs, both for using the API itself and for discovering additional information about the API. Home documents are distinct resources with their own URIs, and it is possible that home document resources are linked to from other resources, such as from (possibly select) resources of the API itself, or from resources that provide API directory or discovery services.</t>

<t>In these cases, the question is how to establish the link to a home document. This specification defines and registers a specific link relation type for this purpose, so that links to home documents can be made and identified by using this specific link relation type.</t>

<section anchor="link-relation" title="The “home” Link Relation Type">

<t>The “home” link relation type is used to establish a link to a “home document” resource that provides context and/or starting points for the context resource.</t>

<t>The format of the linked home document is not constrained by the “home” link relation type. A home resource can be either machine-readable or human-readable, and the “home” link relation type is appropriate to link to both kinds of home documents.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when using hints. For example, a naive client might send credentials
to a server that uses the auth-req hint, without checking to see if those credentials are
appropriate for that server.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="resource_hint_registry" title="HTTP Resource Hint Registry">

<t>This specification defines the HTTP Resource Hint Registry. See <xref target="resource_hints"/> for a general
description of the function of resource hints.</t>

<t>In particular, resource hints are generic; that is, they are potentially applicable to any
resource, not specific to one application of HTTP, nor to one particular format. Generally, they
ought to be information that would otherwise be discoverable by interacting with the resource.</t>

<t>Hint names MUST be composed of the lowercase letters (a-z), digits (0-9), underscores (“_”) and
hyphens (“-“), and MUST begin with a lowercase letter.</t>

<t>Hint content SHOULD be described in terms of JSON <xref target="RFC7159"/> constructs.</t>

<t>New hints are registered using the Expert Review process described in <xref target="RFC5226"/> to enforce the
criteria above. Requests for registration of new resource hints are to use the following template:</t>

<t><list style="symbols">
  <t>Resource Hint Name: [hint name]</t>
  <t>Description: [a short description of the hint’s semantics]</t>
  <t>Specification: [reference to specification document]</t>
</list></t>

<t>Initial registrations are enumerated in <xref target="resource_hints"/>.</t>

</section>
<section anchor="media-type-registration" title="Media Type Registration">

<t>TBD</t>

</section>
<section anchor="link-relation-type-registration" title="Link Relation Type Registration">

<t>This specification registers the “home” link relation type in the registry of link relation types <xref target="RFC5988"/>.</t>

<t><list style="symbols">
  <t>Relation Name: home</t>
  <t>Description: Links to a “home document” resource that provides context and/or starting points for the context resource.</t>
  <t>Reference: This specification</t>
</list></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5226" target='https://www.rfc-editor.org/info/rfc5226'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'><organization /></author>
<date year='2008' month='May' />
<abstract><t>Many protocols make use of identifiers consisting of constants and other well-known values.  Even after a protocol has been defined and deployment has begun, new values may need to be assigned (e.g., for a new option type in DHCP, or a new encryption or authentication transform for IPsec).  To ensure that such quantities have consistent values and interpretations across all implementations, their assignment must be administered by a central authority.  For IETF protocols, that role is provided by the Internet Assigned Numbers Authority (IANA).</t><t>In order for IANA to manage a given namespace prudently, it needs guidelines describing the conditions under which new values can be assigned or when modifications to existing values can be made.  If IANA is expected to play a role in the management of a namespace, IANA must be given clear and concise instructions describing that role.  This document discusses issues that should be considered in formulating a policy for assigning values to a namespace and provides guidelines for authors on the specific text that must be included in documents that place demands on IANA.</t><t>This document obsoletes RFC 2434.  This document specifies an Internet Best  Current Practices for the Internet Community, and requests discussion and  suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='RFC' value='5226'/>
<seriesInfo name='DOI' value='10.17487/RFC5226'/>
</reference>



<reference  anchor="RFC5988" target='https://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor="RFC6570" target='https://www.rfc-editor.org/info/rfc6570'>
<front>
<title>URI Template</title>
<author initials='J.' surname='Gregorio' fullname='J. Gregorio'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='M.' surname='Hadley' fullname='M. Hadley'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='D.' surname='Orchard' fullname='D. Orchard'><organization /></author>
<date year='2012' month='March' />
<abstract><t>A URI Template is a compact sequence of characters for describing a range of Uniform Resource Identifiers through variable expansion. This specification defines the URI Template syntax and the process for expanding a URI Template into a URI reference, along with guidelines for the use of URI Templates on the Internet.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6570'/>
<seriesInfo name='DOI' value='10.17487/RFC6570'/>
</reference>



<reference  anchor="RFC7159" target='https://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC5789" target='https://www.rfc-editor.org/info/rfc5789'>
<front>
<title>PATCH Method for HTTP</title>
<author initials='L.' surname='Dusseault' fullname='L. Dusseault'><organization /></author>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2010' month='March' />
<abstract><t>Several applications extending the Hypertext Transfer Protocol (HTTP) require a feature to do partial resource modification.  The existing HTTP PUT method only allows a complete replacement of a document. This proposal adds a new HTTP method, PATCH, to modify an existing HTTP resource.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5789'/>
<seriesInfo name='DOI' value='10.17487/RFC5789'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7232" target='https://www.rfc-editor.org/info/rfc7232'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP/1.1 conditional requests, including metadata header fields for indicating state changes, request header fields for making preconditions on such state, and rules for constructing the responses to a conditional request when one or more preconditions evaluate to false.</t></abstract>
</front>
<seriesInfo name='RFC' value='7232'/>
<seriesInfo name='DOI' value='10.17487/RFC7232'/>
</reference>



<reference  anchor="RFC7233" target='https://www.rfc-editor.org/info/rfc7233'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Range Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='Y.' surname='Lafon' fullname='Y. Lafon' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines range requests and the rules for constructing and combining responses to those requests.</t></abstract>
</front>
<seriesInfo name='RFC' value='7233'/>
<seriesInfo name='DOI' value='10.17487/RFC7233'/>
</reference>



<reference  anchor="RFC7235" target='https://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>



<reference  anchor="RFC7240" target='https://www.rfc-editor.org/info/rfc7240'>
<front>
<title>Prefer Header for HTTP</title>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2014' month='June' />
<abstract><t>This specification defines an HTTP header field that can be used by a client to request that certain behaviors be employed by a server while processing a request.</t></abstract>
</front>
<seriesInfo name='RFC' value='7240'/>
<seriesInfo name='DOI' value='10.17487/RFC7240'/>
</reference>



<reference  anchor="RFC4151" target='https://www.rfc-editor.org/info/rfc4151'>
<front>
<title>The 'tag' URI Scheme</title>
<author initials='T.' surname='Kindberg' fullname='T. Kindberg'><organization /></author>
<author initials='S.' surname='Hawke' fullname='S. Hawke'><organization /></author>
<date year='2005' month='October' />
<abstract><t>This document describes the &quot;tag&quot; Uniform Resource Identifier (URI) scheme.  Tag URIs (also known as &quot;tags&quot;) are designed to be unique across space and time while being tractable to humans.  They are distinct from most other URIs in that they have no authoritative resolution mechanism.  A tag may be used purely as an entity identifier.  Furthermore, using tags has some advantages over the common practice of using &quot;http&quot; URIs as identifiers for non-HTTP-accessible resources.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4151'/>
<seriesInfo name='DOI' value='10.17487/RFC4151'/>
</reference>



<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC7807" target='https://www.rfc-editor.org/info/rfc7807'>
<front>
<title>Problem Details for HTTP APIs</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='E.' surname='Wilde' fullname='E. Wilde'><organization /></author>
<date year='2016' month='March' />
<abstract><t>This document defines a &quot;problem detail&quot; as a way to carry machine- readable details of errors in a HTTP response to avoid the need to define new error response formats for HTTP APIs.</t></abstract>
</front>
<seriesInfo name='RFC' value='7807'/>
<seriesInfo name='DOI' value='10.17487/RFC7807'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to Jan Algermissen, Mike Amundsen, Bill Burke, Sven Dietze, Graham Klyne, Leif Hedstrom,
Joe Hildebrand, Jeni Tennison, Erik Wilde and Jorge Williams for their suggestions and feedback.</t>

</section>
<section anchor="creating-and-serving-home-documents" title="Creating and Serving Home Documents">

<t>When making an API home document available, there are a few things to keep in mind:</t>

<t><list style="symbols">
  <t>A home document is best located at a memorable URI, because its URI will effectively become the
URI for the API itself to clients.</t>
  <t>Home documents can be personalized, just as “normal” home pages can. For example, you might
advertise different URIs, and/or different kinds of link relations, depending on the client’s
identity.</t>
  <t>Home documents ought to be assigned a freshness lifetime (e.g., “Cache-Control: max-age=3600”) so
that clients can cache them, to avoid having to fetch it every time the client interacts with the
service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to documentation for
those constructs.</t>
</list></t>

<section anchor="managing-change-in-home-documents" title="Managing Change in Home Documents">

<t>The URIs used in API home documents MAY change over time. However, changing them can cause issues
for clients that are relying on cached home documents containing old links.</t>

<t>To mitigate the impact of such changes, servers ought to consider:</t>

<t><list style="symbols">
  <t>Reducing the freshness lifetime of home documents before a link change, so that clients are less
likely to refer to an “old” document.</t>
  <t>Regarding the “old” and “new” URIs as equally valid references for an “overlap” period.</t>
  <t>After that period, handling requests for the “old” URIs appropriately; e.g., with a 404 Not
Found, or by redirecting the client to the new URI.</t>
</list></t>

</section>
<section anchor="evolving-and-mixing-apis-with-home-documents" title="Evolving and Mixing APIs with Home Documents">

<t>Using home documents affords the opportunity to change the “shape” of the API over time, without
breaking old clients.</t>

<t>This includes introducing new functions alongside the old ones – by adding new link relation types
with corresponding resource objects – as well as adding new template variables, media types, and
so on.</t>

<t>It’s important to realise that a home document can serve more than one “API” at a time; by listing
all relevant relation types, it can effectively “mix” different APIs, allowing clients to work with
different resources as they see fit.</t>

</section>
</section>
<section anchor="consuming-home-documents" title="Consuming Home Documents">

<t>Clients might use home documents in a variety of ways.</t>

<t>In the most common case – actually consuming the API – the client will scan the Resources Object
for the link relation(s) that it is interested in, and then to interact with the resource(s)
referred to. Resource Hints can be used to optimize communication with the client, as well as to
inform as to the permissible actions (e.g., whether PUT is likely to be supported).</t>

<t>Note that the home document is a “living” document; it does not represent a “contract”, but rather
is expected to be inspected before each interaction. In particular, links from the home document
MUST NOT be assumed to be valid beyond the freshness lifetime of the home document, as per HTTP’s
caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the home document (as per <xref target="RFC7234"/>), to avoid fetching it
before every interaction (which would otherwise be required).</t>

<t>Likewise, a client encountering a 404 (Not Found) on a link is encouraged obtain a fresh copy of
the home document, to assure that it is up-to-date.</t>

</section>
<section anchor="frequently-asked-questions" title="Frequently Asked Questions">

<section anchor="why-not-use-insert-other-service-description-format" title="Why not use (insert other service description format)?">

<t>There are a fair number of existing service description formats, including those that specialise in
“RESTful” interactions. However, these formats generally are optimised for pairwise integration, or
one-server-to-many-client integration, and less capable of describing protocols where both the
server and client can evolve and be extended.</t>

</section>
<section anchor="why-doesnt-the-format-allow-references-or-inheritance" title="Why doesn’t the format allow references or inheritance?">

<t>Adding inheritance or references would allow more modularity in the format and make it more
compact, at the cost of considerable complexity and the associated potential for errors (both in
the specification and by its users).</t>

<t>Since good tools and compression are effective ways to achieve the same ends, this specification
doesn’t attempt them.</t>

</section>
<section anchor="what-about-faults-ie-errors" title="What about “Faults” (i.e., errors)?">

<t>In HTTP, errors are conveyed by HTTP status codes. While this specification could (and even may)
allow enumeration of possible error conditions, there’s a concern that this will encourage
applications to define many such “faults”, leading to tight coupling between the application and
its clients. See <xref target="RFC7807"/> for further considerations.</t>

</section>
<section anchor="how-do-i-find-the-schema-for-a-format" title="How Do I find the schema for a format?">

<t>That isn’t addressed by home documents. Ultimately, it’s up to the media type accepted and
generated by resources to define and constrain (or not) their syntax.</t>

</section>
<section anchor="how-do-i-express-complex-query-arguments" title="How do I express complex query arguments?">

<t>Complex queries – i.e., those that exceed the expressive power of Link Templates or would require
ambiguous properties of a “resources” object – aren’t intended to be defined by a home document.
The appropriate way to do this is with a “form” language, much as HTML defines.</t>

<t>Note that it is possible to support multiple query syntaxes on the same base URL, using more than
one link relation type; see the example at the start of the document.</t>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAJAbF10AA81c+3PbRpL+HX/FFP1DpBwpya/YkW8vJ79iZf3I2vKltlKu
FEgMSaxAgIsBRDMu799+/XX3DAYgJSfZ27vbqo0pEphHTz+/7p7JZJI0eVPY
U/OiWlnztJq1K1s2zsyr2ry4uPjRnP147pJ0Oq3t1WmSVbMyXdHTWZ3Om0lZ
NU1eLpbpavI3V5WTJY0xOfkmydKGnrlzcvtBMqOPi6renpq8nFdJkq/rU9PU
rWvunJx8e3InSWubnprvbWnrtEg2VX25qKt2fZpc2i39lZ2a87KxdWmbyVNM
miSuScvsl7SoSppka12yzk/Nz001Gxv6T15mtIGxcVXd1Hbu6NN2pR+aOp/R
T7NqtU71A+92TIsr8tJ+SJK0bZZVfZqYSWLof3npTs2rI/M67JS/FiK8SuvL
4S9VvUjL/Ne0yavylL+xqzQvTs2KiPWf+M8RbYV/aGta97Jp1u70+Hiz2Rz5
X4+TpKzqFY1xZTHG2+dP7ty+/a1+vPvtw2/04/07d8LHbx8+1I/f3H9woh8f
3L7vX3tw5+69U6I/nUJ/6PsPHvpnvnl492H3+J3u493u4/3w8R7NkkwmE5NO
ibJE0CS5WObOZMpEZl1X68pZZ1IzAmuEX0ZGFsFcVhLjTOtq46xy3KzIcShH
MjjRxP7yGv9pql/e2jSztcNE1uTOtTR4kTsZqOHJwSNmlpZmaunbtswMzfPv
nsyLvFm20yM6+GNQ+/h88vS4SKe2cMeBg//jSMZfVTRwbWfYykE1b2w5Nm25
bqc049JmhzoXTRrPwIeo0+QVTxBGPsbQb2XE2TItF6BNbXkL9ssLBbvmjTte
LCfrlN7tL/k5kSCcblXSqVQtrW61Lixozl9CCKy9eZZNfpn3R8YxrPIsK2yS
3II41lXWzjBekpwzAaaWhiApoAXMSJ4dfSy2LF60kKYyrbNytp8+CRedfP7M
Z5au10U+k7WZqllaHCMdHvFTluNb0gk/2alhBqFRj8y7drY0o6CaRkxAGj/D
PDmpikVNKge8N7MOzEcryHK3TvlrtyVKr4gMq/TSJj1yXZGYptPCYpxVOluS
PqDTmdWVc7QmG9TQ2KRgKmdoyMZUc/6xT2b6Nhmtcrxr66ucFnI0SpLHW1on
iITFj/EaUaVHACIdsQJ9acp2NSVa0OhT0ozzHDpqXlcrs6JN0dnTHykTnBY7
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

-->

</rfc>

