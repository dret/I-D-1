<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.39 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfc2629xslt/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-nottingham-json-home-05" category="info">

  <front>
    <title>Home Documents for HTTP APIs</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2016"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a “home document” format for non-browser HTTP clients.</t>



    </abstract>


    <note title="Note to Readers">


<t>The issues list for this draft can be found at <eref target="https://github.com/mnot/I-D/labels/json-home">https://github.com/mnot/I-D/labels/json-home</eref>.</t>

<t>The most recent (often, unpublished) draft is at <eref target="https://mnot.github.io/I-D/json-home/">https://mnot.github.io/I-D/json-home/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/mnot/I-D/commits/gh-pages/json-home">https://github.com/mnot/I-D/commits/gh-pages/json-home</eref>.</t>

<t>For information about implementations, see <eref target="https://github.com/mnot/I-D/wiki/json-home">https://github.com/mnot/I-D/wiki/json-home</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>It is becoming increasingly common to use HTTP <xref target="RFC7230"/> for applications other than traditional
Web browsing. Such “HTTP APIs” are used to integrate processes on disparate systems, make
information available to machines across the Internet, and as part of the implementation of
“micro-services.”</t>

<t>By using HTTP, these applications realise a number of benefits, from message framing to caching,
and well-defined semantics that are broadly understood and useful.</t>

<t>However, one of the core architectural tenants of the Web is the use of links <xref target="RFC3986"/> to
navigate between states; typically, these applications document static URLs that clients need to
know and servers need to implement, and any interaction outside of these bounds is uncharted
territory.</t>

<t>In contrast, a link-driven application discovers relevant resources at run time, using a shared
vocabulary of link relations <xref target="RFC5988"/> and internet media types <xref target="RFC6838"/> to support a “follow
your nose” style of interaction.</t>

<t>A client can then decide which resources to interact with “on the fly” based upon its
capabilities (as described by link relations), and the server can safely add new resources and
formats without disturbing clients that are not yet aware of them.</t>

<t>Doing so can provide any of a number of benefits, including:</t>

<t><list style="symbols">
  <t>Extensibility - Because new server capabilities can be expressed as link relations, new features can be layered in without introducing a new API version; clients will discover them in the home document. This promotes loose coupling between clients and servers.</t>
  <t>Evolvability - Likewise, interfaces can change gradually by introducing a new link relation and/or format while still supporting the old ones.</t>
  <t>Customisation - Home documents can be tailored for the client, allowing diffrent classes of service or different client permissions to be exposed naturally.</t>
  <t>Flexible deployment - Since URLs aren’t baked into documentation, the server can choose what URLs to use for a given service.</t>
  <t>API mixing - Likewise, more than one API can be deployed on a given server, without fear of collisions.</t>
</list></t>

<t>Whether an application ought to use links in this fashion depends on how it is deployed; generally,
the most benefit will be received when multiple instances of the service are deployed, possibly
with different versions, and they are consumed by clients with different capabilities. In
particular, Internet Standards that use HTTP as a substrate are likely to require the attributes
described above.</t>

<t>Clients need to be able to discover information about these applications to use it efficiently;
just as with a human-targeted “home page” for a site, there is a need for a “home document” for a
HTTP API that describes it to non-browser clients.</t>

<t>Of course, an HTTP API might use any format to do so; however, there are advantages to having a
common home document format. This specification defines one, using the JSON format <xref target="RFC7159"/>.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="api-home-documents" title="API Home Documents">

<t>An API Home Document (or, interchangeably, “home document”) uses the format described in <xref target="RFC7159"/>
and has the media type “application/json-home”.</t>

<t>Its content consists of a root object with:</t>

<t><list style="symbols">
  <t>A “resources” member, whose value is an object that describes the resources associated with the
API. Its member names are link relation types (as defined by <xref target="RFC5988"/>), and their values are
Resource Objects (<xref target="resource-object"/>).</t>
  <t>Optionally, a “api” member, whose value is an API Object (<xref target="api-object"/>) that contains
information about the API as a whole.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET / HTTP/1.1
  Host: example.org
  Accept: application/json-home

  HTTP/1.1 200 OK
  Content-Type: application/json-home
  Cache-Control: max-age=3600
  Connection: close

  {
    "api": {
      "title": "Example API",
      "links": {
        "author": "mailto:api-admin@example.com",
        "describedBy": "https://example.com/api-docs/"
      }
    }
    "resources": {
      "tag:me@example.com,2016:widgets": {
        "href": "/widgets/"
      },
      "tag:me@example.com,2016:widget": {
        "hrefTemplate": "/widgets/{widget_id}",
        "hrefVars": {
          "widget_id": "https://example.org/param/widget"
        },
        "hints": {
          "allow": ["GET", "PUT", "DELETE", "PATCH"],
          "formats": {
            "application/json": {}
          },
          "acceptPatch": ["application/json-patch+json"],
          "acceptRanges": ["bytes"]
        }
      }
    }
  }
]]></artwork></figure>

<t>Here, we have a home document for the API “Example API”, whose author can be contacted at the
e-mail address “api-admin@example.com”, and whose documentation is at
“https://example.com/api-docs/”.</t>

<t>It links to a resource “/widgets/” with the relation “tag:me@example.com,2016:widgets”. It also
links to an unknown number of resources with the relation type “tag:me@example.com,2016:widget”
using a URI Template <xref target="RFC6570"/>, along with a mapping of identifiers to a variable for use in that
template.</t>

<t>It also gives several hints about interacting with the latter “widget” resources, including the
HTTP methods usable with them, the PATCH and POST formats they accept, and the fact that they
support partial requests <xref target="RFC7233"/> using the “bytes” range-specifier.</t>

<t>It gives no such hints about the “widgets” resource. This does not mean that it (for example)
doesn’t support any HTTP methods; it means that the client will need to discover this by
interacting with the resource, and/or examining the documentation for its link relation type.</t>

<t>Effectively, this names a set of behaviors, as described by a resource object, with a link relation
type. This means that several link relations might apply to a common base URL; e.g.:</t>

<figure><artwork><![CDATA[
{
  "resources": {
    "tag:me@example.com,2016:search-by-id": {
      "hrefTemplate": "/search?id={widget_id}",
      "hrefVars": {
        "widget_id": "https://example.org/param/widget_id"
      }
    },
    "tag:me@example.com,2016:search-by-name": {
      "hrefTemplate": "/search?name={widget_name}",
      "hrefVars": {
        "widget_name": "https://example.org/param/widget_name"
      }
    }
  }
}
]]></artwork></figure>

<t>Note that the examples above use both tag <xref target="RFC4151"/> and https <xref target="RFC7230"/> URIs; any URI scheme can be used to identify link relations and other artefacts in home documents.</t>

</section>
<section anchor="api-object" title="API Objects">

<t>An API Object contains links to information about the API itself.</t>

<t>Two members are defined:</t>

<t><list style="symbols">
  <t>“title” has a string value indicating the name of the API;</t>
  <t>“links” has an object value, whose member names are link relation types <xref target="RFC5988"/>, and values
are URLs <xref target="RFC3986"/>. The context of these links is the API home document as a whole.</t>
</list></t>

<t>Future members MAY be defined by specifications that update this document.</t>

</section>
<section anchor="resource-object" title="Resource Objects">

<t>A Resource Object links to resources of the defined type using one of two mechanisms; either a
direct link (in which case there is exactly one resource of that relation type associated with the
API), or a templated link, in which case there are zero to many such resources.</t>

<t>Direct links are indicated with an “href” property, whose value is a URI <xref target="RFC3986"/>.</t>

<t>Templated links are indicated with an “hrefTemplate” property, whose value is a URI Template
<xref target="RFC6570"/>. When “hrefTemplate” is present, the Resource Object MUST have a “hrefVars” property;
see “Resolving Templated Links”.</t>

<t>Resource Objects MUST have exactly one of the “href” and “href-vars” properties.</t>

<t>In both forms, the links that “href” and “hrefTemplate” refer to are URI-references <xref target="RFC3986"/>
whose base URI is that of the API Home Document itself.</t>

<t>Resource Objects MAY also have a “hints” property, whose value is an object that uses named
Resource Hints (see <xref target="resource_hints"/>) as its properties.</t>

<section anchor="resolving-templated-links" title="Resolving Templated Links">

<t>A URI can be derived from a Templated Link by treating the “hrefTemplate” value as a Level 3 URI
Template <xref target="RFC6570"/>, using the “hrefVars” property to fill the template.</t>

<t>The “hrefVars” property, in turn, is an object that acts as a mapping between variable names
available to the template and absolute URIs that are used as global identifiers for the semantics
and syntax of those variables.</t>

<t>For example, given the following Resource Object:</t>

<figure><artwork><![CDATA[
  "https://example.org/rel/widget": {
    "hrefTemplate": "/widgets/{widget_id}",
    "hrefVars": {
      "widget_id": "https://example.org/param/widget"
    },
    "hints": {
      "allow": ["GET", "PUT", "DELETE", "PATCH"],
      "formats": {
        "application/json": {}
      },
      "acceptPatch": ["application/json-patch+json"],
      "acceptRanges": ["bytes"]
    }
  }
]]></artwork></figure>

<t>If you understand that “https://example.org/param/widget” is an numeric identifier for a widget, you
can then find the resource corresponding to widget number 12345 at
“https://example.org/widgets/12345” (assuming that the Home Document is located at
“https://example.org/”).</t>

</section>
</section>
<section anchor="resource_hints" title="Resource Hints">

<t>Resource hints allow clients to find relevant information about interacting with a resource
beforehand, as a means of optimizing communications, as well as advertising available behaviors
(e.g., to aid in laying out a user interface for consuming the API).</t>

<t>Hints are just that – they are not a “contract”, and are to only be taken as advisory. The runtime
behavior of the resource always overrides hinted information.</t>

<t>For example, a resource might hint that the PUT method is allowed on all “widget” resources. This
means that generally, the user has the ability to PUT to a particular resource, but a specific
resource might reject a PUT based upon access control or other considerations. More fine-grained
information might be gathered by interacting with the resource (e.g., via a GET), or by another
resource “containing” it (such as a “widgets” collection) or describing it (e.g., one linked to it
with a “describedBy” link relation).</t>

<t>This specification defines a set of common hints, based upon information that’s discoverable by
directly interacting with resources. See <xref target="resource_hint_registry"/> for information on defining new
hints.</t>

<section anchor="allow" title="allow">

<t><list style="symbols">
  <t>Resource Hint Name: allow</t>
  <t>Description: Hints the HTTP methods that the current client will be able to use to interact with
the resource; equivalent to the Allow HTTP response header.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing HTTP methods.</t>

</section>
<section anchor="formats" title="formats">

<t><list style="symbols">
  <t>Resource Hint Name: formats</t>
  <t>Description: Hints the representation types that the resource produces and consumes, using the
GET and PUT methods respectively, subject to the ‘allow’ hint.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an object, whose keys are media types, and values are objects, currently empty.</t>

</section>
<section anchor="acceptpatch" title="acceptPatch">

<t><list style="symbols">
  <t>Resource Hint Name: accept-Patch</t>
  <t>Description: Hints the PATCH <xref target="RFC5789"/> request formats accepted by the resource for this
client; equivalent to the Accept-Patch HTTP response header.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing media types.</t>

<t>When this hint is present, “PATCH” SHOULD be listed in the “allow” hint.</t>

</section>
<section anchor="acceptpost" title="acceptPost">

<t><list style="symbols">
  <t>Resource Hint Name: acceptPost</t>
  <t>Description: Hints the POST request formats accepted by the resource for this client.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing media types.</t>

<t>When this hint is present, “POST” SHOULD be listed in the “allow” hint.</t>

</section>
<section anchor="acceptranges" title="acceptRanges">

<t><list style="symbols">
  <t>Resource Hint Name: acceptRanges</t>
  <t>Description: Hints the range-specifiers available to the client for this resource; equivalent to
the Accept-Ranges HTTP response header <xref target="RFC7233"/>.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing HTTP range-specifiers (typically, “bytes”).</t>

</section>
<section anchor="acceptprefer" title="acceptPrefer">

<t><list style="symbols">
  <t>Resource Hint Name: acceptPrefer</t>
  <t>Description: Hints the preferences <xref target="RFC7240"/> supported by the resource. Note that, as per that
specifications, a preference can be ignored by the server.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing preferences.</t>

</section>
<section anchor="docs" title="docs">

<t><list style="symbols">
  <t>Resource Hint Name: docs</t>
  <t>Description: Hints the location for human-readable documentation for the relation type of the
resource.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be a string containing an absolute-URI <xref target="RFC3986"/> referring to documentation that
SHOULD be in HTML format.</t>

</section>
<section anchor="preconditionrequired" title="preconditionRequired">

<t><list style="symbols">
  <t>Resource Hint Name: preconditionRequired</t>
  <t>Description: Hints that the resource requires state-changing requests (e.g., PUT, PATCH) to
include a precondition, as per <xref target="RFC7232"/>, to avoid conflicts due to concurrent updates.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, with possible values “etag” and “last-modified” indicating
type of precondition expected.</t>

</section>
<section anchor="authschemes" title="authSchemes">

<t><list style="symbols">
  <t>Resource Hint Name: authSchemes</t>
  <t>Description: Hints that the resource requires authentication using the HTTP Authentication
Framework <xref target="RFC7235"/>.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of objects, each with a “scheme” property containing a string that
corresponds to a HTTP authentication scheme, and optionally a “realms” property containing an array
of zero to many strings that identify protection spaces that the resource is a member of.</t>

<t>For example, a Resource Object might contain the following hint:</t>

<figure><artwork><![CDATA[
  {
    "authSchemes": [
      {
        "scheme": "Basic",
        "realms": ["private"]
      }
    ]
  }
]]></artwork></figure>

</section>
<section anchor="status" title="status">

<t><list style="symbols">
  <t>Resource Hint Name: status</t>
  <t>Description: Hints the status of the resource.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be a string; possible values are:</t>

<t><list style="symbols">
  <t>“deprecated” - indicates that use of the resource is not recommended, but it is still available.</t>
  <t>“gone” - indicates that the resource is no longer available; i.e., it will return a 404 (Not
Found) or 410 (Gone) HTTP status code if accessed.</t>
</list></t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when using hints. For example, a naive client might send credentials
to a server that uses the auth-req hint, without checking to see if those credentials are
appropriate for that server.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="resource_hint_registry" title="HTTP Resource Hint Registry">

<t>This specification defines the HTTP Resource Hint Registry. See <xref target="resource_hints"/> for a general
description of the function of resource hints.</t>

<t>In particular, resource hints are generic; that is, they are potentially applicable to any
resource, not specific to one application of HTTP, nor to one particular format. Generally, they
ought to be information that would otherwise be discoverable by interacting with the resource.</t>

<t>Hint names MUST be composed of the lowercase letters (a-z), digits (0-9), underscores (“_”) and
hyphens (“-“), and MUST begin with a lowercase letter.</t>

<t>Hint content SHOULD be described in terms of JSON <xref target="RFC7159"/> constructs.</t>

<t>New hints are registered using the Expert Review process described in <xref target="RFC5226"/> to enforce the
criteria above. Requests for registration of new resource hints are to use the following template:</t>

<t><list style="symbols">
  <t>Resource Hint Name: [hint name]</t>
  <t>Description: [a short description of the hint’s semantics]</t>
  <t>Specification: [reference to specification document]</t>
</list></t>

<t>Initial registrations are enumerated in <xref target="resource_hints"/>.</t>

</section>
<section anchor="media-type-registration" title="Media Type Registration">

<t>TBD</t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor='RFC2119' target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor='RFC3986' target='http://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor='RFC5226' target='http://www.rfc-editor.org/info/rfc5226'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'><organization /></author>
<date year='2008' month='May' />
<abstract><t>Many protocols make use of identifiers consisting of constants and other well-known values.  Even after a protocol has been defined and deployment has begun, new values may need to be assigned (e.g., for a new option type in DHCP, or a new encryption or authentication transform for IPsec).  To ensure that such quantities have consistent values and interpretations across all implementations, their assignment must be administered by a central authority.  For IETF protocols, that role is provided by the Internet Assigned Numbers Authority (IANA).</t><t>In order for IANA to manage a given namespace prudently, it needs guidelines describing the conditions under which new values can be assigned or when modifications to existing values can be made.  If IANA is expected to play a role in the management of a namespace, IANA must be given clear and concise instructions describing that role.  This document discusses issues that should be considered in formulating a policy for assigning values to a namespace and provides guidelines for authors on the specific text that must be included in documents that place demands on IANA.</t><t>This document obsoletes RFC 2434.  This document specifies an Internet Best  Current Practices for the Internet Community, and requests discussion and  suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='26'/>
<seriesInfo name='RFC' value='5226'/>
<seriesInfo name='DOI' value='10.17487/RFC5226'/>
</reference>



<reference  anchor='RFC5988' target='http://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor='RFC6570' target='http://www.rfc-editor.org/info/rfc6570'>
<front>
<title>URI Template</title>
<author initials='J.' surname='Gregorio' fullname='J. Gregorio'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='M.' surname='Hadley' fullname='M. Hadley'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='D.' surname='Orchard' fullname='D. Orchard'><organization /></author>
<date year='2012' month='March' />
<abstract><t>A URI Template is a compact sequence of characters for describing a range of Uniform Resource Identifiers through variable expansion. This specification defines the URI Template syntax and the process for expanding a URI Template into a URI reference, along with guidelines for the use of URI Templates on the Internet.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6570'/>
<seriesInfo name='DOI' value='10.17487/RFC6570'/>
</reference>



<reference  anchor='RFC7159' target='http://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference  anchor='RFC7234' target='http://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor='RFC5789' target='http://www.rfc-editor.org/info/rfc5789'>
<front>
<title>PATCH Method for HTTP</title>
<author initials='L.' surname='Dusseault' fullname='L. Dusseault'><organization /></author>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2010' month='March' />
<abstract><t>Several applications extending the Hypertext Transfer Protocol (HTTP) require a feature to do partial resource modification.  The existing HTTP PUT method only allows a complete replacement of a document. This proposal adds a new HTTP method, PATCH, to modify an existing HTTP resource.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5789'/>
<seriesInfo name='DOI' value='10.17487/RFC5789'/>
</reference>



<reference  anchor='RFC6838' target='http://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor='RFC7232' target='http://www.rfc-editor.org/info/rfc7232'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP/1.1 conditional requests, including metadata header fields for indicating state changes, request header fields for making preconditions on such state, and rules for constructing the responses to a conditional request when one or more preconditions evaluate to false.</t></abstract>
</front>
<seriesInfo name='RFC' value='7232'/>
<seriesInfo name='DOI' value='10.17487/RFC7232'/>
</reference>



<reference  anchor='RFC7233' target='http://www.rfc-editor.org/info/rfc7233'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Range Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='Y.' surname='Lafon' fullname='Y. Lafon' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines range requests and the rules for constructing and combining responses to those requests.</t></abstract>
</front>
<seriesInfo name='RFC' value='7233'/>
<seriesInfo name='DOI' value='10.17487/RFC7233'/>
</reference>



<reference  anchor='RFC7235' target='http://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>



<reference  anchor='RFC7240' target='http://www.rfc-editor.org/info/rfc7240'>
<front>
<title>Prefer Header for HTTP</title>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2014' month='June' />
<abstract><t>This specification defines an HTTP header field that can be used by a client to request that certain behaviors be employed by a server while processing a request.</t></abstract>
</front>
<seriesInfo name='RFC' value='7240'/>
<seriesInfo name='DOI' value='10.17487/RFC7240'/>
</reference>



<reference  anchor='RFC4151' target='http://www.rfc-editor.org/info/rfc4151'>
<front>
<title>The 'tag' URI Scheme</title>
<author initials='T.' surname='Kindberg' fullname='T. Kindberg'><organization /></author>
<author initials='S.' surname='Hawke' fullname='S. Hawke'><organization /></author>
<date year='2005' month='October' />
<abstract><t>This document describes the &quot;tag&quot; Uniform Resource Identifier (URI) scheme.  Tag URIs (also known as &quot;tags&quot;) are designed to be unique across space and time while being tractable to humans.  They are distinct from most other URIs in that they have no authoritative resolution mechanism.  A tag may be used purely as an entity identifier.  Furthermore, using tags has some advantages over the common practice of using &quot;http&quot; URIs as identifiers for non-HTTP-accessible resources.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4151'/>
<seriesInfo name='DOI' value='10.17487/RFC4151'/>
</reference>



<reference  anchor='RFC7230' target='http://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to Jan Algermissen, Mike Amundsen, Bill Burke, Sven Dietze, Graham Klyne, Leif Hedstrom,
Joe Hildebrand, Jeni Tennison, Erik Wilde and Jorge Williams for their suggestions and feedback.</t>

</section>
<section anchor="considerations-for-creating-and-serving-home-documents" title="Considerations for Creating and Serving Home Documents">

<t>When making an API home document available, there are a few things to keep in mind:</t>

<t><list style="symbols">
  <t>A home document is best located at a memorable URI, because its URI will effectively become the
URI for the API itself to clients.</t>
  <t>Home documents can be personalized, just as “normal” home pages can. For example, you might
advertise different URIs, and/or different kinds of link relations, depending on the client’s
identity.</t>
  <t>Home documents ought to be assigned a freshness lifetime (e.g., “Cache-Control: max-age=3600”) so
that clients can cache them, to avoid having to fetch it every time the client interacts with the
service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to documentation for
those constructs.</t>
</list></t>

<section anchor="managing-change-in-home-documents" title="Managing Change in Home Documents">

<t>The URIs used in API home documents MAY change over time. However, changing them can cause issues
for clients that are relying on cached home documents containing old links.</t>

<t>To mitigate the impact of such changes, servers ought to consider:</t>

<t><list style="symbols">
  <t>Reducing the freshness lifetime of home documents before a link change, so that clients are less
likely to refer to an “old” document.</t>
  <t>Regarding the “old” and “new” URIs as equally valid references for an “overlap” period.</t>
  <t>After that period, handling requests for the “old” URIs appropriately; e.g., with a 404 Not
Found, or by redirecting the client to the new URI.</t>
</list></t>

</section>
<section anchor="evolving-and-mixing-apis-with-home-documents" title="Evolving and Mixing APIs with Home Documents">

<t>Using home documents affords the opportunity to change the “shape” of the API over time, without
breaking old clients.</t>

<t>This includes introducing new functions alongside the old ones – by adding new link relation types
with corresponding resource objects – as well as adding new template variables, media types, and
so on.</t>

<t>It’s important to realise that a home document can serve more than one “API” at a time; by listing
all relevant relation types, it can effectively “mix” different APIs, allowing clients to work with
different resources as they see fit.</t>

</section>
</section>
<section anchor="considerations-for-consuming-home-documents" title="Considerations for Consuming Home Documents">

<t>Clients might use home documents in a variety of ways.</t>

<t>In the most common case – actually consuming the API – the client will scan the Resources Object
for the link relation(s) that it is interested in, and then to interact with the resource(s)
referred to. Resource Hints can be used to optimize communication with the client, as well as to
inform as to the permissible actions (e.g., whether PUT is likely to be supported).</t>

<t>Note that the home document is a “living” document; it does not represent a “contract”, but rather
is expected to be inspected before each interaction. In particular, links from the home document
MUST NOT be assumed to be valid beyond the freshness lifetime of the home document, as per HTTP’s
caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the home document (as per <xref target="RFC7234"/>), to avoid fetching it
before every interaction (which would otherwise be required).</t>

<t>Likewise, a client encountering a 404 Not Found on a link is encouraged obtain a fresh copy of the
home document, to assure that it is up-to-date.</t>

</section>
<section anchor="frequently-asked-questions" title="Frequently Asked Questions">

<section anchor="why-doesnt-the-format-allow-references-or-inheritance" title="Why doesn’t the format allow references or inheritance?">

<t>Adding inheritance or references would allow more modularity in the format and make it more
compact, at the cost of considerable complexity and the associated potential for errors (both in
the specification and by its users).</t>

<t>Since good tools and compression are effective ways to achieve the same ends, this specification
doesn’t attempt them.</t>

</section>
<section anchor="what-about-faults-ie-errors" title="What about “Faults” (i.e., errors)?">

<t>In HTTP, errors are conveyed by HTTP status codes. While this specification could (and even may)
allow enumeration of possible error conditions, there’s a concern that this will encourage
applications to define many such “faults”, leading to tight coupling between the application and
its clients.</t>

</section>
<section anchor="how-do-i-find-the-schema-for-a-format" title="How Do I find the schema for a format?">

<t>That isn’t addressed by home documents. Ultimately, it’s up to the media type accepted and
generated by resources to define and constrain (or not) their syntax.</t>

</section>
<section anchor="how-do-i-express-complex-query-arguments" title="How do I express complex query arguments?">

<t>Complex queries – i.e., those that exceed the expressive power of Link Templates or would require
ambiguous properties of a “resources” object – aren’t intended to be defined by a home document.
The appropriate way to do this is with a “form” language, much as HTML defines.</t>

<t>Note that it is possible to support multiple query syntaxes on the same base URL, using more than
one link relation type; see the example at the start of the document.</t>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAHWaNlgAA8VcWXPcRpJ+x6+oaD+InO0mqcuWqZ316rJFjw6PRK1jw6FQ
VAPV3RiigR4cpNoKzm/f/DKzCgV0U7I9O7t+kJtAnVl5fpmF2WyWtHlbuFPz
vFo787RKu7Ur28Ysqto8Pz//yTz66axJ7Hxeu8vTJKvS0q6pdVbbRTsrq7bN
y+XKrmd/a6pytqIxZif3k8y21ObOye2vk5R+Lqt6e2ryclElSb6pT01bd017
5+Tk25M7ia2dPTU/uNLVtkiuqvpiWVfd5jS5cFv6Kzs1Z2Xr6tK1s6eYNEma
1pbZB1tUJU2ydU2yyU/NL22VTg39k5cZbWBqmqpua7do6Nd2rT/aOk/pVVqt
N1Z/8G6ntLgiL937JLFdu6rq08TMEkP/5WVzal4emVdhp/xYiPDS1hfjN1W9
tGX+q23zqjzlJ25t8+LUrIlY/4l/jmgr/KKrad2rtt00p8fHV1dXR/7tcZKU
Vb2mMS4dxnjz/ZM7t29/qz/vfvvga/15/86d8PPbBw/059f3vznRn9/cvu+7
fXPn7r1Toj+dwnDo+9888G2+fnD3Qd/8Tv/zbv/zfvh5j2ZJZrOZsXOiLBE0
Sc5XeWMyZSKzqatN1bjGWDMBa4Q3EyOLYC4riXHmdXXVOOW4tMhxKEcyONHE
fXiFf9rqwxtnM1c3mMiZvGk6GrzIGxmo5cnBIya1pZk7etqVmaF5/t2TeZm3
q25+RAd/DGofn82eHhd27ormOHDwfxzJ+OuKBq5diq0cVIvWlVPTlZtuTjOu
XHaoc9Gk8Qx8iDpNXvEEYeRjDP1GRkxXtlyCNrXjLbgvLxTsmrfN8XI121jq
O1zy90SCcLpVSadSdbS69aZwoDk/hBA49/lZrvKLfDgyjmGdZ1nhkuQriGNd
ZV2K8ZLkjAkwdzQESQEtICV5buhnsWXxooW0lekaJ2f76ZNw0cn1NZ+Z3WyK
PJW1mapdORwjHR7xU5bjKemEn93cMIPQqEfmbZeuzCSopgkTkMbPME9OqmJZ
k8oB76WuAfPRCrK82Vh+3GyJ0msiw9peuGRArksSUzsvHMZZ23RF+oBOJ62r
pqE1uaCGpsaCqRpDQ7amWvDLIZnpaTJZ59R3Rlx9mdNKjiZJ8nhLCwWVsPop
+hFZBhQg2hEv0ENTdus5EYOGn5NqXORQUou6Wps17YoOn/6wTHFabcqrXU4T
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

-->

</rfc>

